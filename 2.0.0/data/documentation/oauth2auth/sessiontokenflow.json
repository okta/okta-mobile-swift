{
  "abstract" : [
    {
      "text" : "An authentication flow class that exchanges a Session Token for access tokens.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10OAuth2Auth16SessionTokenFlowC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "SessionTokenFlow"
      }
    ],
    "modules" : [
      {
        "name" : "OAuth2Auth"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "SessionTokenFlow"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "SessionTokenFlow"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "actor"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "SessionTokenFlow"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This flow is typically used in conjunction with the ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/okta\/okta-auth-swift",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ". For native authentication using the Okta Identity Engine (OIE), please use the ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/okta\/okta-idx-swift",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Usage",
          "level" : 2,
          "text" : "Usage",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "When implementing OktaAuthNative, the ",
              "type" : "text"
            },
            {
              "code" : "onStatusChange",
              "type" : "codeVoice"
            },
            {
              "text" : " argument is invoked for various state changes throughout authentication. Once the ",
              "type" : "text"
            },
            {
              "code" : ".success",
              "type" : "codeVoice"
            },
            {
              "text" : " state is received, the returned status contains a session token which can be exchanged for full access tokens. Within that handler, you can use the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/start(with:context:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " function to receive a token.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "switch status.statusType {",
            "case .success:",
            "    guard let status = status as? OktaAuthStatusSuccess,",
            "          let sessionToken = status.sessionToken",
            "    else {",
            "        \/\/ Handle this error condition",
            "        return",
            "    }",
            "    ",
            "    let flow: SessionTokenFlow",
            "    do {",
            "        \/\/ Use the convenience initializer which reads",
            "        \/\/ client configuration from `Okta.plist`.",
            "        flow = try SessionTokenFlow()",
            "    } catch {",
            "        \/\/ Handle this error",
            "        return",
            "    }",
            "    ",
            "    Task {",
            "        do {",
            "            let token = try await flow.start(with: sessionToken)",
            "            try Credential.store(token)",
            "        } catch {",
            "            \/\/ Handle the error",
            "        }",
            "    }",
            "",
            "default:",
            "    \/\/ Handle other statuses",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIClientDelegate",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/AuthenticationFlow",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/IDTokenValidatorContext",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/OAuth2ClientDelegate",
        "doc:\/\/OAuth2Auth\/s8CopyableP",
        "doc:\/\/OAuth2Auth\/s8SendableP",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/UsesDelegateCollection",
        "doc:\/\/OAuth2Auth\/ScA"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "anchor" : "Initializers",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/init(client:additionalParameters:)",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/init(issuerURL:clientId:scope:redirectUri:additionalParameters:)"
      ],
      "title" : "Initializers"
    },
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/additionalParameters",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/client",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/context-swift.property",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/delegateCollection",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/isAuthenticating"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/reset()",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/start(with:context:)",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/start(with:context:completion:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "anchor" : "Type-Aliases",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/Context-swift.typealias"
      ],
      "title" : "Type Aliases"
    },
    {
      "anchor" : "Default-Implementations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/APIClientDelegate-Implementations",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/Actor-Implementations",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/AuthenticationFlow-Implementations",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/OAuth2ClientDelegate-Implementations",
        "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/UsesDelegateCollection-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/oauth2auth\/sessiontokenflow"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://AuthFoundation/documentation/AuthFoundation/APIClientDelegate": {
  "abstract" : [
    {
      "text" : "Protocol that delegates of APIClient instances can conform to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "APIClientDelegate"
    },
    {
      "kind" : "text",
      "text" : " : AnyObject, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s8SendableP",
      "text" : "Sendable"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIClientDelegate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "APIClientDelegate",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/apiclientdelegate"
},
"doc://AuthFoundation/documentation/AuthFoundation/AuthenticationFlow": {
  "abstract" : [
    {
      "text" : "A protocol defining a type of authentication flow.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AuthenticationFlow"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation23IDTokenValidatorContextP",
      "text" : "IDTokenValidatorContext"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation22UsesDelegateCollectionP",
      "text" : "UsesDelegateCollection"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ScA",
      "text" : "Actor"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/AuthenticationFlow",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "AuthenticationFlow",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/authenticationflow"
},
"doc://AuthFoundation/documentation/AuthFoundation/IDTokenValidatorContext": {
  "abstract" : [
    {
      "text" : "Protocol used to supply contextual information to a validator.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IDTokenValidatorContext"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s8SendableP",
      "text" : "Sendable"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/IDTokenValidatorContext",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "IDTokenValidatorContext",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/idtokenvalidatorcontext"
},
"doc://AuthFoundation/documentation/AuthFoundation/OAuth2ClientDelegate": {
  "abstract" : [
    {
      "text" : "Delegate protocol used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/OAuth2Client",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to communicate important events.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OAuth2ClientDelegate"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation17APIClientDelegateP",
      "text" : "APIClientDelegate"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/OAuth2ClientDelegate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "OAuth2ClientDelegate",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/oauth2clientdelegate"
},
"doc://AuthFoundation/documentation/AuthFoundation/UsesDelegateCollection": {
  "abstract" : [
    {
      "text" : "Indicates the class contains a collection of delegates, and the necessary convenience functions to add and remove delegates from the collection.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UsesDelegateCollection"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/UsesDelegateCollection",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "UsesDelegateCollection",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/usesdelegatecollection"
},
"doc://OAuth2Auth/ScA": {
  "identifier" : "doc:\/\/OAuth2Auth\/ScA",
  "title" : "_Concurrency.Actor",
  "type" : "unresolvable"
},
"doc://OAuth2Auth/documentation/OAuth2Auth": {
  "abstract" : [
    {
      "text" : "Interact with Okta’s OAuth2 APIs to authenticate users, and interact with user resources.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "OAuth2Auth",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow": {
  "abstract" : [
    {
      "text" : "An authentication flow class that exchanges a Session Token for access tokens.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SessionTokenFlow"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SessionTokenFlow"
    }
  ],
  "role" : "symbol",
  "title" : "SessionTokenFlow",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/APIClientDelegate-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/APIClientDelegate-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "APIClientDelegate Implementations",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/apiclientdelegate-implementations"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/Actor-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/Actor-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Actor Implementations",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/actor-implementations"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/AuthenticationFlow-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/AuthenticationFlow-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "AuthenticationFlow Implementations",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/authenticationflow-implementations"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/Context-swift.typealias": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Context"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/Context-swift.typealias",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Context"
    }
  ],
  "role" : "symbol",
  "title" : "SessionTokenFlow.Context",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/context-swift.typealias"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/OAuth2ClientDelegate-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/OAuth2ClientDelegate-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "OAuth2ClientDelegate Implementations",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/oauth2clientdelegate-implementations"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/UsesDelegateCollection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/UsesDelegateCollection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "UsesDelegateCollection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/usesdelegatecollection-implementations"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/additionalParameters": {
  "abstract" : [
    {
      "text" : "Any additional query string parameters you would like to supply to the authorization server for all requests from this flow.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "additionalParameters"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation18APIRequestArgumentP",
      "text" : "APIRequestArgument"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/additionalParameters",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "additionalParameters",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/additionalparameters"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/client": {
  "abstract" : [
    {
      "text" : "The OAuth2Client this authentication flow will use.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "client"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation12OAuth2ClientC",
      "text" : "OAuth2Client"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/client",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "client",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/client"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/context-swift.property": {
  "abstract" : [
    {
      "text" : "The context that stores the state for the current authentication session.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10OAuth2Auth16SessionTokenFlowC",
      "text" : "SessionTokenFlow"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10OAuth2Auth16SessionTokenFlowC7Contexta",
      "text" : "Context"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/context-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "context",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/context-swift.property"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/delegateCollection": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "delegateCollection"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation18DelegateCollectionC",
      "text" : "DelegateCollection"
    },
    {
      "kind" : "text",
      "text" : "<any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10OAuth2Auth16SessionTokenFlowC",
      "text" : "SessionTokenFlow"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10OAuth2Auth16SessionTokenFlowC8Delegatea",
      "text" : "Delegate"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/delegateCollection",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "delegateCollection",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/delegatecollection"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/init(client:additionalParameters:)": {
  "abstract" : [
    {
      "text" : "Initializer that uses the predefined OAuth2Client",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "client"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation12OAuth2ClientC",
      "text" : "OAuth2Client"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "additionalParameters"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation18APIRequestArgumentP",
      "text" : "APIRequestArgument"
    },
    {
      "kind" : "text",
      "text" : "]?) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/init(client:additionalParameters:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(client:additionalParameters:)",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/init(client:additionalparameters:)"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/init(issuerURL:clientId:scope:redirectUri:additionalParameters:)": {
  "abstract" : [
    {
      "text" : "Convenience initializer to construct an authentication flow from variables.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "issuerURL"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "clientId"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "scope"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation15ClaimCollectionV",
      "text" : "ClaimCollection"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]>, "
    },
    {
      "kind" : "externalParam",
      "text" : "redirectUri"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "additionalParameters"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation18APIRequestArgumentP",
      "text" : "APIRequestArgument"
    },
    {
      "kind" : "text",
      "text" : "]?) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/init(issuerURL:clientId:scope:redirectUri:additionalParameters:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(issuerURL:clientId:scope:redirectUri:additionalParameters:)",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/init(issuerurl:clientid:scope:redirecturi:additionalparameters:)"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/isAuthenticating": {
  "abstract" : [
    {
      "text" : "Indicates whether or not this flow is currently in the process of authenticating a user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isAuthenticating"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/isAuthenticating",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isAuthenticating",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/isauthenticating"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/reset()": {
  "abstract" : [
    {
      "text" : "Resets the flow for later reuse.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reset"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/reset()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "reset()",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/reset()"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/start(with:context:)": {
  "abstract" : [
    {
      "text" : "Authenticates using the supplied session token.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "start"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10OAuth2Auth16SessionTokenFlowC",
      "text" : "SessionTokenFlow"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10OAuth2Auth16SessionTokenFlowC7Contexta",
      "text" : "Context"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation5TokenV",
      "text" : "Token"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/start(with:context:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "start(with:context:)",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/start(with:context:)"
},
"doc://OAuth2Auth/documentation/OAuth2Auth/SessionTokenFlow/start(with:context:completion:)": {
  "abstract" : [
    {
      "text" : "Authenticates using the supplied session token.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "start"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "context"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10OAuth2Auth16SessionTokenFlowC",
      "text" : "SessionTokenFlow"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10OAuth2Auth16SessionTokenFlowC7Contexta",
      "text" : "Context"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation5TokenV",
      "text" : "Token"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation11OAuth2ErrorO",
      "text" : "OAuth2Error"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/OAuth2Auth\/documentation\/OAuth2Auth\/SessionTokenFlow\/start(with:context:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "start(with:context:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/oauth2auth\/sessiontokenflow\/start(with:context:completion:)"
},
"doc://OAuth2Auth/s8CopyableP": {
  "identifier" : "doc:\/\/OAuth2Auth\/s8CopyableP",
  "title" : "Swift.Copyable",
  "type" : "unresolvable"
},
"doc://OAuth2Auth/s8SendableP": {
  "identifier" : "doc:\/\/OAuth2Auth\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
},
"https://github.com/okta/okta-auth-swift": {
  "identifier" : "https:\/\/github.com\/okta\/okta-auth-swift",
  "title" : "classic Okta native authentication library",
  "titleInlineContent" : [
    {
      "text" : "classic Okta native authentication library",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/okta\/okta-auth-swift"
},
"https://github.com/okta/okta-idx-swift": {
  "identifier" : "https:\/\/github.com\/okta\/okta-idx-swift",
  "title" : "Okta IDX library",
  "titleInlineContent" : [
    {
      "text" : "Okta IDX library",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/okta\/okta-idx-swift"
}
}
}