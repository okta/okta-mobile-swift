{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/HasClaims-Implementations"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "AuthFoundation"
      }
    ],
    "role" : "collectionGroup",
    "roleHeading" : "API Collection",
    "title" : "HasClaims Implementations"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/address",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/allClaims",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/authTime",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/authenticationClassReference",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/authenticationMethods",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/birthdate",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/claims",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/customClaims",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/email",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/emailVerified",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/familyName",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/gender",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/givenName",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/locale",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/middleName",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/name",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/nameComponents",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/nickname",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/phoneNumber",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/phoneNumberVerified",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/picture",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/preferredUsername",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/profile",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subject",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/timeZone",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/updatedAt",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/userLocale",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/website",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/zoneinfo"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-1tkad",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-39wog",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-3ktvc",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-499j9",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-5muvc",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-6ofd",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-7wc9l",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-7zu54",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-8pqez",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-8zon2",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-9z18s",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-fegp"
      ],
      "title" : "Instance Methods"
    },
    {
      "anchor" : "Subscripts",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-3zfn",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-4wd5l",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-5jiej",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-6rcnc",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-6t11x",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-9ka9d"
      ],
      "title" : "Subscripts"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/authfoundation\/jwt\/hasclaims-implementations"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://AuthFoundation/documentation/AuthFoundation": {
  "abstract" : [
    {
      "text" : "Library that provides foundational features used by Oktaâ€™s authentication libraries, as well as APIs used to work with tokens and user credentials.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "AuthFoundation",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimConvertable": {
  "abstract" : [
    {
      "text" : "Indicates a type can be consumed from a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object and converted to the indicated type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimConvertable"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClaimConvertable"
    }
  ],
  "role" : "symbol",
  "title" : "ClaimConvertable",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimconvertable"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT": {
  "abstract" : [
    {
      "text" : "Represents the contents of a JWT token, providing access to its payload contents.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWT"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWT"
    }
  ],
  "role" : "symbol",
  "title" : "JWT",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/address": {
  "abstract" : [
    {
      "text" : "The address components for this user.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "address"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/address",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "address",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/address"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/allClaims": {
  "abstract" : [
    {
      "text" : "All claims, across both standard ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/claims",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/customClaims",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allClaims"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/allClaims",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "allClaims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/allclaims"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/authTime": {
  "abstract" : [
    {
      "text" : "The date at which authentication occurred.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "authTime"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DateV",
      "text" : "Date"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/authTime",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "authTime",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/authtime"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/authenticationClassReference": {
  "abstract" : [
    {
      "text" : "Returns the Authentication Context Class Reference for this token.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "authenticationClassReference"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/authenticationClassReference",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "authenticationClassReference",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/authenticationclassreference"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/authenticationMethods": {
  "abstract" : [
    {
      "text" : "The list of authentication methods included in this token, which defines the list of methods that were used to authenticate the user.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "authenticationMethods"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation20AuthenticationMethodO",
      "text" : "AuthenticationMethod"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/authenticationMethods",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "authenticationMethods",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/authenticationmethods"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/birthdate": {
  "abstract" : [
    {
      "text" : "The userâ€™s birth date.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "birthdate"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/birthdate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "birthdate",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/birthdate"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/claims": {
  "abstract" : [
    {
      "text" : "Returns the collection of claims this object contains.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "claims"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/claims",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "claims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/claims"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/customClaims": {
  "abstract" : [
    {
      "text" : "Returns the collection of custom claims this object contains.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "customClaims"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/customClaims",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "customClaims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/customclaims"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/email": {
  "abstract" : [
    {
      "text" : "The userâ€™s email address.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "email"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/email",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "email",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/email"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/emailVerified": {
  "abstract" : [
    {
      "text" : "Indicates whether or not the userâ€™s email address has been verified.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "emailVerified"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/emailVerified",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "emailVerified",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/emailverified"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/familyName": {
  "abstract" : [
    {
      "text" : "The personâ€™s family, or last, name.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "familyName"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/familyName",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "familyName",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/familyname"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/gender": {
  "abstract" : [
    {
      "text" : "The userâ€™s gender.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "gender"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/gender",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "gender",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/gender"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/givenName": {
  "abstract" : [
    {
      "text" : "The personâ€™s given, or first, name.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "givenName"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/givenName",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "givenName",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/givenname"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/locale": {
  "abstract" : [
    {
      "text" : "The userâ€™s locale.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "locale"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/locale",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "locale",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/locale"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/middleName": {
  "abstract" : [
    {
      "text" : "The personâ€™s middle name.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "middleName"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/middleName",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "middleName",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/middlename"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/name": {
  "abstract" : [
    {
      "text" : "The full name of the resource.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/name",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "name",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/name"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/nameComponents": {
  "abstract" : [
    {
      "text" : "The personâ€™s name components, pre-assigned to a PersonNameComponents object.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "nameComponents"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation20PersonNameComponentsV",
      "text" : "PersonNameComponents"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/nameComponents",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "nameComponents",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/namecomponents"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/nickname": {
  "abstract" : [
    {
      "text" : "The personâ€™s nickname.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "nickname"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/nickname",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "nickname",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/nickname"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/phoneNumber": {
  "abstract" : [
    {
      "text" : "The userâ€™s phone number.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "phoneNumber"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/phoneNumber",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "phoneNumber",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/phonenumber"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/phoneNumberVerified": {
  "abstract" : [
    {
      "text" : "Indicates whether or not the userâ€™s phone number has been verified.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "phoneNumberVerified"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/phoneNumberVerified",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "phoneNumberVerified",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/phonenumberverified"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/picture": {
  "abstract" : [
    {
      "text" : "The userâ€™s picture address.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "picture"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/picture",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "picture",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/picture"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/preferredUsername": {
  "abstract" : [
    {
      "text" : "The personâ€™s preferred username.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "preferredUsername"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/preferredUsername",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "preferredUsername",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/preferredusername"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/profile": {
  "abstract" : [
    {
      "text" : "The userâ€™s profile address.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "profile"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/profile",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "profile",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/profile"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/subject": {
  "abstract" : [
    {
      "text" : "The subject of the resource, if available.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "subject"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subject",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subject",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/subject"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/subscript(_:)": {
  "abstract" : [
    {
      "text" : "Return the given claimâ€™s value, defined with the given enum value, as the expectred ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "value type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "_"
    },
    {
      "kind" : "text",
      "text" : ":)"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(_:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/subscript(_:)"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/subscript(_:)-3zfn": {
  "abstract" : [
    {
      "text" : "Return the given claimâ€™s value, defined with the given enum value, as the expectred ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "value type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-3zfn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(_:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-3zfn"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/subscript(_:)-4wd5l": {
  "abstract" : [
    {
      "text" : "Return the given claimâ€™s value, defined with the given enum value, as the expectred ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "value type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-4wd5l",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(_:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-4wd5l"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/subscript(_:)-5jiej": {
  "abstract" : [
    {
      "text" : "Return the given claimâ€™s value, defined with the given enum value, as the expectred ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "value type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-5jiej",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(_:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-5jiej"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/subscript(_:)-6rcnc": {
  "abstract" : [
    {
      "text" : "Return the given claimâ€™s value, defined with the given enum value, as the expectred ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "value type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-6rcnc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(_:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-6rcnc"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/subscript(_:)-6t11x": {
  "abstract" : [
    {
      "text" : "Return the given claimâ€™s value, defined with the given enum value, as the expectred ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "value type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-6t11x",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(_:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-6t11x"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/subscript(_:)-9ka9d": {
  "abstract" : [
    {
      "text" : "Return the given claimâ€™s value, defined with the given enum value, as the expectred ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "value type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/subscript(_:)-9ka9d",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(_:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-9ka9d"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/timeZone": {
  "abstract" : [
    {
      "text" : "The userâ€™s timezone, represented as a TimeZone object.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "timeZone"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation8TimeZoneV",
      "text" : "TimeZone"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/timeZone",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "timeZone",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/timezone"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/updatedAt": {
  "abstract" : [
    {
      "text" : "The date the resource was updated at.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updatedAt"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DateV",
      "text" : "Date"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/updatedAt",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "updatedAt",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/updatedat"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/userLocale": {
  "abstract" : [
    {
      "text" : "The userâ€™s locale, represnted as a Locale object.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "userLocale"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation6LocaleV",
      "text" : "Locale"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/userLocale",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "userLocale",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/userlocale"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)": {
  "abstract" : [
    {
      "text" : "Retrieve the optional value using a claim enum, converting to the requested ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ":)"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-1tkad": {
  "abstract" : [
    {
      "text" : "Retrieve the value using a claim enum, converting to the requested ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-1tkad",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-1tkad"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-39wog": {
  "abstract" : [
    {
      "text" : "Returns the value for the given key as an array of values converted using a",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-39wog",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-39wog"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-3ktvc": {
  "abstract" : [
    {
      "text" : "Returns the optional value for the given key as an array of values converted using a",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-3ktvc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-3ktvc"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-499j9": {
  "abstract" : [
    {
      "text" : "Returns the value for the given key as an array of values converted using a",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-499j9",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-499j9"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-5muvc": {
  "abstract" : [
    {
      "text" : "Retrieve the optional value using a payload key, converting to the requested ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-5muvc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-5muvc"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-6ofd": {
  "abstract" : [
    {
      "text" : "Returns the optional value for the given key as an array of values converted using a",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-6ofd",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-6ofd"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-7wc9l": {
  "abstract" : [
    {
      "text" : "Retrieve the value using a payload key, converting to the requested ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-7wc9l",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-7wc9l"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-7zu54": {
  "abstract" : [
    {
      "text" : "Returns the value for the given key as an array of values converted using a",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-7zu54",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-7zu54"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-8pqez": {
  "abstract" : [
    {
      "text" : "Retrieve the optional value using a claim enum, converting to the requested ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-8pqez",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-8pqez"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-8zon2": {
  "abstract" : [
    {
      "text" : "Returns the optional value for the given key as an array of values converted using a",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-8zon2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-8zon2"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-9z18s": {
  "abstract" : [
    {
      "text" : "Returns the value for the given key as an array of values converted using a",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-9z18s",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-9z18s"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/value(for:)-fegp": {
  "abstract" : [
    {
      "text" : "Returns the optional value for the given key as an array of values converted using a",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/value(for:)-fegp",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(for:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/value(for:)-fegp"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/website": {
  "abstract" : [
    {
      "text" : "The userâ€™s website address.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "website"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/website",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "website",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/website"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/zoneinfo": {
  "abstract" : [
    {
      "text" : "The userâ€™s timezone code.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "zoneinfo"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/zoneinfo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "zoneinfo",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/zoneinfo"
}
}
}