{
  "abstract" : [
    {
      "text" : "Represents the contents of a JWT token, providing access to its payload contents.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14AuthFoundation3JWTV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "JWT"
      }
    ],
    "modules" : [
      {
        "name" : "AuthFoundation"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "JWT"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "JWT"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "JWT"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "mentions",
      "mentions" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/WorkingWithClaims"
      ]
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A JWT object represents information encoded within a JSON Web Token, a base64-encoded JSON object that contains a header, a payload, and a signature that is used to verify the validity of the token itself. The contents of the payload, referred to as “Claims”, can then be read within your application.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "These objects conform to both the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/Expires",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " protocols, to provide conveniences for accessing information within the token, as well as to determine whether or not the token has expired.  In addition to accessing arbitrary claims within a token, this class adds conveniences to simplify access to, and to normalize the expected result types of, properties common to JWT tokens.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Accessing-claims",
          "level" : 2,
          "text" : "Accessing claims",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Reading information, or “Claims”, from a JWT token can be done in three different ways:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Accessing values using convenience properties.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Using keyed subscripting of common claims using the ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/ClaimType",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : " enum corresponding to the claim container.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Using keyed subscripting of custom claims using the claim’s string name.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "orderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "Some common properties, such as ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/subject",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/issuer",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", are defined as properties on the JWT object, to simplify access to these values. Additionally, some claims that return dates or time intervals have conveniences such as ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/issuedAt",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/expirationTime",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/expiresIn",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", or ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/scope",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", that returns their values in the expected type.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "When you wish to interact with other claims more dynamically, the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/claims",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/customClaims",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " properties can be used to identify which claims are present in the JWT token.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, to access or interact with the predetermine claims:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "for claim in token.claims {",
            "    let value = token[claim] \/\/ Use the claim",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you anticipate specific claims within your application, you can interact with them directly.  For example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "if let email = token[.email] {",
            "    \/\/ Do something with the token's email address",
            "}",
            "",
            "if let customValue = token[\"customClaim\"] {",
            "    \/\/ Use the custom value",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequestArgument",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/Expires",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
        "doc:\/\/AuthFoundation\/Se",
        "doc:\/\/AuthFoundation\/SE",
        "doc:\/\/AuthFoundation\/SY",
        "doc:\/\/AuthFoundation\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "JWT-and-Token-Verification",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/WorkingWithClaims",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWKS",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWTClaim",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSONClaimContainer",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSON",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/AnyJSON",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/IsClaim",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/Expires"
      ],
      "title" : "JWT and Token Verification"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Structures",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/Header-swift.struct"
      ],
      "title" : "Structures"
    },
    {
      "anchor" : "Initializers",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/init(_:)",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/init(rawValue:)"
      ],
      "title" : "Initializers"
    },
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/audience",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/authenticationContext",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/expirationTime",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/expiresIn",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/header-swift.property",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/issuedAt",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/issuer",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/notBefore",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/payload",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/rawValue-swift.property",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/scope",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/signature"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/validate(using:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "anchor" : "Type-Aliases",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/ClaimType",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/RawValue-swift.typealias"
      ],
      "title" : "Type Aliases"
    },
    {
      "anchor" : "Default-Implementations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/Expires-Implementations",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/HasClaims-Implementations",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/RawRepresentable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/authfoundation\/jwt"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://AuthFoundation/SE": {
  "identifier" : "doc:\/\/AuthFoundation\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/SY": {
  "identifier" : "doc:\/\/AuthFoundation\/SY",
  "title" : "Swift.RawRepresentable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/Se": {
  "identifier" : "doc:\/\/AuthFoundation\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/documentation/AuthFoundation": {
  "abstract" : [
    {
      "text" : "Library that provides foundational features used by Okta’s authentication libraries, as well as APIs used to work with tokens and user credentials.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "AuthFoundation",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation"
},
"doc://AuthFoundation/documentation/AuthFoundation/APIRequest": {
  "abstract" : [
    {
      "text" : "Abstract protocol defining the structure of an API request.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "APIRequest"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "APIRequest"
    }
  ],
  "role" : "symbol",
  "title" : "APIRequest",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/apirequest"
},
"doc://AuthFoundation/documentation/AuthFoundation/APIRequest/headers-8ieky": {
  "abstract" : [
    {
      "text" : "Optional HTTP headers to supply.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "headers"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation18APIRequestArgumentP",
      "text" : "APIRequestArgument"
    },
    {
      "kind" : "text",
      "text" : ")?]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest\/headers-8ieky",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "headers",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/apirequest\/headers-8ieky"
},
"doc://AuthFoundation/documentation/AuthFoundation/APIRequest/query-730ld": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "query"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation18APIRequestArgumentP",
      "text" : "APIRequestArgument"
    },
    {
      "kind" : "text",
      "text" : ")?]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest\/query-730ld",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "query",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/apirequest\/query-730ld"
},
"doc://AuthFoundation/documentation/AuthFoundation/APIRequestArgument": {
  "abstract" : [
    {
      "text" : "Defines an argument to an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". Used within ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest\/headers-8ieky",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest\/query-730ld",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "APIRequestArgument"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequestArgument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "APIRequestArgument"
    }
  ],
  "role" : "symbol",
  "title" : "APIRequestArgument",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/apirequestargument"
},
"doc://AuthFoundation/documentation/AuthFoundation/AnyJSON": {
  "abstract" : [
    {
      "text" : "Efficiently represents ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSON",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " values, and exchanges between its String or Data representations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyJSON"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/AnyJSON",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyJSON"
    }
  ],
  "role" : "symbol",
  "title" : "AnyJSON",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/anyjson"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection": {
  "abstract" : [
    {
      "text" : "Indicates a special type of claim whose value is interchangable between a whitespace-separated value, or an array of values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimCollection"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClaimCollection"
    }
  ],
  "role" : "symbol",
  "title" : "ClaimCollection",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimConvertable": {
  "abstract" : [
    {
      "text" : "Indicates a type can be consumed from a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object and converted to the indicated type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimConvertable"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClaimConvertable"
    }
  ],
  "role" : "symbol",
  "title" : "ClaimConvertable",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimconvertable"
},
"doc://AuthFoundation/documentation/AuthFoundation/Expires": {
  "abstract" : [
    {
      "text" : "Protocol that indicates an object is capable of expiring.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Expires"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/Expires",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Expires"
    }
  ],
  "role" : "symbol",
  "title" : "Expires",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/expires"
},
"doc://AuthFoundation/documentation/AuthFoundation/HasClaims": {
  "abstract" : [
    {
      "text" : "Used by classes that contains OAuth2 claims.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HasClaims"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HasClaims"
    }
  ],
  "role" : "symbol",
  "title" : "HasClaims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/hasclaims"
},
"doc://AuthFoundation/documentation/AuthFoundation/HasClaims/ClaimType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation7IsClaimP",
      "text" : "IsClaim"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/ClaimType",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "ClaimType",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/hasclaims\/claimtype"
},
"doc://AuthFoundation/documentation/AuthFoundation/HasClaims/claims": {
  "abstract" : [
    {
      "text" : "Returns the collection of claims this object contains.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "claims"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation9HasClaimsP9ClaimTypeQa",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/claims",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "claims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/hasclaims\/claims"
},
"doc://AuthFoundation/documentation/AuthFoundation/HasClaims/customClaims": {
  "abstract" : [
    {
      "text" : "Returns the collection of custom claims this object contains.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "customClaims"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/customClaims",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "customClaims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/hasclaims\/customclaims"
},
"doc://AuthFoundation/documentation/AuthFoundation/HasClaims/subject": {
  "abstract" : [
    {
      "text" : "The subject of the resource, if available.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ClaimType",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "JWTClaim",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "subject"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/subject",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subject",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/hasclaims\/subject"
},
"doc://AuthFoundation/documentation/AuthFoundation/IsClaim": {
  "abstract" : [
    {
      "text" : "Indicates a type that can be used as an enum value for the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/ClaimType",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " associated type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IsClaim"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/IsClaim",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "IsClaim"
    }
  ],
  "role" : "symbol",
  "title" : "IsClaim",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/isclaim"
},
"doc://AuthFoundation/documentation/AuthFoundation/JSON": {
  "abstract" : [
    {
      "text" : "Represent mixed JSON values as instances of ",
      "type" : "text"
    },
    {
      "code" : "Any",
      "type" : "codeVoice"
    },
    {
      "text" : ". This is used to expose API response values to Swift native types where Swift enums are not supported.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSON"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSON",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSON"
    }
  ],
  "role" : "symbol",
  "title" : "JSON",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/json"
},
"doc://AuthFoundation/documentation/AuthFoundation/JSONClaimContainer": {
  "abstract" : [
    {
      "text" : "Protocol used to define shared behavior when an object can contain claims.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSONClaimContainer"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSONClaimContainer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSONClaimContainer"
    }
  ],
  "role" : "symbol",
  "title" : "JSONClaimContainer",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jsonclaimcontainer"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK": {
  "abstract" : [
    {
      "text" : "Describes an individual key from an authorization server, which can be used to validate tokens or encrypt content.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWK"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWK"
    }
  ],
  "role" : "symbol",
  "title" : "JWK",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWKS": {
  "abstract" : [
    {
      "text" : "Describes the collection of keys associated with an authorization server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWKS"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWKS",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWKS"
    }
  ],
  "role" : "symbol",
  "title" : "JWKS",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwks"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT": {
  "abstract" : [
    {
      "text" : "Represents the contents of a JWT token, providing access to its payload contents.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWT"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWT"
    }
  ],
  "role" : "symbol",
  "title" : "JWT",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/ClaimType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimType"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/ClaimType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClaimType"
    }
  ],
  "role" : "symbol",
  "title" : "JWT.ClaimType",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/claimtype"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/Expires-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/Expires-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Expires Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/expires-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/HasClaims-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/HasClaims-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "HasClaims Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/hasclaims-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/Header-swift.struct": {
  "abstract" : [
    {
      "text" : "JWT header information describing the contents of the token.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Header"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/Header-swift.struct",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Header"
    }
  ],
  "role" : "symbol",
  "title" : "JWT.Header",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/header-swift.struct"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/RawRepresentable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/RawRepresentable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RawRepresentable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/rawrepresentable-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/RawValue-swift.typealias": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawValue"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/RawValue-swift.typealias",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawValue"
    }
  ],
  "role" : "symbol",
  "title" : "JWT.RawValue",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/rawvalue-swift.typealias"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/audience": {
  "abstract" : [
    {
      "text" : "The intended audience for this token.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "audience"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/audience",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "audience",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/audience"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/authenticationContext": {
  "abstract" : [
    {
      "text" : "The authentication context class reference.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "authenticationContext"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/authenticationContext",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "authenticationContext",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/authenticationcontext"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/expirationTime": {
  "abstract" : [
    {
      "text" : "The date this token will expire.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expirationTime"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DateV",
      "text" : "Date"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/expirationTime",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expirationTime",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/expirationtime"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/expiresIn": {
  "abstract" : [
    {
      "text" : "The time interval in which the token will expire.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expiresIn"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/expiresIn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expiresIn",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/expiresin"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/header-swift.property": {
  "abstract" : [
    {
      "text" : "The header portion of the JWT token.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "header"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWTV",
      "text" : "JWT"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWTV6HeaderV",
      "text" : "Header"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/header-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "header",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/header-swift.property"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/init(_:)": {
  "abstract" : [
    {
      "text" : "Designated initializer, accepting the token string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/init(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/init(_:)"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/init(rawValue:)": {
  "abstract" : [
    {
      "text" : "Initializer to create a JWT instance from a raw string value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "?("
    },
    {
      "kind" : "externalParam",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWTV",
      "text" : "JWT"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWTV8RawValuea",
      "text" : "RawValue"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/init(rawValue:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(rawValue:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/init(rawvalue:)"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/issuedAt": {
  "abstract" : [
    {
      "text" : "The date this token was issued.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "issuedAt"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DateV",
      "text" : "Date"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/issuedAt",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "issuedAt",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/issuedat"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/issuer": {
  "abstract" : [
    {
      "text" : "The issuer claim for this token.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "issuer"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/issuer",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "issuer",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/issuer"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/notBefore": {
  "abstract" : [
    {
      "text" : "The date before which this token should not yet beconsidered valid.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "notBefore"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DateV",
      "text" : "Date"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/notBefore",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "notBefore",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/notbefore"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/payload": {
  "abstract" : [
    {
      "text" : "Raw paylaod of claims, as a dictionary representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "payload"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s8SendableP",
      "text" : "Sendable"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/payload",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "payload",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/payload"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/rawValue-swift.property": {
  "abstract" : [
    {
      "text" : "The raw string representation of this JWT token.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/rawValue-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rawValue",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/rawvalue-swift.property"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/scope": {
  "abstract" : [
    {
      "text" : "The array of scopes this token is valid for.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "scope"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/scope",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "scope",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/scope"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/signature": {
  "abstract" : [
    {
      "text" : "Signature of the JWT token.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "signature"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/signature",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "signature",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/signature"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT/validate(using:)": {
  "abstract" : [
    {
      "text" : "Verifies the JWT token using the given ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " key.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "validate"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "using"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation4JWKSV",
      "text" : "JWKS"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT\/validate(using:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "validate(using:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt\/validate(using:)"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWTClaim": {
  "abstract" : [
    {
      "text" : "List of registered and public claims.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWTClaim"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWTClaim",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWTClaim"
    }
  ],
  "role" : "symbol",
  "title" : "JWTClaim",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwtclaim"
},
"doc://AuthFoundation/documentation/AuthFoundation/WorkingWithClaims": {
  "abstract" : [
    {
      "text" : "Using Claims on the various types included in OIDC and AuthFoundation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/WorkingWithClaims",
  "kind" : "article",
  "role" : "article",
  "title" : "Working with Claims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/workingwithclaims"
},
"doc://AuthFoundation/s8SendableP": {
  "identifier" : "doc:\/\/AuthFoundation\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}