{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Essentials",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Storage, Retrieval, and Removal",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/default",
                "title" : "static var `default`: Credential?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/allids",
                "title" : "static var allIDs: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/store(_:tags:security:)",
                "title" : "static func store(Token, tags: [String : String], security: [Credential.Security]) throws -> Credential",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/with(id:prompt:authenticationcontext:)",
                "title" : "static func with(id: String, prompt: String?, authenticationContext: TokenAuthenticationContext?) throws -> Credential?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/find(where:prompt:authenticationcontext:)",
                "title" : "static func find(where: (Token.Metadata) -> Bool, prompt: String?, authenticationContext: TokenAuthenticationContext?) throws -> [Credential]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/tags",
                "title" : "var tags: [String : String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/settags(_:)",
                "title" : "func setTags([String : String]) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/remove()",
                "title" : "func remove() throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/id",
                "title" : "var id: String",
                "type" : "property"
              },
              {
                "title" : "Refreshing and Revoking Tokens",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/refresh(completion:)",
                "title" : "func refresh(completion: (Result<Void, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/refresh()",
                "title" : "func refresh() async throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/refreshifneeded(graceinterval:)",
                "title" : "func refreshIfNeeded(graceInterval: TimeInterval) async throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/refreshifneeded(graceinterval:completion:)",
                "title" : "func refreshIfNeeded(graceInterval: TimeInterval, completion: (Result<Void, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/refreshgraceinterval",
                "title" : "static var refreshGraceInterval: TimeInterval",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/automaticrefresh",
                "title" : "var automaticRefresh: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/revoke(type:)",
                "title" : "func revoke(type: Token.RevokeType) async throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/revoke(type:completion:)",
                "title" : "func revoke(type: Token.RevokeType, completion: ((Result<Void, OAuth2Error>) -> Void)?)",
                "type" : "method"
              },
              {
                "title" : "Using Tokens",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/token",
                "title" : "var token: Token",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/oauth2",
                "title" : "let oauth2: OAuth2Client",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/authorize(_:)",
                "title" : "func authorize(inout URLRequest) async",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/authorize(request:)",
                "title" : "func authorize(request: inout URLRequest)",
                "type" : "method"
              },
              {
                "title" : "Getting Information About Tokens",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/userinfo",
                "title" : "var userInfo: UserInfo?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/userinfo()",
                "title" : "func userInfo() async throws -> UserInfo",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/userinfo(completion:)",
                "title" : "func userInfo(completion: (Result<UserInfo, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/introspect(_:completion:)",
                "title" : "func introspect(Token.Kind, completion: (Result<TokenInfo, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "title" : "Customization",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/credentialdatasource",
                "title" : "static var credentialDataSource: CredentialDataSource",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/tokenstorage",
                "title" : "static var tokenStorage: TokenStorage",
                "type" : "property"
              },
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/==(_:_:)",
                "title" : "static func == (Credential, Credential) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/init(token:)",
                "title" : "convenience init(token: Token)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/init(token:oauth2:)",
                "title" : "convenience init(token: Token, oauth2: OAuth2Client) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/introspect(_:)",
                "title" : "func introspect(Token.Kind) async throws -> TokenInfo",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/oauth(client:didrefresh:replacedwith:)",
                "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/accesscontrol(_:)",
                    "title" : "case accessControl(SecAccessControlCreateFlags)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/accesscontrolref(_:)",
                    "title" : "case accessControlRef(SecAccessControl)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/accessgroup(_:)",
                    "title" : "case accessGroup(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/accessibility(_:)",
                    "title" : "case accessibility(Keychain.Accessibility)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/context(_:)",
                    "title" : "case context(LAContext)",
                    "type" : "case"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/standard",
                    "title" : "static var standard: [Credential.Security]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credential\/security",
                "title" : "Credential.Security",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/api(client:didsend:received:)",
                    "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/api(client:didsend:received:requestid:ratelimit:)",
                    "title" : "func api(client: APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/api(client:shouldretry:)",
                    "title" : "func api(client: APIClient, shouldRetry: URLRequest) -> APIRetry",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/api(client:willsend:)",
                    "title" : "func api(client: APIClient, willSend: inout URLRequest)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credential\/apiclientdelegate-implementations",
                "title" : "APIClientDelegate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credential\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/oauth(client:willrefresh:)",
                    "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credential\/oauth2clientdelegate-implementations",
                "title" : "OAuth2ClientDelegate Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/credential",
            "title" : "Credential",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/authfoundation\/managingusercredentials",
            "title" : "Managing User Credentials",
            "type" : "article"
          },
          {
            "title" : "Token Information",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/configuration",
                    "title" : "let configuration: OAuth2Client.Configuration",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/context-swift.struct",
                "title" : "Token.Context",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/id",
                    "title" : "let id: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/payload",
                    "title" : "let payload: [String : Any]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/tags",
                    "title" : "let tags: [String : String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/claimtype",
                    "title" : "Token.Metadata.ClaimType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/address",
                        "title" : "var address: [String : String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/allclaims",
                        "title" : "var allClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/authtime",
                        "title" : "var authTime: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/authenticationclass",
                        "title" : "var authenticationClass: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/authenticationmethods",
                        "title" : "var authenticationMethods: [AuthenticationMethod]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/birthdate",
                        "title" : "var birthdate: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/claims",
                        "title" : "var claims: [Self.ClaimType]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/customclaims",
                        "title" : "var customClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/email",
                        "title" : "var email: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/emailverified",
                        "title" : "var emailVerified: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/familyname",
                        "title" : "var familyName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/gender",
                        "title" : "var gender: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/givenname",
                        "title" : "var givenName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/locale",
                        "title" : "var locale: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/middlename",
                        "title" : "var middleName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/name",
                        "title" : "var name: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/namecomponents",
                        "title" : "var nameComponents: PersonNameComponents",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/nickname",
                        "title" : "var nickname: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/phonenumber",
                        "title" : "var phoneNumber: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/phonenumberverified",
                        "title" : "var phoneNumberVerified: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/picture",
                        "title" : "var picture: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/preferredusername",
                        "title" : "var preferredUsername: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/profile",
                        "title" : "var profile: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/subject",
                        "title" : "var subject: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/timezone",
                        "title" : "var timeZone: TimeZone?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/updatedat",
                        "title" : "var updatedAt: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/userlocale",
                        "title" : "var userLocale: Locale?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/website",
                        "title" : "var website: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/zoneinfo",
                        "title" : "var zoneinfo: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/arrayvalue(_:for:)-57pje",
                        "title" : "func arrayValue<T>(T.Type, for: Self.ClaimType) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/arrayvalue(_:for:)-6f41l",
                        "title" : "func arrayValue<T>(T.Type, for: String) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/value(_:for:)",
                        "title" : "func value<T>(T.Type, for: String) -> T?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-3573v",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-5j8kr",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-7gdjc",
                        "title" : "subscript<T>(Self.ClaimType) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-8orb5",
                        "title" : "subscript<T>(String) -> [String : T?]?",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/hasclaims-implementations",
                    "title" : "HasClaims Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/jsondecoder",
                        "title" : "static var jsonDecoder: JSONDecoder",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/jsondecodable-implementations",
                    "title" : "JSONDecodable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/metadata",
                "title" : "Token.Metadata",
                "type" : "struct"
              },
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/==(_:_:)",
                "title" : "static func == (Token, Token) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/init(from:)",
                "title" : "convenience init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/accesstoken",
                "title" : "let accessToken: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/context-swift.property",
                "title" : "let context: Token.Context",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/devicesecret",
                "title" : "let deviceSecret: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/expiresin",
                "title" : "let expiresIn: TimeInterval",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/id",
                "title" : "var id: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/idtoken",
                "title" : "let idToken: JWT?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/isrefreshing",
                "title" : "var isRefreshing: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/issuedat",
                "title" : "let issuedAt: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/refreshtoken",
                "title" : "let refreshToken: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/scope",
                "title" : "let scope: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/tokentype",
                "title" : "let tokenType: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/token(of:)",
                "title" : "func token(of: Token.Kind) -> String?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/validate(using:with:)",
                "title" : "func validate(using: OAuth2Client, with: IDTokenValidatorContext?) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/accesstokenvalidator",
                "title" : "static var accessTokenValidator: TokenHashValidator",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/devicesecretvalidator",
                "title" : "static var deviceSecretValidator: TokenHashValidator",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/idtokenvalidator",
                "title" : "static var idTokenValidator: IDTokenValidator",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/from(refreshtoken:using:)",
                "title" : "static func from(refreshToken: String, using: OAuth2Client) async throws -> Token",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/from(refreshtoken:using:completion:)",
                "title" : "static func from(refreshToken: String, using: OAuth2Client, completion: (Result<Token, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/kind\/accesstoken",
                    "title" : "case accessToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/kind\/devicesecret",
                    "title" : "case deviceSecret",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/kind\/idtoken",
                    "title" : "case idToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/kind\/refreshtoken",
                    "title" : "case refreshToken",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/kind\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/kind\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/kind\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/kind",
                "title" : "Token.Kind",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/revoketype\/accesstoken",
                    "title" : "case accessToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/revoketype\/all",
                    "title" : "case all",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/revoketype\/devicesecret",
                    "title" : "case deviceSecret",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/revoketype\/refreshtoken",
                    "title" : "case refreshToken",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/revoketype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/revoketype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/revoketype",
                "title" : "Token.RevokeType",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/authorizationheader",
                    "title" : "var authorizationHeader: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/apiauthorization-implementations",
                "title" : "APIAuthorization Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/expiresat",
                    "title" : "var expiresAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/isexpired",
                    "title" : "var isExpired: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/isvalid",
                    "title" : "var isValid: Bool",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/expires-implementations",
                "title" : "Expires Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/token",
            "title" : "Token",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/userinfo\/init(_:)",
                "title" : "init([String : Any])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/userinfo\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/userinfo\/payload",
                "title" : "let payload: [String : Any]",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/userinfo\/claimtype",
                "title" : "UserInfo.ClaimType",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/address",
                    "title" : "var address: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/allclaims",
                    "title" : "var allClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/authtime",
                    "title" : "var authTime: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/authenticationclass",
                    "title" : "var authenticationClass: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/authenticationmethods",
                    "title" : "var authenticationMethods: [AuthenticationMethod]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/birthdate",
                    "title" : "var birthdate: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/claims",
                    "title" : "var claims: [Self.ClaimType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/customclaims",
                    "title" : "var customClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/email",
                    "title" : "var email: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/emailverified",
                    "title" : "var emailVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/familyname",
                    "title" : "var familyName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/gender",
                    "title" : "var gender: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/givenname",
                    "title" : "var givenName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/locale",
                    "title" : "var locale: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/middlename",
                    "title" : "var middleName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/namecomponents",
                    "title" : "var nameComponents: PersonNameComponents",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/nickname",
                    "title" : "var nickname: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/phonenumber",
                    "title" : "var phoneNumber: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/phonenumberverified",
                    "title" : "var phoneNumberVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/picture",
                    "title" : "var picture: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/preferredusername",
                    "title" : "var preferredUsername: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/profile",
                    "title" : "var profile: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/subject",
                    "title" : "var subject: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/timezone",
                    "title" : "var timeZone: TimeZone?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/updatedat",
                    "title" : "var updatedAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/userlocale",
                    "title" : "var userLocale: Locale?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/website",
                    "title" : "var website: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/zoneinfo",
                    "title" : "var zoneinfo: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/arrayvalue(_:for:)-4r3mz",
                    "title" : "func arrayValue<T>(T.Type, for: Self.ClaimType) -> [T]?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/arrayvalue(_:for:)-8mgsf",
                    "title" : "func arrayValue<T>(T.Type, for: String) -> [T]?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/value(_:for:)",
                    "title" : "func value<T>(T.Type, for: String) -> T?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-1nwao",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-2vhco",
                    "title" : "subscript<T>(String) -> [String : T?]?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-3i6lx",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-jlfx",
                    "title" : "subscript<T>(Self.ClaimType) -> T?",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/userinfo\/hasclaims-implementations",
                "title" : "HasClaims Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/userinfo\/jsonclaimcontainer-implementations",
                "title" : "JSONClaimContainer Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/jsondecoder",
                    "title" : "static var jsonDecoder: JSONDecoder",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/userinfo\/jsondecodable-implementations",
                "title" : "JSONDecodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/userinfo",
            "title" : "UserInfo",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/init(_:)",
                "title" : "init([String : Any])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/active",
                "title" : "var active: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/payload",
                "title" : "let payload: [String : Any]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/username",
                "title" : "var username: String?",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/claimtype",
                "title" : "TokenInfo.ClaimType",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/address",
                    "title" : "var address: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/allclaims",
                    "title" : "var allClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/authtime",
                    "title" : "var authTime: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/authenticationclass",
                    "title" : "var authenticationClass: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/authenticationmethods",
                    "title" : "var authenticationMethods: [AuthenticationMethod]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/birthdate",
                    "title" : "var birthdate: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/claims",
                    "title" : "var claims: [Self.ClaimType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/customclaims",
                    "title" : "var customClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/email",
                    "title" : "var email: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/emailverified",
                    "title" : "var emailVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/familyname",
                    "title" : "var familyName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/gender",
                    "title" : "var gender: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/givenname",
                    "title" : "var givenName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/locale",
                    "title" : "var locale: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/middlename",
                    "title" : "var middleName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/namecomponents",
                    "title" : "var nameComponents: PersonNameComponents",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/nickname",
                    "title" : "var nickname: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/phonenumber",
                    "title" : "var phoneNumber: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/phonenumberverified",
                    "title" : "var phoneNumberVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/picture",
                    "title" : "var picture: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/preferredusername",
                    "title" : "var preferredUsername: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/profile",
                    "title" : "var profile: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/subject",
                    "title" : "var subject: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/timezone",
                    "title" : "var timeZone: TimeZone?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/updatedat",
                    "title" : "var updatedAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/userlocale",
                    "title" : "var userLocale: Locale?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/website",
                    "title" : "var website: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/zoneinfo",
                    "title" : "var zoneinfo: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/arrayvalue(_:for:)-6zyk1",
                    "title" : "func arrayValue<T>(T.Type, for: String) -> [T]?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/arrayvalue(_:for:)-8949w",
                    "title" : "func arrayValue<T>(T.Type, for: Self.ClaimType) -> [T]?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/value(_:for:)",
                    "title" : "func value<T>(T.Type, for: String) -> T?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-4q5sv",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-4xi3",
                    "title" : "subscript<T>(String) -> [String : T?]?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-7jc86",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-9fyil",
                    "title" : "subscript<T>(Self.ClaimType) -> T?",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokeninfo\/hasclaims-implementations",
                "title" : "HasClaims Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokeninfo\/jsonclaimcontainer-implementations",
                "title" : "JSONClaimContainer Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/jsondecoder",
                    "title" : "static var jsonDecoder: JSONDecoder",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokeninfo\/jsondecodable-implementations",
                "title" : "JSONDecodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/tokeninfo",
            "title" : "TokenInfo",
            "type" : "struct"
          },
          {
            "title" : "OAuth2 Client Operations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/==(_:_:)",
                    "title" : "static func == (OAuth2Client.Configuration, OAuth2Client.Configuration) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/init(baseurl:discoveryurl:clientid:scopes:authentication:)",
                    "title" : "init(baseURL: URL, discoveryURL: URL?, clientId: String, scopes: String, authentication: OAuth2Client.ClientAuthentication)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/init(domain:clientid:scopes:authentication:)",
                    "title" : "convenience init(domain: String, clientId: String, scopes: String, authentication: OAuth2Client.ClientAuthentication) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/authentication",
                    "title" : "let authentication: OAuth2Client.ClientAuthentication",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/baseurl",
                    "title" : "let baseURL: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/clientid",
                    "title" : "let clientId: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/discoveryurl",
                    "title" : "let discoveryURL: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/scopes",
                    "title" : "let scopes: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class",
                "title" : "OAuth2Client.Configuration",
                "type" : "class"
              },
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/init()",
                    "title" : "init() throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/init(plist:)",
                    "title" : "init(plist: URL) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/additionalparameters",
                    "title" : "let additionalParameters: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/clientid",
                    "title" : "let clientId: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/issuer",
                    "title" : "let issuer: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/logoutredirecturi",
                    "title" : "let logoutRedirectUri: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/redirecturi",
                    "title" : "let redirectUri: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/scopes",
                    "title" : "let scopes: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration",
                "title" : "OAuth2Client.PropertyListConfiguration",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/init(_:session:)",
                "title" : "init(OAuth2Client.Configuration, session: URLSessionProtocol?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/init(baseurl:clientid:scopes:authentication:session:)",
                "title" : "convenience init(baseURL: URL, clientId: String, scopes: String, authentication: OAuth2Client.ClientAuthentication, session: URLSessionProtocol?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/init(domain:clientid:scopes:authentication:session:)",
                "title" : "convenience init(domain: String, clientId: String, scopes: String, authentication: OAuth2Client.ClientAuthentication, session: URLSessionProtocol?) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/additionalhttpheaders-7l5g8",
                "title" : "var additionalHttpHeaders: [String : String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.property",
                "title" : "let configuration: OAuth2Client.Configuration",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/jwks",
                "title" : "var jwks: JWKS?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/openidconfiguration",
                "title" : "var openIdConfiguration: OpenIdConfiguration?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/session",
                "title" : "let session: URLSessionProtocol",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/exchange(token:completion:)",
                "title" : "func exchange<T>(token: T, completion: (Result<APIResponse<Token>, APIClientError>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/introspect(token:type:completion:)",
                "title" : "func introspect(token: Token, type: Token.Kind, completion: (Result<TokenInfo, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/jwks()",
                "title" : "func jwks() async throws -> JWKS",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/jwks(completion:)",
                "title" : "func jwks(completion: (Result<JWKS, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/openidconfiguration()",
                "title" : "func openIdConfiguration() async throws -> OpenIdConfiguration",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/openidconfiguration(completion:)",
                "title" : "func openIdConfiguration(completion: (Result<OpenIdConfiguration, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/refresh(_:)",
                "title" : "func refresh(Token) async throws -> Token",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/refresh(_:completion:)",
                "title" : "func refresh(Token, completion: (Result<Token, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/revoke(_:type:)",
                "title" : "func revoke(Token, type: Token.RevokeType) async throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/revoke(_:type:completion:)",
                "title" : "func revoke(Token, type: Token.RevokeType, completion: (Result<Void, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/shouldretry(request:)",
                "title" : "func shouldRetry(request: URLRequest) -> APIRetry",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/userinfo(token:completion:)",
                "title" : "func userInfo(token: Token, completion: (Result<UserInfo, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/clientsecret(_:)",
                    "title" : "case clientSecret(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/none",
                    "title" : "case none",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/additionalparameters",
                    "title" : "var additionalParameters: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication",
                "title" : "OAuth2Client.ClientAuthentication",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/cannotparsepropertylist(_:)",
                    "title" : "case cannotParsePropertyList(Error?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/defaultpropertylistnotfound",
                    "title" : "case defaultPropertyListNotFound",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/invalidconfiguration(name:value:)",
                    "title" : "case invalidConfiguration(name: String, value: String?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/invalidpropertylist(url:)",
                    "title" : "case invalidPropertyList(url: URL)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/missingconfigurationvalues",
                    "title" : "case missingConfigurationValues",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/errordescription-5jfo5",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/errordescription-8fnpy",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror",
                "title" : "OAuth2Client.PropertyListConfigurationError",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/additionalhttpheaders-g28t",
                    "title" : "var additionalHttpHeaders: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/baseurl",
                    "title" : "var baseURL: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/requestidheader",
                    "title" : "var requestIdHeader: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/useragent",
                    "title" : "var userAgent: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/decode(_:from:userinfo:)",
                    "title" : "func decode<T>(T.Type, from: Data, userInfo: [CodingUserInfoKey : Any]?) throws -> T",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/didsend(request:received:)-2abw8",
                    "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/didsend(request:received:)-8no60",
                    "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/didsend(request:received:requestid:ratelimit:)",
                    "title" : "func didSend(request: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/error(from:)",
                    "title" : "func error(from: Data) -> Error?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/send(_:parsing:completion:)",
                    "title" : "func send<T>(URLRequest, parsing: APIParsingContext?, completion: (Result<APIResponse<T>, APIClientError>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/shouldretry(request:ratelimit:)",
                    "title" : "func shouldRetry(request: URLRequest, rateLimit: APIRateLimit) -> APIRetry",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/willsend(request:)",
                    "title" : "func willSend(request: inout URLRequest)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/apiclient-implementations",
                "title" : "APIClient Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/delegatecollection",
                    "title" : "var delegateCollection: DelegateCollection<OAuth2ClientDelegate>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/add(delegate:)",
                    "title" : "func add(delegate: Self.Delegate)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/remove(delegate:)",
                    "title" : "func remove(delegate: Self.Delegate)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/delegate",
                    "title" : "OAuth2Client.Delegate",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/usesdelegatecollection-implementations",
                "title" : "UsesDelegateCollection Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2client",
            "title" : "OAuth2Client",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:didrefresh:replacedwith:)-91fzt",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      }
                    ],
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:didrefresh:replacedwith:)-2rj5a",
                "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:willrefresh:)-18gv8",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:willrefresh:)-7o00l",
                "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2clientdelegate",
            "title" : "OAuth2ClientDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/authorizationendpoint",
                "title" : "let authorizationEndpoint: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/claimssupported",
                "title" : "var claimsSupported: [JWTClaim]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/deviceauthorizationendpoint",
                "title" : "var deviceAuthorizationEndpoint: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/endsessionendpoint",
                "title" : "var endSessionEndpoint: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/granttypessupported",
                "title" : "var grantTypesSupported: [GrantType]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/idtokensigningalgvaluessupported",
                "title" : "let idTokenSigningAlgValuesSupported: [JWK.Algorithm]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/introspectionendpoint",
                "title" : "var introspectionEndpoint: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/issuer",
                "title" : "let issuer: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/jwksuri",
                "title" : "let jwksUri: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/payload",
                "title" : "let payload: [String : Any]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/registrationendpoint",
                "title" : "var registrationEndpoint: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/responsemodessupported",
                "title" : "var responseModesSupported: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/responsetypessupported",
                "title" : "let responseTypesSupported: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/revocationendpoint",
                "title" : "var revocationEndpoint: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/scopessupported",
                "title" : "var scopesSupported: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/subjecttypessupported",
                "title" : "let subjectTypesSupported: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/tokenendpoint",
                "title" : "let tokenEndpoint: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/userinfoendpoint",
                "title" : "var userinfoEndpoint: URL?",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/claimtype",
                "title" : "OpenIdConfiguration.ClaimType",
                "type" : "typealias"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/jsondecoder",
                "title" : "static let jsonDecoder: JSONDecoder",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/acrvaluessupported",
                    "title" : "case acrValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/authorizationendpoint",
                    "title" : "case authorizationEndpoint",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/backchannelauthenticationrequestsigningalgvaluessupported",
                    "title" : "case backchannelAuthenticationRequestSigningAlgValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/backchanneltokendeliverymodessupported",
                    "title" : "case backchannelTokenDeliveryModesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/claimtypessupported",
                    "title" : "case claimTypesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/claimslocalessupported",
                    "title" : "case claimsLocalesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/claimsparametersupported",
                    "title" : "case claimsParameterSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/claimssupported",
                    "title" : "case claimsSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/codechallengemethodssupported",
                    "title" : "case codeChallengeMethodsSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/deviceauthorizationendpoint",
                    "title" : "case deviceAuthorizationEndpoint",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/displayvaluessupported",
                    "title" : "case displayValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/dpopsigningalgvaluessupported",
                    "title" : "case dpopSigningAlgValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/endsessionendpoint",
                    "title" : "case endSessionEndpoint",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/granttypessupported",
                    "title" : "case grantTypesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/idtokenencryptionalgvaluessupported",
                    "title" : "case idTokenEncryptionAlgValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/idtokenencryptionencvaluessupported",
                    "title" : "case idTokenEncryptionEncValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/idtokensigningalgvaluessupported",
                    "title" : "case idTokenSigningAlgValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/introspectionendpoint",
                    "title" : "case introspectionEndpoint",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/introspectionendpointauthmethodssupported",
                    "title" : "case introspectionEndpointAuthMethodsSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/issuer",
                    "title" : "case issuer",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/jwksuri",
                    "title" : "case jwksUri",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/oppolicyuri",
                    "title" : "case opPolicyUri",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/optosuri",
                    "title" : "case opTosUri",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/registrationendpoint",
                    "title" : "case registrationEndpoint",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requestobjectencryptionalgvaluessupported",
                    "title" : "case requestObjectEncryptionAlgValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requestobjectencryptionencvaluessupported",
                    "title" : "case requestObjectEncryptionEncValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requestobjectsigningalgvaluessupported",
                    "title" : "case requestObjectSigningAlgValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requestparametersupported",
                    "title" : "case requestParameterSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requesturiparametersupported",
                    "title" : "case requestUriParameterSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requirerequesturiregistration",
                    "title" : "case requireRequestUriRegistration",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/responsemodessupported",
                    "title" : "case responseModesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/responsetypessupported",
                    "title" : "case responseTypesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/revocationendpoint",
                    "title" : "case revocationEndpoint",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/revocationendpointauthmethodssupported",
                    "title" : "case revocationEndpointAuthMethodsSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/scopessupported",
                    "title" : "case scopesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/servicedocumentation",
                    "title" : "case serviceDocumentation",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/subjecttypessupported",
                    "title" : "case subjectTypesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/tokenendpoint",
                    "title" : "case tokenEndpoint",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/tokenendpointauthmethodssupported",
                    "title" : "case tokenEndpointAuthMethodsSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/tokenendpointauthsigningalgvaluessupported",
                    "title" : "case tokenEndpointAuthSigningAlgValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/uilocalessupported",
                    "title" : "case uiLocalesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/userinfoencryptionalgvaluessupported",
                    "title" : "case userinfoEncryptionAlgValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/userinfoencryptionencvaluessupported",
                    "title" : "case userinfoEncryptionEncValuesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/userinfoendpoint",
                    "title" : "case userinfoEndpoint",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/userinfosigningalgvaluessupported",
                    "title" : "case userinfoSigningAlgValuesSupported",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/init(intvalue:)",
                    "title" : "init?(intValue: Int)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/init(stringvalue:)",
                    "title" : "init?(stringValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/codingkey-implementations",
                    "title" : "CodingKey Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata",
                "title" : "OpenIdConfiguration.ProviderMetadata",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/allclaims",
                    "title" : "var allClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/claims",
                    "title" : "var claims: [Self.ClaimType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/customclaims",
                    "title" : "var customClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/arrayvalue(_:for:)-2tq7q",
                    "title" : "func arrayValue<T>(T.Type, for: String) -> [T]?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/arrayvalue(_:for:)-9ha7z",
                    "title" : "func arrayValue<T>(T.Type, for: Self.ClaimType) -> [T]?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(_:for:)",
                    "title" : "func value<T>(T.Type, for: String) -> T?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)-1cird",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)-1nvti",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)-4pmkm",
                    "title" : "subscript<T>(Self.ClaimType) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)-76yex",
                    "title" : "subscript<T>(String) -> [String : T?]?",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/hasclaims-implementations",
                "title" : "HasClaims Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/jsonclaimcontainer-implementations",
                "title" : "JSONClaimContainer Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/openidconfiguration",
            "title" : "OpenIdConfiguration",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/facialrecognition",
                "title" : "case facialRecognition",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/fingerprintbiometric",
                "title" : "case fingerprintBiometric",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/geolocation",
                "title" : "case geolocation",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/irisscanbiometric",
                "title" : "case irisScanBiometric",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/knowledgebased",
                "title" : "case knowledgeBased",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/multiplechannel",
                "title" : "case multipleChannel",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/multiplefactor",
                "title" : "case multipleFactor",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/onetimepassword",
                "title" : "case oneTimePassword",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/passwordbased",
                "title" : "case passwordBased",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/pin",
                "title" : "case pin",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/proofofpossession",
                "title" : "case proofOfPossession",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/proofofpossessionhardware",
                "title" : "case proofOfPossessionHardware",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/proofofpossessionsoftware",
                "title" : "case proofOfPossessionSoftware",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/retinascanbiometric",
                "title" : "case retinaScanBiometric",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/riskbased",
                "title" : "case riskBased",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/smartcard",
                "title" : "case smartCard",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/smsconfirmation",
                "title" : "case smsConfirmation",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/telephoneconfirmation",
                "title" : "case telephoneConfirmation",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/userpresence",
                "title" : "case userPresence",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/voicebiometric",
                "title" : "case voiceBiometric",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/windowsintegrated",
                "title" : "case windowsIntegrated",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/claim(_:in:from:)-408fy",
                    "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/claim(_:in:from:)-65pep",
                    "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/claimconvertable-implementations",
                "title" : "ClaimConvertable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationmethod\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/authenticationmethod",
            "title" : "AuthenticationMethod",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationflow\/isauthenticating",
                "title" : "var isAuthenticating: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationflow\/reset()",
                "title" : "func reset()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/authenticationflow",
            "title" : "AuthenticationFlow",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authentication(flow:received:)-1a9vb",
                "title" : "func authentication<Flow>(flow: Flow, received: OAuth2Error)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authentication(flow:received:)-3zd8n",
                "title" : "func authentication<Flow>(flow: Flow, received: Token)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authenticationfinished(flow:)",
                "title" : "func authenticationFinished<Flow>(flow: Flow)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authenticationstarted(flow:)",
                "title" : "func authenticationStarted<Flow>(flow: Flow)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/authenticationdelegate",
            "title" : "AuthenticationDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2tokenrequest\/clientid",
                "title" : "var clientId: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2tokenrequest",
            "title" : "OAuth2TokenRequest",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/authorizationcode",
                "title" : "case authorizationCode",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/devicecode",
                "title" : "case deviceCode",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/implicit",
                "title" : "case implicit",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/oob",
                "title" : "case oob",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/oobmfa",
                "title" : "case oobMFA",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/other(_:)",
                "title" : "case other(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/otp",
                "title" : "case otp",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/otpmfa",
                "title" : "case otpMFA",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/password",
                "title" : "case password",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/refreshtoken",
                "title" : "case refreshToken",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/tokenexchange",
                "title" : "case tokenExchange",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/webauthn",
                "title" : "case webAuthn",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/webauthnmfa",
                "title" : "case webAuthnMFA",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/claim(_:in:from:)-4essl",
                    "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/claim(_:in:from:)-9msue",
                    "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/granttype\/claimconvertable-implementations",
                "title" : "ClaimConvertable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/granttype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/rawvalue-swift.property",
                    "title" : "var rawValue: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/rawvalue-swift.typealias",
                    "title" : "GrantType.RawValue",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/granttype\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/granttype",
            "title" : "GrantType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/pkce\/init()",
                "title" : "init?()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/pkce\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/pkce\/codechallenge",
                "title" : "let codeChallenge: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/pkce\/codeverifier",
                "title" : "let codeVerifier: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/pkce\/method-swift.property",
                "title" : "let method: PKCE.Method",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/plain",
                    "title" : "case plain",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/sha256",
                    "title" : "case sha256",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum",
                "title" : "PKCE.Method",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/pkce\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/pkce",
            "title" : "PKCE",
            "type" : "struct"
          },
          {
            "title" : "JWT and Token Verification",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct\/algorithm",
                    "title" : "let algorithm: JWK.Algorithm",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct\/keyid",
                    "title" : "let keyId: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct",
                "title" : "JWT.Header",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/init(_:)",
                "title" : "init(String) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/init(rawvalue:)",
                "title" : "init?(rawValue: JWT.RawValue)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/audience",
                "title" : "var audience: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/authenticationcontext",
                "title" : "var authenticationContext: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/expirationtime",
                "title" : "var expirationTime: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/expiresin",
                "title" : "var expiresIn: TimeInterval",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/header-swift.property",
                "title" : "let header: JWT.Header",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/issuedat",
                "title" : "var issuedAt: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/issuer",
                "title" : "var issuer: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/notbefore",
                "title" : "var notBefore: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/payload",
                "title" : "let payload: [String : Any]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/rawvalue-swift.property",
                "title" : "let rawValue: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/scope",
                "title" : "var scope: [String]?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/validate(using:)",
                "title" : "func validate(using: JWKS) throws -> Bool",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/claimtype",
                "title" : "JWT.ClaimType",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/rawvalue-swift.typealias",
                "title" : "JWT.RawValue",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/expiresat",
                    "title" : "var expiresAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/isexpired",
                    "title" : "var isExpired: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/isvalid",
                    "title" : "var isValid: Bool",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwt\/expires-implementations",
                "title" : "Expires Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/address",
                    "title" : "var address: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/allclaims",
                    "title" : "var allClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/authtime",
                    "title" : "var authTime: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/authenticationclass",
                    "title" : "var authenticationClass: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/authenticationmethods",
                    "title" : "var authenticationMethods: [AuthenticationMethod]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/birthdate",
                    "title" : "var birthdate: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/claims",
                    "title" : "var claims: [Self.ClaimType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/customclaims",
                    "title" : "var customClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/email",
                    "title" : "var email: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/emailverified",
                    "title" : "var emailVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/familyname",
                    "title" : "var familyName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/gender",
                    "title" : "var gender: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/givenname",
                    "title" : "var givenName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/locale",
                    "title" : "var locale: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/middlename",
                    "title" : "var middleName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/namecomponents",
                    "title" : "var nameComponents: PersonNameComponents",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/nickname",
                    "title" : "var nickname: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/phonenumber",
                    "title" : "var phoneNumber: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/phonenumberverified",
                    "title" : "var phoneNumberVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/picture",
                    "title" : "var picture: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/preferredusername",
                    "title" : "var preferredUsername: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/profile",
                    "title" : "var profile: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/subject",
                    "title" : "var subject: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/timezone",
                    "title" : "var timeZone: TimeZone?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/updatedat",
                    "title" : "var updatedAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/userlocale",
                    "title" : "var userLocale: Locale?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/website",
                    "title" : "var website: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/zoneinfo",
                    "title" : "var zoneinfo: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/arrayvalue(_:for:)-331qc",
                    "title" : "func arrayValue<T>(T.Type, for: String) -> [T]?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/arrayvalue(_:for:)-3j5m",
                    "title" : "func arrayValue<T>(T.Type, for: Self.ClaimType) -> [T]?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/value(_:for:)",
                    "title" : "func value<T>(T.Type, for: String) -> T?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-1yjz2",
                    "title" : "subscript<T>(String) -> [String : T?]?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-3zfn",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-4wd5l",
                    "title" : "subscript<T>(Self.ClaimType) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-9g5qo",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwt\/hasclaims-implementations",
                "title" : "HasClaims Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwt\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwt",
            "title" : "JWT",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.property",
                "title" : "let algorithm: JWK.Algorithm?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/id-5ooz1",
                "title" : "let id: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/rsaexponent",
                "title" : "let rsaExponent: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/rsamodulus",
                "title" : "let rsaModulus: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/type",
                "title" : "let type: JWK.KeyType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.property",
                "title" : "let usage: JWK.Usage",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/verify(token:)",
                "title" : "func verify(token: JWT) throws -> Bool",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/validator",
                "title" : "static var validator: JWKValidator",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a128gcmkw",
                    "title" : "case a128GCMKW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a128kw",
                    "title" : "case a128KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a192gcmkw",
                    "title" : "case a192GCMKW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a192kw",
                    "title" : "case a192KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a256gcmkw",
                    "title" : "case a256GCMKW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a256kw",
                    "title" : "case a256KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/dir",
                    "title" : "case dir",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes",
                    "title" : "case ecdhES",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes_a128kw",
                    "title" : "case ecdhES_a128KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes_a192kw",
                    "title" : "case ecdhES_a192KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes_a256kw",
                    "title" : "case ecdhES_a256KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/es256",
                    "title" : "case es256",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/es384",
                    "title" : "case es384",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/es512",
                    "title" : "case es512",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hs256",
                    "title" : "case hs256",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hs384",
                    "title" : "case hs384",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hs512",
                    "title" : "case hs512",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/none",
                    "title" : "case none",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/pbes2_hs256_a128kw",
                    "title" : "case pbes2_HS256_A128KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/pbes2_hs384_a192kw",
                    "title" : "case pbes2_HS384_A192KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/pbes2_hs512_a256kw",
                    "title" : "case pbes2_HS512_A256KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ps256",
                    "title" : "case ps256",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ps384",
                    "title" : "case ps384",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ps512",
                    "title" : "case ps512",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rs256",
                    "title" : "case rs256",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rs384",
                    "title" : "case rs384",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rs512",
                    "title" : "case rs512",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rsa1_5",
                    "title" : "case rsa1_5",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rsaoaep",
                    "title" : "case rsaOAEP",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rsaoaep256",
                    "title" : "case rsaOAEP256",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum",
                "title" : "JWK.Algorithm",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/ellipticcurve",
                    "title" : "case ellipticCurve",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/octetsequence",
                    "title" : "case octetSequence",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/rsa",
                    "title" : "case rsa",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk\/keytype",
                "title" : "JWK.KeyType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/encryption",
                    "title" : "case encryption",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/signature",
                    "title" : "case signature",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum",
                "title" : "JWK.Usage",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/id-7lob6",
                    "title" : "var id: ObjectIdentifier",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk\/identifiable-implementations",
                "title" : "Identifiable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwk",
            "title" : "JWK",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/==(_:_:)",
                "title" : "static func == (JWKS, JWKS) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/endindex",
                "title" : "var endIndex: JWKS.Index",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/startindex",
                "title" : "var startIndex: JWKS.Index",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/index(after:)",
                "title" : "func index(after: JWKS.Index) -> JWKS.Index",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-1lvoo",
                "title" : "subscript(String) -> JWK?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-1qepr",
                "title" : "subscript(JWKS.Index) -> JWKS.Element",
                "type" : "subscript"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/element",
                "title" : "JWKS.Element",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/index",
                "title" : "JWKS.Index",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/first",
                    "title" : "var first: Self.Element?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/indices",
                    "title" : "var indices: DefaultIndices<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/underestimatedcount-58gny",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/distance(from:to:)",
                    "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/drop(while:)",
                    "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/dropfirst(_:)",
                    "title" : "func dropFirst(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/droplast(_:)",
                    "title" : "func dropLast(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/firstindex(of:)",
                    "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/firstindex(where:)",
                    "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/firstrange(of:)",
                    "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/formindex(_:offsetby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/formindex(_:offsetby:limitedby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/formindex(after:)",
                    "title" : "func formIndex(after: inout Self.Index)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/index(_:offsetby:)",
                    "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/index(_:offsetby:limitedby:)",
                    "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/index(of:)",
                    "title" : "func index(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/makeiterator()",
                    "title" : "func makeIterator() -> IndexingIterator<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/map(_:)-1a04p",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/prefix(_:)",
                    "title" : "func prefix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/prefix(through:)",
                    "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/prefix(upto:)",
                    "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/prefix(while:)",
                    "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/randomelement()",
                    "title" : "func randomElement() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/randomelement(using:)",
                    "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/ranges(of:)",
                    "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/split(separator:maxsplits:omittingemptysubsequences:)",
                    "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/suffix(_:)",
                    "title" : "func suffix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/suffix(from:)",
                    "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/trimmingprefix(_:)",
                    "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/trimmingprefix(while:)",
                    "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-4t0w0",
                    "title" : "subscript<R>(R) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-5kdvj",
                    "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-78ks6",
                    "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwks\/collection-implementations",
                "title" : "Collection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwks\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/lazy",
                    "title" : "var lazy: LazySequence<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/publisher",
                    "title" : "var publisher: Publishers.Sequence<Self, Never>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/underestimatedcount-1bgzu",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/allsatisfy(_:)",
                    "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/compactmap(_:)",
                    "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/compare(_:_:)",
                    "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/contains(_:)",
                    "title" : "func contains(Self.Element) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/contains(where:)",
                    "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/elementsequal(_:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/elementsequal(_:by:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/enumerated()",
                    "title" : "func enumerated() -> EnumeratedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/filter(_:)",
                    "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/first(where:)",
                    "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/flatmap(_:)-4liif",
                    "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/flatmap(_:)-6nmde",
                    "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/foreach(_:)",
                    "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/formatted(_:)",
                    "title" : "func formatted<S>(S) -> S.FormatOutput",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/lexicographicallyprecedes(_:by:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/map(_:)-1i8gg",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/max(by:)",
                    "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/min(by:)",
                    "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/reduce(_:_:)",
                    "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/reduce(into:_:)",
                    "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/reversed()",
                    "title" : "func reversed() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/shuffled()",
                    "title" : "func shuffled() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/shuffled(using:)",
                    "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/sorted(by:)",
                    "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/sorted(using:)-4bnuh",
                    "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/sorted(using:)-984w9",
                    "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/starts(with:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/starts(with:by:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/withcontiguousstorageifavailable(_:)",
                    "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwks\/sequence-implementations",
                "title" : "Sequence Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwks",
            "title" : "JWKS",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/accesstokenhash",
                "title" : "case accessTokenHash",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/aceprofile",
                "title" : "case aceProfile",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/actor",
                "title" : "case actor",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/address",
                "title" : "case address",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/attestationlevel",
                "title" : "case attestationLevel",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/audience",
                "title" : "case audience",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/authcontextclassreference",
                "title" : "case authContextClassReference",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/authmethodsreference",
                "title" : "case authMethodsReference",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/authtime",
                "title" : "case authTime",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/authorizedactor",
                "title" : "case authorizedActor",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/authorizedparty",
                "title" : "case authorizedParty",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/birthdate",
                "title" : "case birthdate",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/clientid",
                "title" : "case clientId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/clientnonce",
                "title" : "case clientNonce",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/codehash",
                "title" : "case codeHash",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/confirmation",
                "title" : "case confirmation",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/custom(_:)",
                "title" : "case custom(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/destinationidentity",
                "title" : "case destinationIdentity",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/divertedtarget",
                "title" : "case divertedTarget",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/email",
                "title" : "case email",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/emailverified",
                "title" : "case emailVerified",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/entitlements",
                "title" : "case entitlements",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/events",
                "title" : "case events",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/expirationtime",
                "title" : "case expirationTime",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/expiresin",
                "title" : "case expiresIn",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/familyname",
                "title" : "case familyName",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/gender",
                "title" : "case gender",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/givenname",
                "title" : "case givenName",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/groups",
                "title" : "case groups",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/identityprovider",
                "title" : "case identityProvider",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/isprivateemail",
                "title" : "case isPrivateEmail",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/issuedat",
                "title" : "case issuedAt",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/issuer",
                "title" : "case issuer",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/jcarddata",
                "title" : "case jcardData",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/jwtid",
                "title" : "case jwtId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/locale",
                "title" : "case locale",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/maxapirequestcount",
                "title" : "case maxAPIRequestCount",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/mediakeyfingerprint",
                "title" : "case mediaKeyFingerprint",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/middlename",
                "title" : "case middleName",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/name",
                "title" : "case name",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/nickname",
                "title" : "case nickname",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/nonce",
                "title" : "case nonce",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/noncesupported",
                "title" : "case nonceSupported",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/notbefore",
                "title" : "case notBefore",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/originalpassport",
                "title" : "case originalPassport",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/originatingid",
                "title" : "case originatingId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/originatingidentity",
                "title" : "case originatingIdentity",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/phonenumber",
                "title" : "case phoneNumber",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/phonenumberverified",
                "title" : "case phoneNumberVerified",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/picture",
                "title" : "case picture",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/preferredusername",
                "title" : "case preferredUsername",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/profile",
                "title" : "case profile",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/realuserstatus",
                "title" : "case realUserStatus",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/resourcepriorityheader",
                "title" : "case resourcePriorityHeader",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/roles",
                "title" : "case roles",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/scope",
                "title" : "case scope",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/sessionid",
                "title" : "case sessionId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/sipcseqnum",
                "title" : "case sipCSeqNum",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/sipcallid",
                "title" : "case sipCallId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/sipdate",
                "title" : "case sipDate",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/sipfromtag",
                "title" : "case sipFromTag",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/sippriorityheader",
                "title" : "case sipPriorityHeader",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/sipviabranch",
                "title" : "case sipViaBranch",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/subject",
                "title" : "case subject",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/subjectpublickey",
                "title" : "case subjectPublicKey",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/timeofevent",
                "title" : "case timeOfEvent",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/tokenintrospection",
                "title" : "case tokenIntrospection",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/transactionid",
                "title" : "case transactionId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/transfersubject",
                "title" : "case transferSubject",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/updatedat",
                "title" : "case updatedAt",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/userid",
                "title" : "case userId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/vectoroftrust",
                "title" : "case vectorOfTrust",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/vectoroftrustmark",
                "title" : "case vectorOfTrustMark",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/verifiablecredential",
                "title" : "case verifiableCredential",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/verifiablepresentation",
                "title" : "case verifiablePresentation",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/version",
                "title" : "case version",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/website",
                "title" : "case website",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwtclaim\/zoneinfo",
                "title" : "case zoneinfo",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/claim(_:in:from:)-1rzp4",
                    "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/claim(_:in:from:)-8vbq1",
                    "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwtclaim\/claimconvertable-implementations",
                "title" : "ClaimConvertable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwtclaim\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/rawvalue-swift.property",
                    "title" : "var rawValue: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/rawvalue-swift.typealias",
                    "title" : "JWTClaim.RawValue",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwtclaim\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwtclaim",
            "title" : "JWTClaim",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/claimtype",
                "title" : "ClaimType",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/address",
                "title" : "var address: [String : String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/allclaims",
                "title" : "var allClaims: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/authtime",
                "title" : "var authTime: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/authenticationclass",
                "title" : "var authenticationClass: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/authenticationmethods",
                "title" : "var authenticationMethods: [AuthenticationMethod]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/birthdate",
                "title" : "var birthdate: String?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/claims-78of3",
                        "title" : "var claims: [Self.ClaimType]",
                        "type" : "property"
                      }
                    ],
                    "title" : "HasClaims Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/hasclaims\/claims-15zsq",
                "title" : "var claims: [Self.ClaimType]",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/customclaims-60er",
                        "title" : "var customClaims: [String]",
                        "type" : "property"
                      }
                    ],
                    "title" : "HasClaims Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/hasclaims\/customclaims-47hcx",
                "title" : "var customClaims: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/email",
                "title" : "var email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/emailverified",
                "title" : "var emailVerified: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/familyname",
                "title" : "var familyName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/gender",
                "title" : "var gender: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/givenname",
                "title" : "var givenName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/locale",
                "title" : "var locale: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/middlename",
                "title" : "var middleName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/namecomponents",
                "title" : "var nameComponents: PersonNameComponents",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/nickname",
                "title" : "var nickname: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/payload",
                "title" : "var payload: [String : Any]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/phonenumber",
                "title" : "var phoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/phonenumberverified",
                "title" : "var phoneNumberVerified: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/picture",
                "title" : "var picture: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/preferredusername",
                "title" : "var preferredUsername: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/profile",
                "title" : "var profile: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/subject",
                "title" : "var subject: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/timezone",
                "title" : "var timeZone: TimeZone?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/updatedat",
                "title" : "var updatedAt: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/userlocale",
                "title" : "var userLocale: Locale?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/website",
                "title" : "var website: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/zoneinfo",
                "title" : "var zoneinfo: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/arrayvalue(_:for:)-3gekx",
                "title" : "func arrayValue<T>(T.Type, for: Self.ClaimType) -> [T]?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/arrayvalue(_:for:)-4uhxn",
                "title" : "func arrayValue<T>(T.Type, for: String) -> [T]?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/value(_:for:)",
                "title" : "func value<T>(T.Type, for: String) -> T?",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-36se2",
                "title" : "subscript<T>(String) -> T?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-4jr6h",
                "title" : "subscript<T>(Self.ClaimType) -> T?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-57c7t",
                "title" : "subscript<T>(String) -> [String : T?]?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-7r05",
                "title" : "subscript<T>(String) -> T?",
                "type" : "subscript"
              }
            ],
            "path" : "\/documentation\/authfoundation\/hasclaims",
            "title" : "HasClaims",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonclaimcontainer\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jsonclaimcontainer",
            "title" : "JSONClaimContainer",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/claimconvertable\/claim(_:in:from:)-7z25",
                        "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimconvertable\/claim(_:in:from:)-6kydw",
                        "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimconvertable\/claim(_:in:from:)-8nglg",
                        "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimconvertable\/claim(_:in:from:)-5xez",
                        "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                        "type" : "method"
                      }
                    ],
                    "title" : "ClaimConvertable Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/claimconvertable\/claim(_:in:from:)-3980t",
                "title" : "static func claim(String, in: HasClaims, from: Any?) -> Self?",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/claimconvertable",
            "title" : "ClaimConvertable",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/isclaim\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/isclaim\/rawvalue",
                "title" : "var rawValue: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/isclaim",
            "title" : "IsClaim",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/expires\/expiresat-579iu",
                        "title" : "var expiresAt: Date?",
                        "type" : "property"
                      }
                    ],
                    "title" : "Expires Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/expires\/expiresat-8h3jt",
                "title" : "var expiresAt: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/expires\/expiresin",
                "title" : "var expiresIn: TimeInterval",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/expires\/isexpired-zfoq",
                        "title" : "var isExpired: Bool",
                        "type" : "property"
                      }
                    ],
                    "title" : "Expires Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/expires\/isexpired-1wbrv",
                "title" : "var isExpired: Bool",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/expires\/isvalid-pfo1",
                        "title" : "var isValid: Bool",
                        "type" : "property"
                      }
                    ],
                    "title" : "Expires Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/expires\/isvalid-24xas",
                "title" : "var isValid: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/expires\/issuedat",
                "title" : "var issuedAt: Date?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/expires",
            "title" : "Expires",
            "type" : "protocol"
          },
          {
            "title" : "Security",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/init(account:service:server:accessibility:accessgroup:accesscontrol:synchronizable:label:description:generic:value:)",
                    "title" : "init(account: String, service: String?, server: String?, accessibility: Keychain.Accessibility?, accessGroup: String?, accessControl: SecAccessControl?, synchronizable: Bool?, label: String?, description: String?, generic: Data?, value: Data)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/accesscontrol",
                    "title" : "var accessControl: SecAccessControl?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/accessgroup",
                    "title" : "var accessGroup: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/accessibility",
                    "title" : "var accessibility: Keychain.Accessibility?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/account",
                    "title" : "let account: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/description",
                    "title" : "var description: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/generic",
                    "title" : "var generic: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/label",
                    "title" : "var label: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/server",
                    "title" : "let server: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/service",
                    "title" : "let service: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/synchronizable",
                    "title" : "var synchronizable: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/value",
                    "title" : "var value: Data",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/delete()",
                    "title" : "func delete() throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/save(authenticationcontext:)",
                    "title" : "func save(authenticationContext: KeychainAuthenticationContext?) throws -> Keychain.Item",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/update(_:authenticationcontext:)",
                    "title" : "func update(Keychain.Item, authenticationContext: KeychainAuthenticationContext?) throws",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychain\/item",
                "title" : "Keychain.Item",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/accesscontrol",
                        "title" : "var accessControl: SecAccessControl?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/accessgroup",
                        "title" : "let accessGroup: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/accessibility",
                        "title" : "var accessibility: Keychain.Accessibility?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/account",
                        "title" : "let account: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/creationdate",
                        "title" : "let creationDate: Date",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/description",
                        "title" : "let description: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/generic",
                        "title" : "let generic: Data?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/label",
                        "title" : "let label: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/modificationdate",
                        "title" : "let modificationDate: Date",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/server",
                        "title" : "let server: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/service",
                        "title" : "let service: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/synchronizable",
                        "title" : "var synchronizable: Bool?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/delete()",
                        "title" : "func delete() throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/get(prompt:authenticationcontext:)",
                        "title" : "func get(prompt: String?, authenticationContext: KeychainAuthenticationContext?) throws -> Keychain.Item",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/update(_:authenticationcontext:)",
                        "title" : "func update(Keychain.Item, authenticationContext: KeychainAuthenticationContext?) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/result",
                    "title" : "Keychain.Search.Result",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/init(account:service:server:accessgroup:)",
                    "title" : "init(account: String?, service: String?, server: String?, accessGroup: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/accessgroup",
                    "title" : "let accessGroup: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/account",
                    "title" : "let account: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/server",
                    "title" : "let server: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/service",
                    "title" : "let service: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/delete()",
                    "title" : "func delete() throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/get(prompt:authenticationcontext:)",
                    "title" : "func get(prompt: String?, authenticationContext: KeychainAuthenticationContext?) throws -> Keychain.Item",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/list()",
                    "title" : "func list() throws -> [Keychain.Search.Result]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychain\/search",
                "title" : "Keychain.Search",
                "type" : "struct"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/afterfirstunlock",
                    "title" : "case afterFirstUnlock",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/afterfirstunlockthisdeviceonly",
                    "title" : "case afterFirstUnlockThisDeviceOnly",
                    "type" : "case"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/always",
                    "title" : "case always",
                    "type" : "case"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/alwaysthisdeviceonly",
                    "title" : "case alwaysThisDeviceOnly",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/unlocked",
                    "title" : "case unlocked",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/unlockedthisdeviceonly",
                    "title" : "case unlockedThisDeviceOnly",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/whenpasswordsetthisdeviceonly",
                    "title" : "case whenPasswordSetThisDeviceOnly",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/rawvalue-swift.property",
                        "title" : "var rawValue: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/rawvalue-swift.typealias",
                        "title" : "Keychain.Accessibility.RawValue",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychain\/accessibility",
                "title" : "Keychain.Accessibility",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/authfoundation\/keychain",
            "title" : "Keychain",
            "type" : "struct"
          },
          {
            "path" : "\/documentation\/authfoundation\/keychainauthenticationcontext",
            "title" : "KeychainAuthenticationContext",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/authfoundation\/tokenauthenticationcontext",
            "title" : "TokenAuthenticationContext",
            "type" : "protocol"
          },
          {
            "title" : "Customizations",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/authfoundation\/customizingnetworkrequests",
            "title" : "Customizing Network Requests",
            "type" : "article"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/timecoordinator\/now",
                "title" : "var now: Date",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/timecoordinator\/date(from:)",
                "title" : "func date(from: Date) -> Date",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/timecoordinator",
            "title" : "TimeCoordinator",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialcoordinator\/credentialdatasource",
                "title" : "var credentialDataSource: CredentialDataSource",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialcoordinator\/tokenstorage",
                "title" : "var tokenStorage: TokenStorage",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialcoordinator\/observe(oauth2:)",
                "title" : "func observe(oauth2: OAuth2Client)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialcoordinator\/remove(credential:)",
                "title" : "func remove(credential: Credential) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/credentialcoordinator",
            "title" : "CredentialCoordinator",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/credentialcount",
                "title" : "var credentialCount: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/delegate",
                "title" : "var delegate: CredentialDataSourceDelegate?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/credential(for:coordinator:)",
                "title" : "func credential(for: Token, coordinator: CredentialCoordinator) -> Credential",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/hascredential(for:)",
                "title" : "func hasCredential(for: Token) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/remove(credential:)",
                "title" : "func remove(credential: Credential)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/credentialdatasource\/urlsession(for:)-9ehm3",
                        "title" : "func urlSession(for: Token) -> URLSessionProtocol",
                        "type" : "method"
                      }
                    ],
                    "title" : "CredentialDataSource Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/urlsession(for:)-4uxwd",
                "title" : "func urlSession(for: Token) -> URLSessionProtocol",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/credentialdatasource",
            "title" : "CredentialDataSource",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasourcedelegate\/credential(datasource:created:)",
                "title" : "func credential(dataSource: CredentialDataSource, created: Credential)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasourcedelegate\/credential(datasource:removed:)",
                "title" : "func credential(dataSource: CredentialDataSource, removed: Credential)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/credentialdatasourcedelegate",
            "title" : "CredentialDataSourceDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/allids",
                "title" : "var allIDs: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/defaulttokenid",
                "title" : "var defaultTokenID: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/delegate",
                "title" : "var delegate: TokenStorageDelegate?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/add(token:metadata:security:)",
                "title" : "func add(token: Token, metadata: Token.Metadata?, security: [Credential.Security]) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/get(token:prompt:authenticationcontext:)",
                "title" : "func get(token: String, prompt: String?, authenticationContext: TokenAuthenticationContext?) throws -> Token",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/metadata(for:)",
                "title" : "func metadata(for: String) throws -> Token.Metadata",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/remove(id:)",
                "title" : "func remove(id: String) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/replace(token:with:security:)",
                "title" : "func replace(token: String, with: Token, security: [Credential.Security]?) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/setdefaulttokenid(_:)",
                "title" : "func setDefaultTokenID(String?) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/setmetadata(_:)",
                "title" : "func setMetadata(Token.Metadata) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/tokenstorage",
            "title" : "TokenStorage",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:added:token:)",
                "title" : "func token(storage: TokenStorage, added: String, token: Token)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:defaultchanged:)",
                "title" : "func token(storage: TokenStorage, defaultChanged: String?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:removed:)",
                "title" : "func token(storage: TokenStorage, removed: String)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:replaced:with:)",
                "title" : "func token(storage: TokenStorage, replaced: String, with: Token)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/tokenstoragedelegate",
            "title" : "TokenStorageDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwkvalidator\/validate(token:using:)",
                "title" : "func validate(token: JWT, using: JWKS) throws -> Bool",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwkvalidator",
            "title" : "JWKValidator",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenhashvalidator\/validate(_:idtoken:)",
                "title" : "func validate(String, idToken: JWT) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/tokenhashvalidator",
            "title" : "TokenHashValidator",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/idtokenvalidator\/issuedatgraceinterval",
                "title" : "var issuedAtGraceInterval: TimeInterval",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/idtokenvalidator\/validate(token:issuer:clientid:context:)",
                "title" : "func validate(token: JWT, issuer: URL, clientId: String, context: IDTokenValidatorContext?) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/idtokenvalidator",
            "title" : "IDTokenValidator",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/idtokenvalidatorcontext\/maxage",
                "title" : "var maxAge: TimeInterval?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/idtokenvalidatorcontext\/nonce",
                "title" : "var nonce: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/idtokenvalidatorcontext",
            "title" : "IDTokenValidatorContext",
            "type" : "protocol"
          },
          {
            "title" : "Networking",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/additionalhttpheaders-77qac",
                        "title" : "var additionalHttpHeaders: [String : String]?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/additionalhttpheaders-7z63z",
                "title" : "var additionalHttpHeaders: [String : String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclient\/baseurl",
                "title" : "var baseURL: URL",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/requestidheader-3s9s1",
                        "title" : "var requestIdHeader: String?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/requestidheader-3029y",
                "title" : "var requestIdHeader: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclient\/session",
                "title" : "var session: URLSessionProtocol",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/useragent-1c89v",
                        "title" : "var userAgent: String",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/useragent-8m9b4",
                "title" : "var userAgent: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclient\/decode(_:from:userinfo:)",
                "title" : "func decode<T>(T.Type, from: Data, userInfo: [CodingUserInfoKey : Any]?) throws -> T",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-88sth",
                        "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-1c12k",
                        "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-7fkxl",
                        "title" : "func didSend(request: URLRequest, received: APIClientError)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-42ak",
                "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-7fkxl",
                        "title" : "func didSend(request: URLRequest, received: APIClientError)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-1c12k",
                        "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-88sth",
                        "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-5li2y",
                "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:requestid:ratelimit:)",
                "title" : "func didSend(request: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/error(from:)-2zqym",
                        "title" : "func error(from: Data) -> Error?",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/error(from:)-701g0",
                "title" : "func error(from: Data) -> Error?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/send(_:parsing:completion:)-9g3vj",
                        "title" : "func send<T>(URLRequest, parsing: APIParsingContext?, completion: (Result<APIResponse<T>, APIClientError>) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/send(_:parsing:completion:)-7pof9",
                "title" : "func send<T>(URLRequest, parsing: APIParsingContext?, completion: (Result<APIResponse<T>, APIClientError>) -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/shouldretry(request:ratelimit:)-4i6ks",
                        "title" : "func shouldRetry(request: URLRequest, rateLimit: APIRateLimit) -> APIRetry",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/shouldretry(request:ratelimit:)-5s7no",
                "title" : "func shouldRetry(request: URLRequest, rateLimit: APIRateLimit) -> APIRetry",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/willsend(request:)-72e7e",
                        "title" : "func willSend(request: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/willsend(request:)-9lrtd",
                "title" : "func willSend(request: inout URLRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiclient",
            "title" : "APIClient",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-7vw3y",
                        "title" : "func api<T>(client: APIClient, didSend: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-4mcbm",
                        "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-4ob1d",
                "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-7vw3y",
                        "title" : "func api<T>(client: APIClient, didSend: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-4mcbm",
                        "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-8l08k",
                "title" : "func api<T>(client: APIClient, didSend: URLRequest, received: APIResponse<T>)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:requestid:ratelimit:)-5ofdu",
                        "title" : "func api(client: APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:requestid:ratelimit:)-4mdur",
                "title" : "func api(client: APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:shouldretry:)-6w2a8",
                        "title" : "func api(client: APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:shouldretry:)-1f8ai",
                "title" : "func api(client: APIClient, shouldRetry: URLRequest) -> APIRetry",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:willsend:)-9cnzq",
                        "title" : "func api(client: APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:willsend:)-9p8jr",
                "title" : "func api(client: APIClient, willSend: inout URLRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiclientdelegate",
            "title" : "APIClientDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclientconfiguration\/baseurl",
                "title" : "var baseURL: URL",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiclientconfiguration",
            "title" : "APIClientConfiguration",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apicontenttype\/formencoded",
                "title" : "case formEncoded",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apicontenttype\/json",
                "title" : "case json",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apicontenttype\/other(_:)",
                "title" : "case other(String)",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apicontenttype\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apicontenttype\/rawvalue-swift.typealias",
                "title" : "APIContentType.RawValue",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apicontenttype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/rawvalue-swift.property",
                    "title" : "var rawValue: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apicontenttype\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apicontenttype",
            "title" : "APIContentType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequest\/responsetype",
                "title" : "ResponseType",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/acceptstype-3d3te",
                        "title" : "var acceptsType: APIContentType?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/acceptstype-529gv",
                "title" : "var acceptsType: APIContentType?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/authorization-9d1g4",
                        "title" : "var authorization: APIAuthorization?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/authorization-7539h",
                "title" : "var authorization: APIAuthorization?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/cachepolicy-6ni0p",
                        "title" : "var cachePolicy: URLRequest.CachePolicy",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/cachepolicy-8eox0",
                "title" : "var cachePolicy: URLRequest.CachePolicy",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/contenttype-96qjt",
                        "title" : "var contentType: APIContentType?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/contenttype-2rqd7",
                "title" : "var contentType: APIContentType?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/headers-9k3go",
                        "title" : "var headers: [String : APIRequestArgument?]?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/headers-8ieky",
                "title" : "var headers: [String : APIRequestArgument?]?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/httpmethod-2jjvk",
                        "title" : "var httpMethod: APIRequestMethod",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/httpmethod-3kav0",
                "title" : "var httpMethod: APIRequestMethod",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/query-730ld",
                        "title" : "var query: [String : APIRequestArgument?]?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/query-96683",
                "title" : "var query: [String : APIRequestArgument?]?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/timeoutinterval-58cfn",
                        "title" : "var timeoutInterval: TimeInterval",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/timeoutinterval-7fbtk",
                "title" : "var timeoutInterval: TimeInterval",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequest\/url",
                "title" : "var url: URL",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/body()-6rb14",
                        "title" : "func body() throws -> Data?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/body()-2spui",
                        "title" : "func body() throws -> Data?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/body()-8cybb",
                        "title" : "func body() throws -> Data?",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/body()-2l9s0",
                "title" : "func body() throws -> Data?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/request(for:)-9pe0",
                        "title" : "func request(for: APIClient) throws -> URLRequest",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/request(for:)-20zou",
                "title" : "func request(for: APIClient) throws -> URLRequest",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:)-1f4t7",
                        "title" : "func send(to: APIClient, parsing: APIParsingContext?) async throws -> APIResponse<Self.ResponseType>",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:)-5wi6c",
                "title" : "func send(to: APIClient, parsing: APIParsingContext?) async throws -> APIResponse<Self.ResponseType>",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:completion:)-831n8",
                        "title" : "func send(to: APIClient, parsing: APIParsingContext?, completion: (Result<APIResponse<Self.ResponseType>, APIClientError>) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:completion:)-66wgf",
                "title" : "func send(to: APIClient, parsing: APIParsingContext?, completion: (Result<APIResponse<Self.ResponseType>, APIClientError>) -> Void)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apirequest",
            "title" : "APIRequest",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestbody\/bodyparameters",
                "title" : "var bodyParameters: [String : Any]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apirequestbody",
            "title" : "APIRequestBody",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestargument\/stringvalue",
                "title" : "var stringValue: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apirequestargument",
            "title" : "APIRequestArgument",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/delete",
                "title" : "case delete",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/get",
                "title" : "case get",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/head",
                "title" : "case head",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/patch",
                "title" : "case patch",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/post",
                "title" : "case post",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/put",
                "title" : "case put",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apirequestmethod",
            "title" : "APIRequestMethod",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/date",
                "title" : "let date: Date",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/links",
                "title" : "let links: [APIResponse<T>.Link : URL]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/rateinfo",
                "title" : "let rateInfo: APIRateLimit?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/requestid",
                "title" : "let requestId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/result",
                "title" : "let result: T",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/statuscode",
                "title" : "let statusCode: Int",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/ratelimit",
                "title" : "APIResponse.RateLimit",
                "type" : "typealias"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/current",
                    "title" : "case current",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/next",
                    "title" : "case next",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/previous",
                    "title" : "case previous",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiresponse\/link",
                "title" : "APIResponse.Link",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiresponse",
            "title" : "APIResponse",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponseresult\/error",
                "title" : "case error",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponseresult\/retry",
                "title" : "case retry",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponseresult\/success",
                "title" : "case success",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponseresult\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiresponseresult\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiresponseresult",
            "title" : "APIResponseResult",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiratelimit\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiratelimit\/delay",
                "title" : "let delay: TimeInterval?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiratelimit\/limit",
                "title" : "let limit: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiratelimit\/remaining",
                "title" : "let remaining: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiratelimit\/reset",
                "title" : "let reset: TimeInterval",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiratelimit",
            "title" : "APIRateLimit",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiretry\/donotretry",
                "title" : "case doNotRetry",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiretry\/retry(maximumcount:)",
                "title" : "case retry(maximumCount: Int)",
                "type" : "case"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiretry\/default",
                "title" : "static let `default`: APIRetry",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiretry",
            "title" : "APIRetry",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiauthorization\/authorizationheader",
                "title" : "var authorizationHeader: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiauthorization",
            "title" : "APIAuthorization",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiparsingcontext\/codinguserinfo",
                "title" : "var codingUserInfo: [CodingUserInfoKey : Any]?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiparsingcontext\/error(from:)-422es",
                        "title" : "func error(from: Data) -> Error?",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIParsingContext Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiparsingcontext\/error(from:)-5p5cl",
                "title" : "func error(from: Data) -> Error?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiparsingcontext\/resulttype(from:)-8sqh9",
                        "title" : "func resultType(from: HTTPURLResponse) -> APIResponseResult",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIParsingContext Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiparsingcontext\/resulttype(from:)-4ldi5",
                "title" : "func resultType(from: HTTPURLResponse) -> APIResponseResult",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiparsingcontext",
            "title" : "APIParsingContext",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2apirequest\/openidconfiguration",
                "title" : "var openIdConfiguration: OpenIdConfiguration",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2apirequest",
            "title" : "OAuth2APIRequest",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsondecodable\/jsondecoder",
                "title" : "static var jsonDecoder: JSONDecoder",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jsondecodable",
            "title" : "JSONDecodable",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/empty\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/authfoundation\/empty",
            "title" : "Empty",
            "type" : "struct"
          },
          {
            "title" : "Error Types",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/cannotparseresponse(error:)",
                "title" : "case cannotParseResponse(error: Error)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/invalidrequestdata",
                "title" : "case invalidRequestData",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/invalidresponse",
                "title" : "case invalidResponse",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/invalidurl",
                "title" : "case invalidUrl",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/missingrefreshsettings",
                "title" : "case missingRefreshSettings",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/missingresponse",
                "title" : "case missingResponse",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/servererror(_:)",
                "title" : "case serverError(Error)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/statuscode(_:)",
                "title" : "case statusCode(Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/unknown",
                "title" : "case unknown",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/unsupportedcontenttype(_:)",
                "title" : "case unsupportedContentType(APIContentType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/validation(error:)",
                "title" : "case validation(error: Error)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/==(_:_:)",
                    "title" : "static func == (APIClientError, APIClientError) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclienterror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclienterror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/errordescription-7e35h",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/errordescription-7unw",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclienterror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiclienterror",
            "title" : "APIClientError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/cannotcomposeurl",
                "title" : "case cannotComposeUrl",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/cannotrevoke(type:)",
                "title" : "case cannotRevoke(type: Token.RevokeType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/error(_:)",
                "title" : "case error(Error)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/invalidurl",
                "title" : "case invalidUrl",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/missingclientconfiguration",
                "title" : "case missingClientConfiguration",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/missinglocationheader",
                "title" : "case missingLocationHeader",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/missingoauth2responsekey(_:)",
                "title" : "case missingOAuth2ResponseKey(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/missingopenidconfiguration(attribute:)",
                "title" : "case missingOpenIdConfiguration(attribute: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/missingtoken(type:)",
                "title" : "case missingToken(type: Token.Kind)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/multiple(errors:)",
                "title" : "case multiple(errors: [OAuth2Error])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/network(error:)",
                "title" : "case network(error: APIClientError)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/oauth2error(code:description:additionalkeys:)",
                "title" : "case oauth2Error(code: String, description: String?, additionalKeys: [String : String]?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/signatureinvalid",
                "title" : "case signatureInvalid",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/==(_:_:)",
                    "title" : "static func == (OAuth2Error, OAuth2Error) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2error\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2error\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/errordescription-46l3j",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/errordescription-4kk0u",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2error\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2error",
            "title" : "OAuth2Error",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/==(_:_:)",
                "title" : "static func == (OAuth2ServerError, OAuth2ServerError) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/init(code:description:additionalvalues:)",
                "title" : "init(code: String, description: String?, additionalValues: [String : Any])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/additionalvalues",
                "title" : "var additionalValues: [String : Any]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.property",
                "title" : "let code: OAuth2ServerError.Code",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/description",
                "title" : "let description: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/errordescription-2n95u",
                "title" : "var errorDescription: String?",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/accessdenied",
                    "title" : "case accessDenied",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/authorizationpending",
                    "title" : "case authorizationPending",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/directauthauthorizationpending",
                    "title" : "case directAuthAuthorizationPending",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/expiredtoken",
                    "title" : "case expiredToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidchallengetypessupported",
                    "title" : "case invalidChallengeTypesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidclient",
                    "title" : "case invalidClient",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidgrant",
                    "title" : "case invalidGrant",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidotp",
                    "title" : "case invalidOTP",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidrequest",
                    "title" : "case invalidRequest",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidscope",
                    "title" : "case invalidScope",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidtoken",
                    "title" : "case invalidToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/mfarequired",
                    "title" : "case mfaRequired",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/oobrejected",
                    "title" : "case oobRejected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/other(code:)",
                    "title" : "case other(code: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/servererror",
                    "title" : "case serverError",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/slowdown",
                    "title" : "case slowDown",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/temporarilyunavailable",
                    "title" : "case temporarilyUnavailable",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/unauthorizedclient",
                    "title" : "case unauthorizedClient",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/unsupportedresponsemode",
                    "title" : "case unsupportedResponseMode",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/unsupportedresponsetype",
                    "title" : "case unsupportedResponseType",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/rawvalue-swift.property",
                        "title" : "var rawValue: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/rawvalue-swift.typealias",
                        "title" : "OAuth2ServerError.Code.RawValue",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum",
                "title" : "OAuth2ServerError.Code",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/errordescription-3vcs",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2servererror",
            "title" : "OAuth2ServerError",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/causes",
                "title" : "let causes: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/code",
                "title" : "let code: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/errordescription-336gx",
                "title" : "var errorDescription: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/id",
                "title" : "let id: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/link",
                "title" : "let link: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/summary",
                "title" : "let summary: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oktaapierror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oktaapierror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/errordescription-31v0k",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oktaapierror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oktaapierror",
            "title" : "OktaAPIError",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialerror\/incorrectclientconfiguration",
                "title" : "case incorrectClientConfiguration",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialerror\/metadataconsistency",
                "title" : "case metadataConsistency",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialerror\/missingcoordinator",
                "title" : "case missingCoordinator",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialerror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/errordescription-8zc9g",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/errordescription-s9qz",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialerror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/credentialerror",
            "title" : "CredentialError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenerror\/cannotreplacetoken",
                "title" : "case cannotReplaceToken",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenerror\/contextmissing",
                "title" : "case contextMissing",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenerror\/duplicatetokenadded",
                "title" : "case duplicateTokenAdded",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenerror\/invalidconfiguration",
                "title" : "case invalidConfiguration",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenerror\/tokennotfound(id:)",
                "title" : "case tokenNotFound(id: String)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokenerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/errordescription-53vi5",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/errordescription-6tyc7",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokenerror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/tokenerror",
            "title" : "TokenError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/badtokenstructure",
                "title" : "case badTokenStructure",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/cannotcreatekey(code:description:)",
                "title" : "case cannotCreateKey(code: OSStatus, description: String?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/cannotgeneratehash",
                "title" : "case cannotGenerateHash",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/exceedsmaxage",
                "title" : "case exceedsMaxAge",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/expired",
                "title" : "case expired",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidaudience",
                "title" : "case invalidAudience",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidauthenticationtime",
                "title" : "case invalidAuthenticationTime",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidbase64encoding",
                "title" : "case invalidBase64Encoding",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidissuer",
                "title" : "case invalidIssuer",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidkey",
                "title" : "case invalidKey",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidsigningalgorithm",
                "title" : "case invalidSigningAlgorithm",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidsubject",
                "title" : "case invalidSubject",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/issuedattimeexceedsgraceinterval",
                "title" : "case issuedAtTimeExceedsGraceInterval",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/issuerrequireshttps",
                "title" : "case issuerRequiresHTTPS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/noncemismatch",
                "title" : "case nonceMismatch",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/signatureinvalid",
                "title" : "case signatureInvalid",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/signatureverificationunavailable",
                "title" : "case signatureVerificationUnavailable",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/unsupportedalgorithm(_:)",
                "title" : "case unsupportedAlgorithm(JWK.Algorithm)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwterror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwterror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/errordescription-1x2sk",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/errordescription-qyfk",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwterror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwterror",
            "title" : "JWTError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/accesscontrolinvalid(code:description:)",
                "title" : "case accessControlInvalid(code: OSStatus, description: String?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/cannotdelete(code:)",
                "title" : "case cannotDelete(code: OSStatus)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/cannotget(code:)",
                "title" : "case cannotGet(code: OSStatus)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/cannotlist(code:)",
                "title" : "case cannotList(code: OSStatus)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/cannotsave(code:)",
                "title" : "case cannotSave(code: OSStatus)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/cannotupdate(code:)",
                "title" : "case cannotUpdate(code: OSStatus)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/invalidaccessibilityoption",
                "title" : "case invalidAccessibilityOption",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/invalidformat",
                "title" : "case invalidFormat",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/missingaccount",
                "title" : "case missingAccount",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/missingattribute",
                "title" : "case missingAttribute",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/missingvaluedata",
                "title" : "case missingValueData",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/notfound",
                "title" : "case notFound",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychainerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/errordescription-1617j",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/errordescription-8iygp",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychainerror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/keychainerror",
            "title" : "KeychainError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationerror\/flownotready",
                "title" : "case flowNotReady",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationerror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationerror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/authenticationerror",
            "title" : "AuthenticationError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalueerror\/cannotdecode(value:)",
                "title" : "case cannotDecode(value: Any)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonvalueerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonvalueerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jsonvalueerror",
            "title" : "JSONValueError",
            "type" : "enum"
          },
          {
            "title" : "Migration and versioning",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/needsmigration",
                        "title" : "var needsMigration: Bool",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/migrate()",
                        "title" : "func migrate() throws",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/register()",
                        "title" : "static func register() throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/register(clientid:)",
                        "title" : "static func register(clientId: String?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/register(issuer:clientid:redirecturi:scopes:)",
                        "title" : "static func register(issuer: URL, clientId: String, redirectUri: URL, scopes: String)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/register(plist:)",
                        "title" : "static func register(plist: URL) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc",
                    "title" : "SDKVersion.Migration.LegacyOIDC",
                    "type" : "class"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/sdkversion\/migration",
                "title" : "SDKVersion.Migration",
                "type" : "class"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/init(sdk:version:)",
                "title" : "init(sdk: String, version: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/displayname",
                "title" : "var displayName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/version",
                "title" : "let version: String",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/ismigrationneeded",
                "title" : "static var isMigrationNeeded: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/useragent",
                "title" : "static var userAgent: String",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/migrateifneeded()",
                "title" : "static func migrateIfNeeded() throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/register(migrator:)",
                "title" : "static func register(migrator: SDKVersionMigrator)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/register(sdk:)",
                "title" : "static func register(sdk: SDKVersion)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/sdkversion",
            "title" : "SDKVersion",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversionmigrator\/needsmigration",
                "title" : "var needsMigration: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversionmigrator\/migrate()",
                "title" : "func migrate() throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/sdkversionmigrator",
            "title" : "SDKVersionMigrator",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/authfoundation\/version",
            "title" : "let Version: SDKVersion",
            "type" : "var"
          },
          {
            "title" : "Internals and mocking",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/delegatecollection\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/delegatecollection\/add(_:)",
                "title" : "func add(D)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/delegatecollection\/call(_:)",
                "title" : "func call<T>((D) -> T) -> [T]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/delegatecollection\/invoke(_:)",
                "title" : "func invoke((D) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/delegatecollection\/remove(_:)",
                "title" : "func remove(D)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/delegatecollection",
            "title" : "DelegateCollection",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/delegate",
                "title" : "Delegate",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/delegatecollection",
                "title" : "var delegateCollection: DelegateCollection<Self.Delegate>",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/add(delegate:)-85i7",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      }
                    ],
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/add(delegate:)-2wa9w",
                "title" : "func add(delegate: Self.Delegate)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/remove(delegate:)-34r73",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      }
                    ],
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/remove(delegate:)-djzj",
                "title" : "func remove(delegate: Self.Delegate)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/usesdelegatecollection",
            "title" : "UsesDelegateCollection",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/urlsessionprotocol\/configuration",
                "title" : "var configuration: URLSessionConfiguration",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/urlsessionprotocol\/datataskwithrequest(_:completionhandler:)",
                "title" : "func dataTaskWithRequest(URLRequest, completionHandler: (Data?, URLResponse?, Error?) -> Void) -> URLSessionDataTaskProtocol",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/urlsessionprotocol\/datataskresult",
                "title" : "URLSessionProtocol.DataTaskResult",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/authfoundation\/urlsessionprotocol",
            "title" : "URLSessionProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/urlsessiondatataskprotocol\/resume()",
                "title" : "func resume()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/urlsessiondatataskprotocol",
            "title" : "URLSessionDataTaskProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/weak\/init(_:)",
                "title" : "init?(Object?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/weak\/wrappedvalue",
                "title" : "var wrappedValue: Object?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/weak\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/weak\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/weak\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/weak\/hashable-implementations",
                "title" : "Hashable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/weak",
            "title" : "Weak",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/weakcollection\/init(wrappedvalue:)",
                "title" : "init(wrappedValue: Collect)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/weakcollection\/wrappedvalue",
                "title" : "var wrappedValue: Collect",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/weakcollection\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/weakcollection\/==(_:_:)",
                    "title" : "static func == (WeakCollection<Collect, Element>, WeakCollection<Collect, Element>) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/weakcollection\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/weakcollection\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/weakcollection\/hashable-implementations",
                "title" : "Hashable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/weakcollection",
            "title" : "WeakCollection",
            "type" : "struct"
          },
          {
            "title" : "Articles",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/authfoundation\/workingwithclaims",
            "title" : "Working with Claims",
            "type" : "article"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/authfoundation\/claim",
            "title" : "Claim",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/==(_:_:)",
                "title" : "static func == (JSONValue, JSONValue) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/array(_:)",
                "title" : "case array([JSONValue])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/bool(_:)",
                "title" : "case bool(Bool)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/dictionary(_:)",
                "title" : "case dictionary([String : JSONValue])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/null",
                "title" : "case null",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/number(_:)",
                "title" : "case number(Double)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/object(_:)",
                "title" : "case object(Any)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/string(_:)",
                "title" : "case string(String)",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/init(_:)",
                "title" : "init(Any?) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/anyvalue",
                "title" : "var anyValue: Any?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonvalue\/debugdescription",
                    "title" : "var debugDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonvalue\/customdebugstringconvertible-implementations",
                "title" : "CustomDebugStringConvertible Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonvalue\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonvalue\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonvalue\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonvalue\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonvalue\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonvalue\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jsonvalue",
            "title" : "JSONValue",
            "type" : "enum"
          }
        ],
        "path" : "\/documentation\/authfoundation",
        "title" : "AuthFoundation",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 0
  }
}