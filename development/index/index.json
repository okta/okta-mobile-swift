{
  "includedArchiveIdentifiers" : [
    "CommonSupport",
    "AuthFoundation",
    "OktaDirectAuth",
    "OktaIdxAuth",
    "OAuth2Auth",
    "BrowserSignin"
  ],
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "children" : [
              {
                "title" : "Extended Modules",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Extended Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/commonsupport\/_concurrency\/mainactor\/nonisolatedunsafe(_:)",
                        "title" : "static func nonisolatedUnsafe<T>(() -> T) -> T",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/commonsupport\/_concurrency\/mainactor",
                    "title" : "MainActor",
                    "type" : "extension"
                  }
                ],
                "path" : "\/documentation\/commonsupport\/_concurrency",
                "title" : "_Concurrency",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/commonsupport",
            "title" : "CommonSupport",
            "type" : "module"
          },
          {
            "children" : [
              {
                "title" : "Essentials",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Storage, Retrieval, and Removal",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/default",
                    "title" : "static var `default`: Credential?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/allids",
                    "title" : "static var allIDs: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/store(_:tags:security:)",
                    "title" : "static func store(Token, tags: [String : String], security: [Credential.Security]) throws -> Credential",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/with(id:prompt:authenticationcontext:)",
                    "title" : "static func with(id: String, prompt: String?, authenticationContext: (any TokenAuthenticationContext)?) throws -> Credential?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/find(where:prompt:authenticationcontext:)",
                    "title" : "static func find(where: (Token.Metadata) -> Bool, prompt: String?, authenticationContext: (any TokenAuthenticationContext)?) throws -> [Credential]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/tags",
                    "title" : "var tags: [String : String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/settags(_:)",
                    "title" : "func setTags([String : String]) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/remove()",
                    "title" : "func remove() throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/id",
                    "title" : "var id: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Refreshing and Revoking Tokens",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/refresh(completion:)",
                    "title" : "func refresh(completion: (Result<Void, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/refresh()",
                    "title" : "func refresh() async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/refreshifneeded(graceinterval:)",
                    "title" : "func refreshIfNeeded(graceInterval: TimeInterval) async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/refreshifneeded(graceinterval:completion:)",
                    "title" : "func refreshIfNeeded(graceInterval: TimeInterval, completion: (Result<Void, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/refreshgraceinterval",
                    "title" : "static var refreshGraceInterval: TimeInterval",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/automaticrefresh",
                    "title" : "var automaticRefresh: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/revoke(type:)",
                    "title" : "func revoke(type: Token.RevokeType) async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/revoke(type:completion:)",
                    "title" : "func revoke(type: Token.RevokeType, completion: (Result<Void, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Using Tokens",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/token",
                    "title" : "var token: Token",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/oauth2",
                    "title" : "let oauth2: OAuth2Client",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/authorize(_:)",
                    "title" : "func authorize(inout URLRequest) async",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/authorize(request:)",
                    "title" : "func authorize(request: inout URLRequest)",
                    "type" : "method"
                  },
                  {
                    "title" : "Getting Information About Tokens",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/userinfo",
                    "title" : "var userInfo: UserInfo?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/userinfo()",
                    "title" : "func userInfo() async throws -> UserInfo",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/userinfo(completion:)",
                    "title" : "func userInfo(completion: (Result<UserInfo, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/introspect(_:completion:)",
                    "title" : "func introspect(Token.Kind, completion: (Result<TokenInfo, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Customization",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/credentialdatasource",
                    "title" : "static var credentialDataSource: any CredentialDataSource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/tokenstorage",
                    "title" : "static var tokenStorage: any TokenStorage",
                    "type" : "property"
                  },
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/==(_:_:)",
                    "title" : "static func == (Credential, Credential) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/init(token:)",
                    "title" : "convenience init(token: Token)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/init(token:oauth2:)",
                    "title" : "convenience init(token: Token, oauth2: OAuth2Client) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/introspect(_:)",
                    "title" : "func introspect(Token.Kind) async throws -> TokenInfo",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/oauth(client:didrefresh:replacedwith:)",
                    "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/security\/accesscontrol(_:)",
                        "title" : "case accessControl(SecAccessControlCreateFlags)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/security\/accesscontrolref(_:)",
                        "title" : "case accessControlRef(SecAccessControl)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/security\/accessgroup(_:)",
                        "title" : "case accessGroup(String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/security\/accessibility(_:)",
                        "title" : "case accessibility(Keychain.Accessibility)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/security\/context(_:)",
                        "title" : "case context(LAContext)",
                        "type" : "case"
                      },
                      {
                        "title" : "Type Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/security\/isdefaultsynchronizable",
                        "title" : "static var isDefaultSynchronizable: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/security\/standard",
                        "title" : "static var standard: [Credential.Security]",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/credential\/security",
                    "title" : "Credential.Security",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/api(client:didsend:received:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/api(client:didsend:received:requestid:ratelimit:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/api(client:shouldretry:)",
                        "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/api(client:willsend:)",
                        "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/credential\/apiclientdelegate-implementations",
                    "title" : "APIClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/credential\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credential\/oauth(client:willrefresh:)",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/credential\/oauth2clientdelegate-implementations",
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credential",
                "title" : "Credential",
                "type" : "class"
              },
              {
                "path" : "\/documentation\/authfoundation\/managingusercredentials",
                "title" : "Managing User Credentials",
                "type" : "article"
              },
              {
                "title" : "Token Information",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/configuration",
                        "title" : "let configuration: OAuth2Client.Configuration",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/context-swift.struct",
                    "title" : "Token.Context",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/id",
                        "title" : "let id: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/payload",
                        "title" : "let payload: [String : any Sendable]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/tags",
                        "title" : "let tags: [String : String]",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/claimtype",
                        "title" : "Token.Metadata.ClaimType",
                        "type" : "typealias"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/address",
                            "title" : "var address: [String : String]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/allclaims",
                            "title" : "var allClaims: [String]",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/authtime",
                            "title" : "var authTime: Date?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/authenticationclassreference",
                            "title" : "var authenticationClassReference: [String]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/authenticationmethods",
                            "title" : "var authenticationMethods: [AuthenticationMethod]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/birthdate",
                            "title" : "var birthdate: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/claims",
                            "title" : "var claims: [Self.ClaimType]",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/customclaims",
                            "title" : "var customClaims: [String]",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/email",
                            "title" : "var email: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/emailverified",
                            "title" : "var emailVerified: Bool?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/familyname",
                            "title" : "var familyName: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/gender",
                            "title" : "var gender: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/givenname",
                            "title" : "var givenName: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/locale",
                            "title" : "var locale: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/middlename",
                            "title" : "var middleName: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/name",
                            "title" : "var name: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/namecomponents",
                            "title" : "var nameComponents: PersonNameComponents",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/nickname",
                            "title" : "var nickname: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/phonenumber",
                            "title" : "var phoneNumber: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/phonenumberverified",
                            "title" : "var phoneNumberVerified: Bool?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/picture",
                            "title" : "var picture: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/preferredusername",
                            "title" : "var preferredUsername: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/profile",
                            "title" : "var profile: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/subject",
                            "title" : "var subject: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/timezone",
                            "title" : "var timeZone: TimeZone?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/updatedat",
                            "title" : "var updatedAt: Date?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/userlocale",
                            "title" : "var userLocale: Locale?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/website",
                            "title" : "var website: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/zoneinfo",
                            "title" : "var zoneinfo: String?",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)",
                            "title" : "func value(for:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-10pt8",
                            "title" : "func value<T>(for: String) -> [String : T]?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-1s0p2",
                            "title" : "func value<T>(for: String) throws -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-48bpv",
                            "title" : "func value<T>(for: String) -> [T]?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-4vubw",
                            "title" : "func value<T>(for: Self.ClaimType) throws -> T",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-642s3",
                            "title" : "func value<T>(for: Self.ClaimType) -> [T]?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-77i8k",
                            "title" : "func value<T>(for: String) -> T?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-88hdc",
                            "title" : "func value<T>(for: Self.ClaimType) -> [String : T]?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-8jjlx",
                            "title" : "func value<T>(for: Self.ClaimType) throws -> [String : T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-95oea",
                            "title" : "func value<T>(for: String) throws -> [String : T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-98hmv",
                            "title" : "func value<T>(for: String) throws -> T",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-9frwn",
                            "title" : "func value<T>(for: Self.ClaimType) -> T?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/value(for:)-9g7x7",
                            "title" : "func value<T>(for: Self.ClaimType) throws -> [T]",
                            "type" : "method"
                          },
                          {
                            "title" : "Subscripts",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)",
                            "title" : "subscript(_:)",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-2ptd1",
                            "title" : "subscript<T>(Self.ClaimType) -> [String : T]?",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-4abyn",
                            "title" : "subscript<T>(Self.ClaimType) -> T?",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-4shhe",
                            "title" : "subscript<T>(String) -> T?",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-54wvv",
                            "title" : "subscript<T>(Self.ClaimType) -> [T]?",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-7495b",
                            "title" : "subscript<T>(String) -> [T]?",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-brmr",
                            "title" : "subscript<T>(String) -> [String : T]?",
                            "type" : "subscript"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/hasclaims-implementations",
                        "title" : "HasClaims Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/metadata",
                    "title" : "Token.Metadata",
                    "type" : "struct"
                  },
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/==(_:_:)",
                    "title" : "static func == (Token, Token) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/accesstoken",
                    "title" : "let accessToken: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/context-swift.property",
                    "title" : "let context: Token.Context",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/devicesecret",
                    "title" : "var deviceSecret: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/expiresin",
                    "title" : "let expiresIn: TimeInterval",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/id",
                    "title" : "let id: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/idtoken",
                    "title" : "let idToken: JWT?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/isrefreshing",
                    "title" : "var isRefreshing: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/issuedat",
                    "title" : "let issuedAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/issuedtokentype",
                    "title" : "var issuedTokenType: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/payload",
                    "title" : "var payload: [String : any Sendable]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/refreshtoken",
                    "title" : "var refreshToken: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/scope",
                    "title" : "var scope: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/tokentype",
                    "title" : "let tokenType: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/token(of:)",
                    "title" : "func token(of: Token.Kind) -> String?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/validate(using:with:)",
                    "title" : "func validate(using: OAuth2Client, with: any IDTokenValidatorContext) async throws",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/claimtype",
                    "title" : "Token.ClaimType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/accesstokenvalidator",
                    "title" : "static var accessTokenValidator: any TokenHashValidator",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/devicesecretvalidator",
                    "title" : "static var deviceSecretValidator: any TokenHashValidator",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/idtokenvalidator",
                    "title" : "static var idTokenValidator: any IDTokenValidator",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/from(refreshtoken:scope:using:)",
                    "title" : "static func from(refreshToken: String, scope: [String]?, using: OAuth2Client) async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/from(refreshtoken:scope:using:completion:)",
                    "title" : "static func from(refreshToken: String, scope: [String]?, using: OAuth2Client, completion: (Result<Token, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/accesstoken",
                        "title" : "case accessToken",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/devicesecret",
                        "title" : "case deviceSecret",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/idtoken",
                        "title" : "case idToken",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/refreshtoken",
                        "title" : "case refreshToken",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/kind\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/token\/kind\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/kind\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/kind\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/token\/kind\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/kind",
                    "title" : "Token.Kind",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/revoketype\/accesstoken",
                        "title" : "case accessToken",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/revoketype\/all",
                        "title" : "case all",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/revoketype\/devicesecret",
                        "title" : "case deviceSecret",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/revoketype\/refreshtoken",
                        "title" : "case refreshToken",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/revoketype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/token\/revoketype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/revoketype",
                    "title" : "Token.RevokeType",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/accesstoken",
                        "title" : "case accessToken",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/devicesecret",
                        "title" : "case deviceSecret",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/expiresin",
                        "title" : "case expiresIn",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/idtoken",
                        "title" : "case idToken",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/issuedtokentype",
                        "title" : "case issuedTokenType",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/refreshtoken",
                        "title" : "case refreshToken",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/scope",
                        "title" : "case scope",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/tokentype",
                        "title" : "case tokenType",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/token\/tokenclaim\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/tokenclaim",
                    "title" : "Token.TokenClaim",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/authorizationheader",
                        "title" : "var authorizationHeader: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/apiauthorization-implementations",
                    "title" : "APIAuthorization Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/expiresat",
                        "title" : "var expiresAt: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/isexpired",
                        "title" : "var isExpired: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/isvalid",
                        "title" : "var isValid: Bool",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/expires-implementations",
                    "title" : "Expires Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/allclaims",
                        "title" : "var allClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/claims",
                        "title" : "var claims: [Self.ClaimType]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/customclaims",
                        "title" : "var customClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)",
                        "title" : "func value(for:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-1i3w5",
                        "title" : "func value<T>(for: String) throws -> [String : T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-277lo",
                        "title" : "func value<T>(for: Self.ClaimType) -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-27dhp",
                        "title" : "func value<T>(for: String) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-3iwuw",
                        "title" : "func value<T>(for: String) -> [String : T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-3k7qj",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-458hw",
                        "title" : "func value<T>(for: String) throws -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-6234v",
                        "title" : "func value<T>(for: String) throws -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-8b4mb",
                        "title" : "func value<T>(for: Self.ClaimType) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-8drn3",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> [String : T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-8fpmh",
                        "title" : "func value<T>(for: String) -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-8pqnn",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/value(for:)-f6vi",
                        "title" : "func value<T>(for: Self.ClaimType) -> [String : T]?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/subscript(_:)",
                        "title" : "subscript(_:)",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/subscript(_:)-2b5y9",
                        "title" : "subscript<T>(Self.ClaimType) -> [String : T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/subscript(_:)-4gbg7",
                        "title" : "subscript<T>(Self.ClaimType) -> [T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/subscript(_:)-4hib0",
                        "title" : "subscript<T>(String) -> [String : T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/subscript(_:)-5myrh",
                        "title" : "subscript<T>(Self.ClaimType) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/subscript(_:)-8c4sq",
                        "title" : "subscript<T>(String) -> [T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/subscript(_:)-97y8d",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/hasclaims-implementations",
                    "title" : "HasClaims Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token",
                "title" : "Token",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/init(_:)",
                    "title" : "init([String : any Sendable])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/payload",
                    "title" : "let payload: [String : any Sendable]",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/claimtype",
                    "title" : "UserInfo.ClaimType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/address",
                        "title" : "var address: [String : String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/allclaims",
                        "title" : "var allClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/authtime",
                        "title" : "var authTime: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/authenticationclassreference",
                        "title" : "var authenticationClassReference: [String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/authenticationmethods",
                        "title" : "var authenticationMethods: [AuthenticationMethod]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/birthdate",
                        "title" : "var birthdate: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/claims",
                        "title" : "var claims: [Self.ClaimType]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/customclaims",
                        "title" : "var customClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/email",
                        "title" : "var email: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/emailverified",
                        "title" : "var emailVerified: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/familyname",
                        "title" : "var familyName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/gender",
                        "title" : "var gender: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/givenname",
                        "title" : "var givenName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/locale",
                        "title" : "var locale: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/middlename",
                        "title" : "var middleName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/name",
                        "title" : "var name: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/namecomponents",
                        "title" : "var nameComponents: PersonNameComponents",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/nickname",
                        "title" : "var nickname: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/phonenumber",
                        "title" : "var phoneNumber: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/phonenumberverified",
                        "title" : "var phoneNumberVerified: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/picture",
                        "title" : "var picture: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/preferredusername",
                        "title" : "var preferredUsername: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/profile",
                        "title" : "var profile: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/subject",
                        "title" : "var subject: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/timezone",
                        "title" : "var timeZone: TimeZone?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/updatedat",
                        "title" : "var updatedAt: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/userlocale",
                        "title" : "var userLocale: Locale?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/website",
                        "title" : "var website: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/zoneinfo",
                        "title" : "var zoneinfo: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)",
                        "title" : "func value(for:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-15tje",
                        "title" : "func value<T>(for: Self.ClaimType) -> [String : T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-17vqz",
                        "title" : "func value<T>(for: String) -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-1fbtb",
                        "title" : "func value<T>(for: String) -> [String : T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-1o2fn",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-2wch3",
                        "title" : "func value<T>(for: Self.ClaimType) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-3g9d8",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-45n4p",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> [String : T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-53x4v",
                        "title" : "func value<T>(for: String) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-5m8bp",
                        "title" : "func value<T>(for: String) throws -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-5w32z",
                        "title" : "func value<T>(for: String) throws -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-6scqu",
                        "title" : "func value<T>(for: Self.ClaimType) -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/value(for:)-756rw",
                        "title" : "func value<T>(for: String) throws -> [String : T]",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)",
                        "title" : "subscript(_:)",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-1nwao",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-3kg30",
                        "title" : "subscript<T>(String) -> [T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-5kktc",
                        "title" : "subscript<T>(Self.ClaimType) -> [String : T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-6mjxv",
                        "title" : "subscript<T>(String) -> [String : T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-867k1",
                        "title" : "subscript<T>(Self.ClaimType) -> [T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-jlfx",
                        "title" : "subscript<T>(Self.ClaimType) -> T?",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/userinfo\/hasclaims-implementations",
                    "title" : "HasClaims Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/userinfo",
                "title" : "UserInfo",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/active",
                    "title" : "var active: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/payload",
                    "title" : "let payload: [String : any Sendable]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/username",
                    "title" : "var username: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/claimtype",
                    "title" : "TokenInfo.ClaimType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/address",
                        "title" : "var address: [String : String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/allclaims",
                        "title" : "var allClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/authtime",
                        "title" : "var authTime: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/authenticationclassreference",
                        "title" : "var authenticationClassReference: [String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/authenticationmethods",
                        "title" : "var authenticationMethods: [AuthenticationMethod]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/birthdate",
                        "title" : "var birthdate: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/claims",
                        "title" : "var claims: [Self.ClaimType]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/customclaims",
                        "title" : "var customClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/email",
                        "title" : "var email: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/emailverified",
                        "title" : "var emailVerified: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/familyname",
                        "title" : "var familyName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/gender",
                        "title" : "var gender: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/givenname",
                        "title" : "var givenName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/locale",
                        "title" : "var locale: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/middlename",
                        "title" : "var middleName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/name",
                        "title" : "var name: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/namecomponents",
                        "title" : "var nameComponents: PersonNameComponents",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/nickname",
                        "title" : "var nickname: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/phonenumber",
                        "title" : "var phoneNumber: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/phonenumberverified",
                        "title" : "var phoneNumberVerified: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/picture",
                        "title" : "var picture: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/preferredusername",
                        "title" : "var preferredUsername: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/profile",
                        "title" : "var profile: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/subject",
                        "title" : "var subject: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/timezone",
                        "title" : "var timeZone: TimeZone?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/updatedat",
                        "title" : "var updatedAt: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/userlocale",
                        "title" : "var userLocale: Locale?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/website",
                        "title" : "var website: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/zoneinfo",
                        "title" : "var zoneinfo: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)",
                        "title" : "func value(for:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-135ll",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-1xc6c",
                        "title" : "func value<T>(for: Self.ClaimType) -> [String : T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-2npvk",
                        "title" : "func value<T>(for: String) throws -> [String : T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-332k3",
                        "title" : "func value<T>(for: String) -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-3hwhp",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> [String : T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-46c8b",
                        "title" : "func value<T>(for: String) throws -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-4k9dx",
                        "title" : "func value<T>(for: String) throws -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-53urv",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-6glja",
                        "title" : "func value<T>(for: Self.ClaimType) -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-8boeb",
                        "title" : "func value<T>(for: Self.ClaimType) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-8vkg4",
                        "title" : "func value<T>(for: String) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/value(for:)-96v37",
                        "title" : "func value<T>(for: String) -> [String : T]?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)",
                        "title" : "subscript(_:)",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-22d5h",
                        "title" : "subscript<T>(String) -> [T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-3eurh",
                        "title" : "subscript<T>(String) -> [String : T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-5np5c",
                        "title" : "subscript<T>(Self.ClaimType) -> [T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-5nrsy",
                        "title" : "subscript<T>(Self.ClaimType) -> [String : T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-7jc86",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-9fyil",
                        "title" : "subscript<T>(Self.ClaimType) -> T?",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/hasclaims-implementations",
                    "title" : "HasClaims Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokeninfo",
                "title" : "TokenInfo",
                "type" : "struct"
              },
              {
                "title" : "OAuth2 Client Operations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct\/init(issuerurl:discoveryurl:clientid:scope:redirecturi:logoutredirecturi:authentication:)",
                        "title" : "init(issuerURL: URL, discoveryURL: URL?, clientId: String, scope: ClaimCollection<[String]>, redirectUri: URL?, logoutRedirectUri: URL?, authentication: OAuth2Client.ClientAuthentication)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct\/authentication",
                        "title" : "var authentication: OAuth2Client.ClientAuthentication",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct\/clientid",
                        "title" : "var clientId: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct\/discoveryurl",
                        "title" : "var discoveryURL: URL",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct\/issuerurl",
                        "title" : "var issuerURL: URL",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct\/logoutredirecturi",
                        "title" : "var logoutRedirectUri: URL?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct\/redirecturi",
                        "title" : "var redirectUri: URL?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct\/scope",
                        "title" : "var scope: [String]",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.struct",
                    "title" : "OAuth2Client.Configuration",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/init()",
                        "title" : "init() throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/init(_:)",
                        "title" : "init([String : Any]) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/init(commandline:)",
                        "title" : "init(commandLine: [String]) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/init(plist:)",
                        "title" : "init(plist: URL) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/additionalparameters",
                        "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/authentication",
                        "title" : "var authentication: OAuth2Client.ClientAuthentication",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/clientid",
                        "title" : "var clientId: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/issuerurl",
                        "title" : "var issuerURL: URL",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/logoutredirecturi",
                        "title" : "var logoutRedirectUri: URL?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/redirecturi",
                        "title" : "var redirectUri: URL?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/scope",
                        "title" : "var scope: [String]",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/commandline",
                        "title" : "static var commandLine: OAuth2Client.PropertyListConfiguration",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration",
                    "title" : "OAuth2Client.PropertyListConfiguration",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/init(_:session:)",
                    "title" : "init(OAuth2Client.Configuration, session: (any URLSessionProtocol)?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/init(issuerurl:clientid:scope:redirecturi:logoutredirecturi:authentication:session:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, redirectUri: URL?, logoutRedirectUri: URL?, authentication: OAuth2Client.ClientAuthentication, session: (any URLSessionProtocol)?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/additionalhttpheaders",
                    "title" : "var additionalHttpHeaders: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.property",
                    "title" : "let configuration: OAuth2Client.Configuration",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/delegatecollection",
                    "title" : "let delegateCollection: DelegateCollection<any OAuth2ClientDelegate>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/jwks",
                    "title" : "var jwks: JWKS?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/openidconfiguration",
                    "title" : "var openIdConfiguration: OpenIdConfiguration?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/session",
                    "title" : "let session: any URLSessionProtocol",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/exchange(token:)",
                    "title" : "func exchange<T>(token: T) async throws -> APIResponse<Token>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/introspect(token:type:)",
                    "title" : "func introspect(token: Token, type: Token.Kind) async throws -> TokenInfo",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/introspect(token:type:completion:)",
                    "title" : "func introspect(token: Token, type: Token.Kind, completion: (Result<TokenInfo, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/jwks()",
                    "title" : "func jwks() async throws -> JWKS",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/jwks(completion:)",
                    "title" : "func jwks(completion: (Result<JWKS, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/openidconfiguration()",
                    "title" : "func openIdConfiguration() async throws -> OpenIdConfiguration",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/openidconfiguration(completion:)",
                    "title" : "func openIdConfiguration(completion: (Result<OpenIdConfiguration, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/refresh(_:completion:)",
                    "title" : "func refresh(Token, completion: (Result<Token, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/refresh(_:scope:)",
                    "title" : "func refresh(Token, scope: [String]?) async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/revoke(_:type:)",
                    "title" : "func revoke(Token, type: Token.RevokeType) async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/revoke(_:type:completion:)",
                    "title" : "func revoke(Token, type: Token.RevokeType, completion: (Result<Void, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/userinfo(token:)",
                    "title" : "func userInfo(token: Token) async throws -> UserInfo",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/userinfo(token:completion:)",
                    "title" : "func userInfo(token: Token, completion: (Result<UserInfo, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/delegate",
                    "title" : "OAuth2Client.Delegate",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/defaultsession",
                    "title" : "static var defaultSession: (any URLSessionProtocol)?",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/clientsecret(_:)",
                        "title" : "case clientSecret(String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/none",
                        "title" : "case none",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication",
                    "title" : "OAuth2Client.ClientAuthentication",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/cannotparsepropertylist(_:)",
                        "title" : "case cannotParsePropertyList((any Error)?)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/defaultpropertylistnotfound",
                        "title" : "case defaultPropertyListNotFound",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/invalidconfiguration(name:value:)",
                        "title" : "case invalidConfiguration(name: String, value: String?)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/invalidpropertylist(url:)",
                        "title" : "case invalidPropertyList(url: URL)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/missingconfigurationvalues",
                        "title" : "case missingConfigurationValues",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/localizeddescription",
                            "title" : "var localizedDescription: String",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/error-implementations",
                        "title" : "Error Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/errordescription",
                            "title" : "var errorDescription: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/failurereason",
                            "title" : "var failureReason: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/helpanchor",
                            "title" : "var helpAnchor: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/recoverysuggestion",
                            "title" : "var recoverySuggestion: String?",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/localizederror-implementations",
                        "title" : "LocalizedError Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror",
                    "title" : "OAuth2Client.PropertyListConfigurationError",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/baseurl",
                        "title" : "var baseURL: URL",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/requestidheader",
                        "title" : "var requestIdHeader: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/useragent",
                        "title" : "var userAgent: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/error(from:)",
                        "title" : "func error(from: Data) -> (any Error)?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/send(_:parsing:)",
                        "title" : "func send<T>(URLRequest, parsing: (any APIParsingContext)?) async throws -> APIResponse<T>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/shouldretry(request:ratelimit:)",
                        "title" : "func shouldRetry(request: URLRequest, rateLimit: APIRateLimit) -> APIRetry",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/apiclient-implementations",
                    "title" : "APIClient Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/add(delegate:)",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/remove(delegate:)",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/usesdelegatecollection-implementations",
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client",
                "title" : "OAuth2Client",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:didrefresh:replacedwith:)-7rcjq",
                            "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                            "type" : "method"
                          }
                        ],
                        "title" : "OAuth2ClientDelegate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:didrefresh:replacedwith:)",
                    "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:willrefresh:)-335wj",
                            "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                            "type" : "method"
                          }
                        ],
                        "title" : "OAuth2ClientDelegate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:willrefresh:)",
                    "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2clientdelegate",
                "title" : "OAuth2ClientDelegate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/authorizationendpoint",
                    "title" : "let authorizationEndpoint: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/claimssupported",
                    "title" : "var claimsSupported: [JWTClaim]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/deviceauthorizationendpoint",
                    "title" : "var deviceAuthorizationEndpoint: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/endsessionendpoint",
                    "title" : "var endSessionEndpoint: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/granttypessupported",
                    "title" : "var grantTypesSupported: [GrantType]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/idtokensigningalgvaluessupported",
                    "title" : "let idTokenSigningAlgValuesSupported: [JWK.Algorithm]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/introspectionendpoint",
                    "title" : "var introspectionEndpoint: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/issuer",
                    "title" : "let issuer: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/jwksuri",
                    "title" : "let jwksUri: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/payload",
                    "title" : "var payload: [String : any Sendable]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/registrationendpoint",
                    "title" : "var registrationEndpoint: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/responsemodessupported",
                    "title" : "var responseModesSupported: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/responsetypessupported",
                    "title" : "let responseTypesSupported: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/revocationendpoint",
                    "title" : "var revocationEndpoint: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/scopessupported",
                    "title" : "var scopesSupported: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/subjecttypessupported",
                    "title" : "let subjectTypesSupported: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/tokenendpoint",
                    "title" : "let tokenEndpoint: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/userinfoendpoint",
                    "title" : "var userinfoEndpoint: URL?",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/claimtype",
                    "title" : "OpenIdConfiguration.ClaimType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/acrvaluessupported",
                        "title" : "case acrValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/authorizationendpoint",
                        "title" : "case authorizationEndpoint",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/backchannelauthenticationrequestsigningalgvaluessupported",
                        "title" : "case backchannelAuthenticationRequestSigningAlgValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/backchanneltokendeliverymodessupported",
                        "title" : "case backchannelTokenDeliveryModesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/claimtypessupported",
                        "title" : "case claimTypesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/claimslocalessupported",
                        "title" : "case claimsLocalesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/claimsparametersupported",
                        "title" : "case claimsParameterSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/claimssupported",
                        "title" : "case claimsSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/codechallengemethodssupported",
                        "title" : "case codeChallengeMethodsSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/deviceauthorizationendpoint",
                        "title" : "case deviceAuthorizationEndpoint",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/displayvaluessupported",
                        "title" : "case displayValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/dpopsigningalgvaluessupported",
                        "title" : "case dpopSigningAlgValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/endsessionendpoint",
                        "title" : "case endSessionEndpoint",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/granttypessupported",
                        "title" : "case grantTypesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/idtokenencryptionalgvaluessupported",
                        "title" : "case idTokenEncryptionAlgValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/idtokenencryptionencvaluessupported",
                        "title" : "case idTokenEncryptionEncValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/idtokensigningalgvaluessupported",
                        "title" : "case idTokenSigningAlgValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/introspectionendpoint",
                        "title" : "case introspectionEndpoint",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/introspectionendpointauthmethodssupported",
                        "title" : "case introspectionEndpointAuthMethodsSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/issuer",
                        "title" : "case issuer",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/jwksuri",
                        "title" : "case jwksUri",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/oppolicyuri",
                        "title" : "case opPolicyUri",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/optosuri",
                        "title" : "case opTosUri",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/registrationendpoint",
                        "title" : "case registrationEndpoint",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requestobjectencryptionalgvaluessupported",
                        "title" : "case requestObjectEncryptionAlgValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requestobjectencryptionencvaluessupported",
                        "title" : "case requestObjectEncryptionEncValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requestobjectsigningalgvaluessupported",
                        "title" : "case requestObjectSigningAlgValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requestparametersupported",
                        "title" : "case requestParameterSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requesturiparametersupported",
                        "title" : "case requestUriParameterSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/requirerequesturiregistration",
                        "title" : "case requireRequestUriRegistration",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/responsemodessupported",
                        "title" : "case responseModesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/responsetypessupported",
                        "title" : "case responseTypesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/revocationendpoint",
                        "title" : "case revocationEndpoint",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/revocationendpointauthmethodssupported",
                        "title" : "case revocationEndpointAuthMethodsSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/scopessupported",
                        "title" : "case scopesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/servicedocumentation",
                        "title" : "case serviceDocumentation",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/subjecttypessupported",
                        "title" : "case subjectTypesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/tokenendpoint",
                        "title" : "case tokenEndpoint",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/tokenendpointauthmethodssupported",
                        "title" : "case tokenEndpointAuthMethodsSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/tokenendpointauthsigningalgvaluessupported",
                        "title" : "case tokenEndpointAuthSigningAlgValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/uilocalessupported",
                        "title" : "case uiLocalesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/userinfoencryptionalgvaluessupported",
                        "title" : "case userinfoEncryptionAlgValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/userinfoencryptionencvaluessupported",
                        "title" : "case userinfoEncryptionEncValuesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/userinfoendpoint",
                        "title" : "case userinfoEndpoint",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/userinfosigningalgvaluessupported",
                        "title" : "case userinfoSigningAlgValuesSupported",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/init(intvalue:)",
                        "title" : "init?(intValue: Int)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/init(stringvalue:)",
                        "title" : "init?(stringValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/debugdescription",
                            "title" : "var debugDescription: String",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/description",
                            "title" : "var description: String",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/codingkey-implementations",
                        "title" : "CodingKey Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/providermetadata",
                    "title" : "OpenIdConfiguration.ProviderMetadata",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/allclaims",
                        "title" : "var allClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/claims",
                        "title" : "var claims: [Self.ClaimType]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/customclaims",
                        "title" : "var customClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)",
                        "title" : "func value(for:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-3pi5y",
                        "title" : "func value<T>(for: String) -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-3xrty",
                        "title" : "func value<T>(for: String) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-4ffat",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-5xzei",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> [String : T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-64kuj",
                        "title" : "func value<T>(for: String) throws -> [String : T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-72zsb",
                        "title" : "func value<T>(for: String) throws -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-87szy",
                        "title" : "func value<T>(for: String) throws -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-93mxv",
                        "title" : "func value<T>(for: String) -> [String : T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-95xc5",
                        "title" : "func value<T>(for: Self.ClaimType) -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-9a5iy",
                        "title" : "func value<T>(for: Self.ClaimType) -> [String : T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-btxz",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/value(for:)-nt5m",
                        "title" : "func value<T>(for: Self.ClaimType) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)",
                        "title" : "subscript(_:)",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)-11eru",
                        "title" : "subscript<T>(String) -> [T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)-1cird",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)-41yxk",
                        "title" : "subscript<T>(String) -> [String : T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)-4pmkm",
                        "title" : "subscript<T>(Self.ClaimType) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)-504ij",
                        "title" : "subscript<T>(Self.ClaimType) -> [String : T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/openidconfiguration\/subscript(_:)-ktt0",
                        "title" : "subscript<T>(Self.ClaimType) -> [T]?",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/openidconfiguration\/hasclaims-implementations",
                    "title" : "HasClaims Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/openidconfiguration",
                "title" : "OpenIdConfiguration",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/facialrecognition",
                    "title" : "case facialRecognition",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/fingerprintbiometric",
                    "title" : "case fingerprintBiometric",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/geolocation",
                    "title" : "case geolocation",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/irisscanbiometric",
                    "title" : "case irisScanBiometric",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/knowledgebased",
                    "title" : "case knowledgeBased",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/multiplechannel",
                    "title" : "case multipleChannel",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/multiplefactor",
                    "title" : "case multipleFactor",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/onetimepassword",
                    "title" : "case oneTimePassword",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/passwordbased",
                    "title" : "case passwordBased",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/pin",
                    "title" : "case pin",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/proofofpossession",
                    "title" : "case proofOfPossession",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/proofofpossessionhardware",
                    "title" : "case proofOfPossessionHardware",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/proofofpossessionsoftware",
                    "title" : "case proofOfPossessionSoftware",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/retinascanbiometric",
                    "title" : "case retinaScanBiometric",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/riskbased",
                    "title" : "case riskBased",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/smartcard",
                    "title" : "case smartCard",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/smsconfirmation",
                    "title" : "case smsConfirmation",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/telephoneconfirmation",
                    "title" : "case telephoneConfirmation",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/userpresence",
                    "title" : "case userPresence",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/voicebiometric",
                    "title" : "case voiceBiometric",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/windowsintegrated",
                    "title" : "case windowsIntegrated",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/authenticationmethod\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/authenticationmethod\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/authenticationmethod\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/authenticationmethod\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationmethod",
                "title" : "AuthenticationMethod",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Associated Types",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflow\/context-swift.associatedtype",
                    "title" : "Context",
                    "type" : "associatedtype"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflow\/init()",
                    "title" : "init() throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflow\/init(client:additionalparameters:)",
                    "title" : "init(client: OAuth2Client, additionalParameters: [String : any APIRequestArgument]?) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflow\/init(plist:)",
                    "title" : "init(plist: URL) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflow\/additionalparameters",
                    "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflow\/context-swift.property",
                    "title" : "var context: Self.Context?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflow\/delegatecollection",
                    "title" : "var delegateCollection: DelegateCollection<Self.Delegate>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflow\/isauthenticating",
                    "title" : "var isAuthenticating: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflow\/reset(completion:)",
                    "title" : "func reset(completion: () -> Void)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationflow",
                "title" : "AuthenticationFlow",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationcontext\/acrvalues",
                    "title" : "var acrValues: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationcontext\/persistvalues",
                    "title" : "var persistValues: [String : String]?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationcontext",
                "title" : "AuthenticationContext",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authentication(flow:received:)",
                    "title" : "func authentication(flow:received:)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authenticationfinished(flow:)",
                    "title" : "func authenticationFinished<Flow>(flow: Flow)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authenticationstarted(flow:)",
                    "title" : "func authenticationStarted<Flow>(flow: Flow)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationdelegate",
                "title" : "AuthenticationDelegate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/standardauthenticationcontext\/init(acrvalues:additionalparameters:)",
                    "title" : "init(acrValues: ClaimCollection<[String]?>, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/standardauthenticationcontext\/acrvalues",
                    "title" : "var acrValues: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/standardauthenticationcontext\/additionalparameters",
                    "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/standardauthenticationcontext",
                "title" : "StandardAuthenticationContext",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2tokenrequest\/clientconfiguration",
                    "title" : "var clientConfiguration: OAuth2Client.Configuration",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2tokenrequest\/tokenvalidatorcontext",
                    "title" : "var tokenValidatorContext: any IDTokenValidatorContext",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2tokenrequest",
                "title" : "OAuth2TokenRequest",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/authorizationcode",
                    "title" : "case authorizationCode",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/devicecode",
                    "title" : "case deviceCode",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/implicit",
                    "title" : "case implicit",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/jwtbearer",
                    "title" : "case jwtBearer",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/oob",
                    "title" : "case oob",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/oobmfa",
                    "title" : "case oobMFA",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/other(_:)",
                    "title" : "case other(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/otp",
                    "title" : "case otp",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/otpmfa",
                    "title" : "case otpMFA",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/password",
                    "title" : "case password",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/refreshtoken",
                    "title" : "case refreshToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/tokenexchange",
                    "title" : "case tokenExchange",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/webauthn",
                    "title" : "case webAuthn",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/webauthnmfa",
                    "title" : "case webAuthnMFA",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/granttype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/granttype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/granttype\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/granttype\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/granttype\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/granttype\/rawvalue-swift.property",
                        "title" : "var rawValue: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/granttype\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/granttype\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/granttype\/rawvalue-swift.typealias",
                        "title" : "GrantType.RawValue",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/granttype\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/granttype",
                "title" : "GrantType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/init()",
                    "title" : "init?()",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/codechallenge",
                    "title" : "let codeChallenge: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/codeverifier",
                    "title" : "let codeVerifier: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.property",
                    "title" : "let method: PKCE.Method",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/plain",
                        "title" : "case plain",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/sha256",
                        "title" : "case sha256",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum",
                    "title" : "PKCE.Method",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/pkce\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/pkce",
                "title" : "PKCE",
                "type" : "struct"
              },
              {
                "title" : "JWT and Token Verification",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/workingwithclaims",
                "title" : "Working with Claims",
                "type" : "article"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct\/algorithm",
                        "title" : "let algorithm: JWK.Algorithm",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct\/keyid",
                        "title" : "let keyId: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct",
                    "title" : "JWT.Header",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/init(_:)",
                    "title" : "init(String) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/init(rawvalue:)",
                    "title" : "init?(rawValue: JWT.RawValue)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/audience",
                    "title" : "var audience: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/authenticationcontext",
                    "title" : "var authenticationContext: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/expirationtime",
                    "title" : "var expirationTime: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/expiresin",
                    "title" : "var expiresIn: TimeInterval",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/header-swift.property",
                    "title" : "let header: JWT.Header",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/issuedat",
                    "title" : "var issuedAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/issuer",
                    "title" : "var issuer: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/notbefore",
                    "title" : "var notBefore: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/payload",
                    "title" : "var payload: [String : any Sendable]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/rawvalue-swift.property",
                    "title" : "let rawValue: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/scope",
                    "title" : "var scope: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/signature",
                    "title" : "var signature: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/validate(using:)",
                    "title" : "func validate(using: JWKS) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/claimtype",
                    "title" : "JWT.ClaimType",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/rawvalue-swift.typealias",
                    "title" : "JWT.RawValue",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/expiresat",
                        "title" : "var expiresAt: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/isexpired",
                        "title" : "var isExpired: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/isvalid",
                        "title" : "var isValid: Bool",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwt\/expires-implementations",
                    "title" : "Expires Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/address",
                        "title" : "var address: [String : String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/allclaims",
                        "title" : "var allClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/authtime",
                        "title" : "var authTime: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/authenticationclassreference",
                        "title" : "var authenticationClassReference: [String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/authenticationmethods",
                        "title" : "var authenticationMethods: [AuthenticationMethod]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/birthdate",
                        "title" : "var birthdate: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/claims",
                        "title" : "var claims: [Self.ClaimType]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/customclaims",
                        "title" : "var customClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/email",
                        "title" : "var email: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/emailverified",
                        "title" : "var emailVerified: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/familyname",
                        "title" : "var familyName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/gender",
                        "title" : "var gender: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/givenname",
                        "title" : "var givenName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/locale",
                        "title" : "var locale: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/middlename",
                        "title" : "var middleName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/name",
                        "title" : "var name: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/namecomponents",
                        "title" : "var nameComponents: PersonNameComponents",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/nickname",
                        "title" : "var nickname: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/phonenumber",
                        "title" : "var phoneNumber: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/phonenumberverified",
                        "title" : "var phoneNumberVerified: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/picture",
                        "title" : "var picture: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/preferredusername",
                        "title" : "var preferredUsername: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/profile",
                        "title" : "var profile: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/subject",
                        "title" : "var subject: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/timezone",
                        "title" : "var timeZone: TimeZone?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/updatedat",
                        "title" : "var updatedAt: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/userlocale",
                        "title" : "var userLocale: Locale?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/website",
                        "title" : "var website: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/zoneinfo",
                        "title" : "var zoneinfo: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)",
                        "title" : "func value(for:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-1tkad",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-39wog",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-3ktvc",
                        "title" : "func value<T>(for: String) -> [String : T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-499j9",
                        "title" : "func value<T>(for: Self.ClaimType) throws -> [String : T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-5muvc",
                        "title" : "func value<T>(for: String) -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-6ofd",
                        "title" : "func value<T>(for: Self.ClaimType) -> [String : T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-7wc9l",
                        "title" : "func value<T>(for: String) throws -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-7zu54",
                        "title" : "func value<T>(for: String) throws -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-8pqez",
                        "title" : "func value<T>(for: Self.ClaimType) -> T?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-8zon2",
                        "title" : "func value<T>(for: String) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-9z18s",
                        "title" : "func value<T>(for: String) throws -> [String : T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/value(for:)-fegp",
                        "title" : "func value<T>(for: Self.ClaimType) -> [T]?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)",
                        "title" : "subscript(_:)",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-3zfn",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-4wd5l",
                        "title" : "subscript<T>(Self.ClaimType) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-5jiej",
                        "title" : "subscript<T>(String) -> [T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-6rcnc",
                        "title" : "subscript<T>(Self.ClaimType) -> [T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-6t11x",
                        "title" : "subscript<T>(String) -> [String : T]?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-9ka9d",
                        "title" : "subscript<T>(Self.ClaimType) -> [String : T]?",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwt\/hasclaims-implementations",
                    "title" : "HasClaims Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwt\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwt\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwt",
                "title" : "JWT",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.property",
                    "title" : "let algorithm: JWK.Algorithm?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/id",
                    "title" : "let id: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/rsaexponent",
                    "title" : "let rsaExponent: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/rsamodulus",
                    "title" : "let rsaModulus: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/type",
                    "title" : "let type: JWK.KeyType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.property",
                    "title" : "let usage: JWK.Usage",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/verify(token:)",
                    "title" : "func verify(token: JWT) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/validator",
                    "title" : "static var validator: any JWKValidator",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a128gcmkw",
                        "title" : "case a128GCMKW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a128kw",
                        "title" : "case a128KW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a192gcmkw",
                        "title" : "case a192GCMKW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a192kw",
                        "title" : "case a192KW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a256gcmkw",
                        "title" : "case a256GCMKW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a256kw",
                        "title" : "case a256KW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/dir",
                        "title" : "case dir",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes",
                        "title" : "case ecdhES",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes_a128kw",
                        "title" : "case ecdhES_a128KW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes_a192kw",
                        "title" : "case ecdhES_a192KW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes_a256kw",
                        "title" : "case ecdhES_a256KW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/eddsa",
                        "title" : "case edDSA",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/es256",
                        "title" : "case es256",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/es384",
                        "title" : "case es384",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/es512",
                        "title" : "case es512",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hs256",
                        "title" : "case hs256",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hs384",
                        "title" : "case hs384",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hs512",
                        "title" : "case hs512",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/none",
                        "title" : "case none",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/other(algorithm:)",
                        "title" : "case other(algorithm: String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/pbes2_hs256_a128kw",
                        "title" : "case pbes2_HS256_A128KW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/pbes2_hs384_a192kw",
                        "title" : "case pbes2_HS384_A192KW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/pbes2_hs512_a256kw",
                        "title" : "case pbes2_HS512_A256KW",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ps256",
                        "title" : "case ps256",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ps384",
                        "title" : "case ps384",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ps512",
                        "title" : "case ps512",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rs256",
                        "title" : "case rs256",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rs384",
                        "title" : "case rs384",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rs512",
                        "title" : "case rs512",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rsa1_5",
                        "title" : "case rsa1_5",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rsaoaep",
                        "title" : "case rsaOAEP",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rsaoaep256",
                        "title" : "case rsaOAEP256",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/init(rawvalue:)",
                            "title" : "init?(rawValue: JWK.Algorithm.RawValue)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rawvalue-swift.property",
                            "title" : "var rawValue: String",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rawvalue-swift.typealias",
                            "title" : "JWK.Algorithm.RawValue",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum",
                    "title" : "JWK.Algorithm",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/ellipticcurve",
                        "title" : "case ellipticCurve",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/octetsequence",
                        "title" : "case octetSequence",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/rsa",
                        "title" : "case rsa",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/keytype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/keytype\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/keytype\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/keytype\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/keytype\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype",
                    "title" : "JWK.KeyType",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/encryption",
                        "title" : "case encryption",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/signature",
                        "title" : "case signature",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum",
                    "title" : "JWK.Usage",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk",
                "title" : "JWK",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/==(_:_:)",
                    "title" : "static func == (JWKS, JWKS) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/endindex",
                    "title" : "var endIndex: JWKS.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/startindex",
                    "title" : "var startIndex: JWKS.Index",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/index(after:)",
                    "title" : "func index(after: JWKS.Index) -> JWKS.Index",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/element",
                    "title" : "JWKS.Element",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/index",
                    "title" : "JWKS.Index",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/firstrange(of:)",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/authfoundation\/jwks\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/indices(of:)",
                        "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/map(_:)-7mmgz",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)",
                        "title" : "subscript(_:)",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-28c77",
                        "title" : "subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-4t0w0",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-5kdvj",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-78ks6",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwks\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwks\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/flatmap(_:)",
                        "title" : "func flatMap(_:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/flatmap(_:)-4liif",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/authfoundation\/jwks\/flatmap(_:)-6nmde",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/map(_:)",
                        "title" : "func map(_:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/map(_:)-6nupd",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/sorted(using:)",
                        "title" : "func sorted(using:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/sorted(using:)-4bnuh",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/sorted(using:)-984w9",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwks\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwks\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwks",
                "title" : "JWKS",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/accesstokenhash",
                    "title" : "case accessTokenHash",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/aceprofile",
                    "title" : "case aceProfile",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/actor",
                    "title" : "case actor",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/address",
                    "title" : "case address",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/attestationlevel",
                    "title" : "case attestationLevel",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/audience",
                    "title" : "case audience",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/authcontextclassreference",
                    "title" : "case authContextClassReference",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/authmethodsreference",
                    "title" : "case authMethodsReference",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/authtime",
                    "title" : "case authTime",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/authorizedactor",
                    "title" : "case authorizedActor",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/authorizedparty",
                    "title" : "case authorizedParty",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/birthdate",
                    "title" : "case birthdate",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/clientid",
                    "title" : "case clientId",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/clientnonce",
                    "title" : "case clientNonce",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/codehash",
                    "title" : "case codeHash",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/confirmation",
                    "title" : "case confirmation",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/custom(_:)",
                    "title" : "case custom(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/destinationidentity",
                    "title" : "case destinationIdentity",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/divertedtarget",
                    "title" : "case divertedTarget",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/email",
                    "title" : "case email",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/emailverified",
                    "title" : "case emailVerified",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/entitlements",
                    "title" : "case entitlements",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/events",
                    "title" : "case events",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/expirationtime",
                    "title" : "case expirationTime",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/expiresin",
                    "title" : "case expiresIn",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/familyname",
                    "title" : "case familyName",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/gender",
                    "title" : "case gender",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/givenname",
                    "title" : "case givenName",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/groups",
                    "title" : "case groups",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/identityprovider",
                    "title" : "case identityProvider",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/isprivateemail",
                    "title" : "case isPrivateEmail",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/issuedat",
                    "title" : "case issuedAt",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/issuer",
                    "title" : "case issuer",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/jcarddata",
                    "title" : "case jcardData",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/jwtid",
                    "title" : "case jwtId",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/locale",
                    "title" : "case locale",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/maxapirequestcount",
                    "title" : "case maxAPIRequestCount",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/mediakeyfingerprint",
                    "title" : "case mediaKeyFingerprint",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/middlename",
                    "title" : "case middleName",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/name",
                    "title" : "case name",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/nickname",
                    "title" : "case nickname",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/nonce",
                    "title" : "case nonce",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/noncesupported",
                    "title" : "case nonceSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/notbefore",
                    "title" : "case notBefore",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/originalpassport",
                    "title" : "case originalPassport",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/originatingid",
                    "title" : "case originatingId",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/originatingidentity",
                    "title" : "case originatingIdentity",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/phonenumber",
                    "title" : "case phoneNumber",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/phonenumberverified",
                    "title" : "case phoneNumberVerified",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/picture",
                    "title" : "case picture",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/preferredusername",
                    "title" : "case preferredUsername",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/profile",
                    "title" : "case profile",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/realuserstatus",
                    "title" : "case realUserStatus",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/resourcepriorityheader",
                    "title" : "case resourcePriorityHeader",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/roles",
                    "title" : "case roles",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/scope",
                    "title" : "case scope",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/sessionid",
                    "title" : "case sessionId",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/sipcseqnum",
                    "title" : "case sipCSeqNum",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/sipcallid",
                    "title" : "case sipCallId",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/sipdate",
                    "title" : "case sipDate",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/sipfromtag",
                    "title" : "case sipFromTag",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/sippriorityheader",
                    "title" : "case sipPriorityHeader",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/sipviabranch",
                    "title" : "case sipViaBranch",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/subject",
                    "title" : "case subject",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/subjectpublickey",
                    "title" : "case subjectPublicKey",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/timeofevent",
                    "title" : "case timeOfEvent",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/tokenintrospection",
                    "title" : "case tokenIntrospection",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/transactionid",
                    "title" : "case transactionId",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/transfersubject",
                    "title" : "case transferSubject",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/updatedat",
                    "title" : "case updatedAt",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/userid",
                    "title" : "case userId",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/vectoroftrust",
                    "title" : "case vectorOfTrust",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/vectoroftrustmark",
                    "title" : "case vectorOfTrustMark",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/verifiablecredential",
                    "title" : "case verifiableCredential",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/verifiablepresentation",
                    "title" : "case verifiablePresentation",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/version",
                    "title" : "case version",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/website",
                    "title" : "case website",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/zoneinfo",
                    "title" : "case zoneinfo",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwtclaim\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwtclaim\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwtclaim\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwtclaim\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwtclaim\/rawvalue-swift.property",
                        "title" : "var rawValue: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwtclaim\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwtclaim\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwtclaim\/rawvalue-swift.typealias",
                        "title" : "JWTClaim.RawValue",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwtclaim\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwtclaim",
                "title" : "JWTClaim",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Associated Types",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/claimtype",
                    "title" : "ClaimType",
                    "type" : "associatedtype"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/address",
                    "title" : "var address: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/allclaims",
                    "title" : "var allClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/authtime",
                    "title" : "var authTime: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/authenticationclassreference",
                    "title" : "var authenticationClassReference: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/authenticationmethods",
                    "title" : "var authenticationMethods: [AuthenticationMethod]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/birthdate",
                    "title" : "var birthdate: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/claims",
                    "title" : "var claims: [Self.ClaimType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/customclaims",
                    "title" : "var customClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/email",
                    "title" : "var email: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/emailverified",
                    "title" : "var emailVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/familyname",
                    "title" : "var familyName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/gender",
                    "title" : "var gender: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/givenname",
                    "title" : "var givenName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/locale",
                    "title" : "var locale: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/middlename",
                    "title" : "var middleName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/namecomponents",
                    "title" : "var nameComponents: PersonNameComponents",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/nickname",
                    "title" : "var nickname: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/payload",
                    "title" : "var payload: [String : any Sendable]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/phonenumber",
                    "title" : "var phoneNumber: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/phonenumberverified",
                    "title" : "var phoneNumberVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/picture",
                    "title" : "var picture: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/preferredusername",
                    "title" : "var preferredUsername: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/profile",
                    "title" : "var profile: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/subject",
                    "title" : "var subject: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/timezone",
                    "title" : "var timeZone: TimeZone?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/updatedat",
                    "title" : "var updatedAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/userlocale",
                    "title" : "var userLocale: Locale?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/website",
                    "title" : "var website: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/zoneinfo",
                    "title" : "var zoneinfo: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/value(for:)",
                    "title" : "func value(for:)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)",
                    "title" : "subscript(_:)",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/hasclaims",
                "title" : "HasClaims",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claimcollection\/init(rawvalue:)",
                    "title" : "init(rawValue:)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claimcollection\/init(wrappedvalue:)",
                    "title" : "init(wrappedValue:)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claimcollection\/projectedvalue",
                    "title" : "var projectedValue: ClaimCollection<Container>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claimcollection\/wrappedvalue",
                    "title" : "var wrappedValue: Container",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/==(_:_:)",
                        "title" : "static func == (ClaimCollection<Container>, ClaimCollection<Container>) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/claimcollection\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: Container.Element...)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/claimcollection\/expressiblebyarrayliteral-implementations",
                    "title" : "ExpressibleByArrayLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(extendedgraphemeclusterliteral:)-7srx5",
                        "title" : "init(extendedGraphemeClusterLiteral: String)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(unicodescalarliteral:)",
                        "title" : "init(unicodeScalarLiteral:)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(unicodescalarliteral:)-3m7b0",
                        "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/claimcollection\/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(extendedgraphemeclusterliteral:)",
                        "title" : "init(extendedGraphemeClusterLiteral:)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(extendedgraphemeclusterliteral:)-5ttox",
                        "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(stringliteral:)",
                        "title" : "init(stringLiteral: String)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/claimcollection\/expressiblebystringliteral-implementations",
                    "title" : "ExpressibleByStringLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(unicodescalarliteral:)-6dkbg",
                        "title" : "init(unicodeScalarLiteral: String)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/claimcollection\/expressiblebyunicodescalarliteral-implementations",
                    "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/hash(into:)",
                        "title" : "func hash(into:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/hash(into:)-6j4f2",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/claimcollection\/hashable-implementations",
                    "title" : "Hashable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)",
                        "title" : "init(from:)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-18i21",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-1dbma",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-1xe6t",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-23dvv",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-27ar3",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-2zi2g",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-3m0jf",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-4n7dz",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-4plb1",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-4rhvw",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-5f8h6",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-5jdi9",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-68s80",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-9cijw",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-9ew2s",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(from:)-sjfj",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/init(rawvalue:)-5inry",
                        "title" : "init(rawValue: Container.RawValue)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/rawvalue-swift.property",
                        "title" : "var rawValue: ClaimCollection<Container>.RawValue",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)",
                        "title" : "func encode(to:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-111ud",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-36on1",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-3ozks",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-4jrui",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-5ozbf",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-5xy8o",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-6r2vx",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-7596o",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-7d9be",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-7fv7e",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-7kc7n",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-89pau",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-8i7f2",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-8tnu1",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-9jjfk",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/encode(to:)-9up0a",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/hash(into:)-47kox",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimcollection\/rawvalue-swift.typealias",
                        "title" : "ClaimCollection.RawValue",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/claimcollection\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/claimcollection",
                "title" : "ClaimCollection",
                "type" : "struct"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonclaimcontainer",
                "title" : "JSONClaimContainer",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/array(_:)",
                    "title" : "case array([JSON])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/bool(_:)",
                    "title" : "case bool(Bool)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/null",
                    "title" : "case null",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/number(_:)",
                    "title" : "case number(NSNumber)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/object(_:)",
                    "title" : "case object([String : JSON])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/string(_:)",
                    "title" : "case string(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/init(_:)",
                    "title" : "init(_:)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/anyvalue",
                    "title" : "var anyValue: Any?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/value(at:)",
                    "title" : "func value(at: Int) throws -> JSON",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/value(forkey:)",
                    "title" : "func value(forKey: String) throws -> JSON",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/json\/subscript(_:)",
                    "title" : "subscript(_:)",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/json\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/json\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/json\/init(unicodescalarliteral:)",
                        "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/json\/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/json\/init(extendedgraphemeclusterliteral:)",
                        "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/json\/expressiblebystringliteral-implementations",
                    "title" : "ExpressibleByStringLiteral Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/json",
                "title" : "JSON",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/anyjson\/init(_:)",
                    "title" : "init(_:)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/anyjson\/datavalue",
                    "title" : "var dataValue: Data",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/anyjson\/jsonvalue",
                    "title" : "var jsonValue: JSON",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/anyjson\/stringvalue",
                    "title" : "var stringValue: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/anyjson",
                "title" : "AnyJSON",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonrepresentable\/json",
                    "title" : "var json: JSON",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonrepresentable",
                "title" : "JSONRepresentable",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claimconvertable\/convert(from:)",
                    "title" : "static func convert(from: Any?) -> Self?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/claimconvertable",
                "title" : "ClaimConvertable",
                "type" : "protocol"
              },
              {
                "path" : "\/documentation\/authfoundation\/isclaim",
                "title" : "IsClaim",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/expires\/expiresat-579iu",
                            "title" : "var expiresAt: Date?",
                            "type" : "property"
                          }
                        ],
                        "title" : "Expires Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/expires\/expiresat",
                    "title" : "var expiresAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/expires\/expiresin",
                    "title" : "var expiresIn: TimeInterval",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/expires\/isexpired-zfoq",
                            "title" : "var isExpired: Bool",
                            "type" : "property"
                          }
                        ],
                        "title" : "Expires Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/expires\/isexpired",
                    "title" : "var isExpired: Bool",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/expires\/isvalid-pfo1",
                            "title" : "var isValid: Bool",
                            "type" : "property"
                          }
                        ],
                        "title" : "Expires Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/expires\/isvalid",
                    "title" : "var isValid: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/expires\/issuedat",
                    "title" : "var issuedAt: Date?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/expires",
                "title" : "Expires",
                "type" : "protocol"
              },
              {
                "title" : "Security",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/init(account:service:server:accessibility:accessgroup:accesscontrol:synchronizable:label:description:generic:value:)",
                        "title" : "init(account: String, service: String?, server: String?, accessibility: Keychain.Accessibility?, accessGroup: String?, accessControl: SecAccessControl?, synchronizable: Bool?, label: String?, description: String?, generic: Data?, value: Data)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/accesscontrol",
                        "title" : "var accessControl: SecAccessControl?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/accessgroup",
                        "title" : "var accessGroup: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/accessibility",
                        "title" : "var accessibility: Keychain.Accessibility?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/account",
                        "title" : "let account: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/description",
                        "title" : "var description: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/generic",
                        "title" : "var generic: Data?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/label",
                        "title" : "var label: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/server",
                        "title" : "let server: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/service",
                        "title" : "let service: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/synchronizable",
                        "title" : "var synchronizable: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/value",
                        "title" : "var value: Data",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/delete()",
                        "title" : "func delete() throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/save(authenticationcontext:)",
                        "title" : "func save(authenticationContext: (any KeychainAuthenticationContext)?) throws -> Keychain.Item",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/update(_:authenticationcontext:)",
                        "title" : "func update(Keychain.Item, authenticationContext: (any KeychainAuthenticationContext)?) throws",
                        "type" : "method"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/item\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/item",
                    "title" : "Keychain.Item",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/accesscontrol",
                            "title" : "var accessControl: SecAccessControl?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/accessgroup",
                            "title" : "let accessGroup: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/accessibility",
                            "title" : "var accessibility: Keychain.Accessibility?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/account",
                            "title" : "let account: String",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/creationdate",
                            "title" : "let creationDate: Date",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/description",
                            "title" : "let description: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/generic",
                            "title" : "let generic: Data?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/label",
                            "title" : "let label: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/modificationdate",
                            "title" : "let modificationDate: Date",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/server",
                            "title" : "let server: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/service",
                            "title" : "let service: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/synchronizable",
                            "title" : "var synchronizable: Bool?",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/delete()",
                            "title" : "func delete() throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/get(prompt:authenticationcontext:)",
                            "title" : "func get(prompt: String?, authenticationContext: (any KeychainAuthenticationContext)?) throws -> Keychain.Item",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/update(_:authenticationcontext:)",
                            "title" : "func update(Keychain.Item, authenticationContext: (any KeychainAuthenticationContext)?) throws",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result",
                        "title" : "Keychain.Search.Result",
                        "type" : "struct"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/init(account:service:server:accessgroup:)",
                        "title" : "init(account: String?, service: String?, server: String?, accessGroup: String?)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/accessgroup",
                        "title" : "let accessGroup: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/account",
                        "title" : "let account: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/server",
                        "title" : "let server: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/service",
                        "title" : "let service: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/delete()",
                        "title" : "func delete() throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/get(prompt:authenticationcontext:)",
                        "title" : "func get(prompt: String?, authenticationContext: (any KeychainAuthenticationContext)?) throws -> Keychain.Item",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/list()",
                        "title" : "func list() throws -> [Keychain.Search.Result]",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/search",
                    "title" : "Keychain.Search",
                    "type" : "struct"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/afterfirstunlock",
                        "title" : "case afterFirstUnlock",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/afterfirstunlockthisdeviceonly",
                        "title" : "case afterFirstUnlockThisDeviceOnly",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/always",
                        "title" : "case always",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/alwaysthisdeviceonly",
                        "title" : "case alwaysThisDeviceOnly",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/unlocked",
                        "title" : "case unlocked",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/unlockedthisdeviceonly",
                        "title" : "case unlockedThisDeviceOnly",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/whenpasswordsetthisdeviceonly",
                        "title" : "case whenPasswordSetThisDeviceOnly",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/init(rawvalue:)",
                            "title" : "init?(rawValue: String)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/rawvalue-swift.property",
                            "title" : "var rawValue: String",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/rawvalue-swift.typealias",
                            "title" : "Keychain.Accessibility.RawValue",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility",
                    "title" : "Keychain.Accessibility",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychain",
                "title" : "Keychain",
                "type" : "struct"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainauthenticationcontext",
                "title" : "KeychainAuthenticationContext",
                "type" : "protocol"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenauthenticationcontext",
                "title" : "TokenAuthenticationContext",
                "type" : "protocol"
              },
              {
                "title" : "Customizations",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/customizingnetworkrequests",
                "title" : "Customizing Network Requests",
                "type" : "article"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/timecoordinator\/now",
                    "title" : "var now: Date",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/timecoordinator\/date(from:)",
                    "title" : "func date(from: Date) -> Date",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/timecoordinator",
                "title" : "TimeCoordinator",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialcoordinator\/credentialdatasource",
                    "title" : "var credentialDataSource: any CredentialDataSource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialcoordinator\/tokenstorage",
                    "title" : "var tokenStorage: any TokenStorage",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialcoordinator\/observe(oauth2:)",
                    "title" : "func observe(oauth2: OAuth2Client)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialcoordinator\/remove(credential:)",
                    "title" : "func remove(credential: Credential) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialcoordinator",
                "title" : "CredentialCoordinator",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialdatasource\/credentialcount",
                    "title" : "var credentialCount: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialdatasource\/delegate",
                    "title" : "var delegate: (any CredentialDataSourceDelegate)?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialdatasource\/credential(for:coordinator:)",
                    "title" : "func credential(for: Token, coordinator: any CredentialCoordinator) -> Credential",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialdatasource\/hascredential(for:)",
                    "title" : "func hasCredential(for: Token) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialdatasource\/remove(credential:)",
                    "title" : "func remove(credential: Credential)",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/credentialdatasource\/urlsession(for:)-3sxy6",
                            "title" : "func urlSession(for: Token) -> any URLSessionProtocol",
                            "type" : "method"
                          }
                        ],
                        "title" : "CredentialDataSource Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/credentialdatasource\/urlsession(for:)",
                    "title" : "func urlSession(for: Token) -> any URLSessionProtocol",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialdatasource",
                "title" : "CredentialDataSource",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialdatasourcedelegate\/credential(datasource:created:)",
                    "title" : "func credential(dataSource: any CredentialDataSource, created: Credential)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialdatasourcedelegate\/credential(datasource:removed:)",
                    "title" : "func credential(dataSource: any CredentialDataSource, removed: Credential)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialdatasourcedelegate",
                "title" : "CredentialDataSourceDelegate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstorage\/allids",
                    "title" : "var allIDs: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstorage\/defaulttokenid",
                    "title" : "var defaultTokenID: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstorage\/delegate",
                    "title" : "var delegate: (any TokenStorageDelegate)?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstorage\/add(token:metadata:security:)",
                    "title" : "func add(token: Token, metadata: Token.Metadata?, security: [Credential.Security]) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstorage\/get(token:prompt:authenticationcontext:)",
                    "title" : "func get(token: String, prompt: String?, authenticationContext: (any TokenAuthenticationContext)?) throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstorage\/metadata(for:)",
                    "title" : "func metadata(for: String) throws -> Token.Metadata",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstorage\/remove(id:)",
                    "title" : "func remove(id: String) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstorage\/replace(token:with:security:)",
                    "title" : "func replace(token: String, with: Token, security: [Credential.Security]?) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstorage\/setdefaulttokenid(_:)",
                    "title" : "func setDefaultTokenID(String?) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstorage\/setmetadata(_:)",
                    "title" : "func setMetadata(Token.Metadata) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokenstorage",
                "title" : "TokenStorage",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:added:token:)",
                    "title" : "func token(storage: any TokenStorage, added: String, token: Token)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:defaultchanged:)",
                    "title" : "func token(storage: any TokenStorage, defaultChanged: String?)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:removed:)",
                    "title" : "func token(storage: any TokenStorage, removed: String)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:replaced:with:)",
                    "title" : "func token(storage: any TokenStorage, replaced: String, with: Token)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokenstoragedelegate",
                "title" : "TokenStorageDelegate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwkvalidator\/validate(token:using:)",
                    "title" : "func validate(token: JWT, using: JWKS) throws -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwkvalidator",
                "title" : "JWKValidator",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenhashvalidator\/validate(_:idtoken:)",
                    "title" : "func validate(String, idToken: JWT) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokenhashvalidator",
                "title" : "TokenHashValidator",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/idtokenvalidator\/issuedatgraceinterval",
                    "title" : "var issuedAtGraceInterval: TimeInterval",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/idtokenvalidator\/validate(token:issuer:clientid:context:)",
                    "title" : "func validate(token: JWT, issuer: URL, clientId: String, context: (any IDTokenValidatorContext)?) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/idtokenvalidator",
                "title" : "IDTokenValidator",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/idtokenvalidatorcontext\/maxage",
                    "title" : "var maxAge: TimeInterval?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/idtokenvalidatorcontext\/nonce",
                    "title" : "var nonce: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/idtokenvalidatorcontext",
                "title" : "IDTokenValidatorContext",
                "type" : "protocol"
              },
              {
                "title" : "Networking",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiauthorization\/authorizationheader",
                    "title" : "var authorizationHeader: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiauthorization",
                "title" : "APIAuthorization",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclientconfiguration\/baseurl",
                    "title" : "var baseURL: URL",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientconfiguration",
                "title" : "APIClientConfiguration",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-4mcbm",
                            "title" : "func api(client: any APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-5cmar",
                            "title" : "func api<T>(client: any APIClient, didSend: URLRequest, received: APIResponse<T>)",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIClientDelegate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)",
                    "title" : "func api(client:didSend:received:)",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:requestid:ratelimit:)-5ofdu",
                            "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIClientDelegate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:requestid:ratelimit:)",
                    "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:shouldretry:)-6w2a8",
                            "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIClientDelegate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:shouldretry:)",
                    "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:willsend:)-9cnzq",
                            "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIClientDelegate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:willsend:)",
                    "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate",
                "title" : "APIClientDelegate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclient\/additionalhttpheaders-77qac",
                            "title" : "var additionalHttpHeaders: [String : String]?",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIClient Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclient\/additionalhttpheaders",
                    "title" : "var additionalHttpHeaders: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclient\/baseurl",
                    "title" : "var baseURL: URL",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclient\/requestidheader-3s9s1",
                            "title" : "var requestIdHeader: String?",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIClient Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclient\/requestidheader",
                    "title" : "var requestIdHeader: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclient\/session",
                    "title" : "var session: any URLSessionProtocol",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclient\/useragent-1c89v",
                            "title" : "var userAgent: String",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIClient Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclient\/useragent",
                    "title" : "var userAgent: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclient\/decode(_:from:parsing:)",
                    "title" : "func decode<T>(T.Type, from: Data, parsing: (any APIParsingContext)?) throws -> T",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-4xpk5",
                            "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-1c12k",
                            "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-7fkxl",
                            "title" : "func didSend(request: URLRequest, received: APIClientError)",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIClient Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)",
                    "title" : "func didSend(request:received:)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:requestid:ratelimit:)",
                    "title" : "func didSend(request: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclient\/error(from:)-2zqym",
                            "title" : "func error(from: Data) -> (any Error)?",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIClient Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclient\/error(from:)",
                    "title" : "func error(from: Data) -> (any Error)?",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclient\/send(_:parsing:)-7y2nd",
                            "title" : "func send<T>(URLRequest, parsing: (any APIParsingContext)?) async throws -> APIResponse<T>",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIClient Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclient\/send(_:parsing:)",
                    "title" : "func send<T>(URLRequest, parsing: (any APIParsingContext)?) async throws -> APIResponse<T>",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclient\/shouldretry(request:ratelimit:)-4i6ks",
                            "title" : "func shouldRetry(request: URLRequest, rateLimit: APIRateLimit) -> APIRetry",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIClient Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclient\/shouldretry(request:ratelimit:)",
                    "title" : "func shouldRetry(request: URLRequest, rateLimit: APIRateLimit) -> APIRetry",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apiclient\/willsend(request:)-72e7e",
                            "title" : "func willSend(request: inout URLRequest)",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIClient Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclient\/willsend(request:)",
                    "title" : "func willSend(request: inout URLRequest)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient",
                "title" : "APIClient",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/formencoded",
                    "title" : "case formEncoded",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/json",
                    "title" : "case json",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/other(_:)",
                    "title" : "case other(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/rawvalue-swift.typealias",
                    "title" : "APIContentType.RawValue",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apicontenttype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apicontenttype\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apicontenttype\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apicontenttype\/rawvalue-swift.property",
                        "title" : "var rawValue: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apicontenttype\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apicontenttype\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apicontenttype",
                "title" : "APIContentType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiparsingcontext\/codinguserinfo",
                    "title" : "var codingUserInfo: [CodingUserInfoKey : Any]?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiparsingcontext\/error(from:)",
                    "title" : "func error(from: Data) -> (any Error)?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiparsingcontext\/resulttype(from:)",
                    "title" : "func resultType(from: HTTPURLResponse) -> APIResponseResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiparsingcontext",
                "title" : "APIParsingContext",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiratelimit\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiratelimit\/delay",
                    "title" : "let delay: TimeInterval?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiratelimit\/limit",
                    "title" : "let limit: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiratelimit\/remaining",
                    "title" : "let remaining: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiratelimit\/reset",
                    "title" : "let reset: TimeInterval",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiratelimit",
                "title" : "APIRateLimit",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestargument\/stringvalue",
                    "title" : "var stringValue: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequestargument",
                "title" : "APIRequestArgument",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestbody\/bodyparameters",
                    "title" : "var bodyParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequestbody",
                "title" : "APIRequestBody",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/delete",
                    "title" : "case delete",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/get",
                    "title" : "case get",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/head",
                    "title" : "case head",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/patch",
                    "title" : "case patch",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/post",
                    "title" : "case post",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/put",
                    "title" : "case put",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequestmethod\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequestmethod\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequestmethod\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequestmethod\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequestmethod\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequestmethod",
                "title" : "APIRequestMethod",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Associated Types",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequest\/responsetype",
                    "title" : "ResponseType",
                    "type" : "associatedtype"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/acceptstype-44rkc",
                            "title" : "var acceptsType: APIContentType?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/acceptstype-3d3te",
                            "title" : "var acceptsType: APIContentType?",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/acceptstype",
                    "title" : "var acceptsType: APIContentType?",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/authorization-9d1g4",
                            "title" : "var authorization: (any APIAuthorization)?",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/authorization",
                    "title" : "var authorization: (any APIAuthorization)?",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/cachepolicy-6ni0p",
                            "title" : "var cachePolicy: URLRequest.CachePolicy",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/cachepolicy",
                    "title" : "var cachePolicy: URLRequest.CachePolicy",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/contenttype-96qjt",
                            "title" : "var contentType: APIContentType?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/contenttype-824pc",
                            "title" : "var contentType: APIContentType?",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/contenttype",
                    "title" : "var contentType: APIContentType?",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/headers-9k3go",
                            "title" : "var headers: [String : (any APIRequestArgument)?]?",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/headers",
                    "title" : "var headers: [String : (any APIRequestArgument)?]?",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/httpmethod-26lqm",
                            "title" : "var httpMethod: APIRequestMethod",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/httpmethod-2jjvk",
                            "title" : "var httpMethod: APIRequestMethod",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/httpmethod",
                    "title" : "var httpMethod: APIRequestMethod",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/query-730ld",
                            "title" : "var query: [String : (any APIRequestArgument)?]?",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/query",
                    "title" : "var query: [String : (any APIRequestArgument)?]?",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/timeoutinterval-58cfn",
                            "title" : "var timeoutInterval: TimeInterval",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/timeoutinterval",
                    "title" : "var timeoutInterval: TimeInterval",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/url-5kekh",
                            "title" : "var url: URL",
                            "type" : "property"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/url",
                    "title" : "var url: URL",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/body()-2spui",
                            "title" : "func body() throws -> Data?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/body()-6rb14",
                            "title" : "func body() throws -> Data?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/body()-8cybb",
                            "title" : "func body() throws -> Data?",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/body()",
                    "title" : "func body() throws -> Data?",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/request(for:)-9pe0",
                            "title" : "func request(for: any APIClient) throws -> URLRequest",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/request(for:)",
                    "title" : "func request(for: any APIClient) throws -> URLRequest",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:)-1f4t7",
                            "title" : "func send(to: any APIClient, parsing: (any APIParsingContext)?) async throws -> APIResponse<Self.ResponseType>",
                            "type" : "method"
                          }
                        ],
                        "title" : "APIRequest Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:)",
                    "title" : "func send(to: any APIClient, parsing: (any APIParsingContext)?) async throws -> APIResponse<Self.ResponseType>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest",
                "title" : "APIRequest",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponseresult\/error",
                    "title" : "case error",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponseresult\/retry",
                    "title" : "case retry",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponseresult\/success",
                    "title" : "case success",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponseresult\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiresponseresult\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiresponseresult",
                "title" : "APIResponseResult",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/date",
                    "title" : "let date: Date",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/links",
                    "title" : "let links: [APIResponse<T>.Link : URL]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/rateinfo",
                    "title" : "let rateInfo: APIRateLimit?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/requestid",
                    "title" : "let requestId: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/responsebody",
                    "title" : "let responseBody: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/result",
                    "title" : "let result: T",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/statuscode",
                    "title" : "let statusCode: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/current",
                        "title" : "case current",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/next",
                        "title" : "case next",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/previous",
                        "title" : "case previous",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apiresponse\/link\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apiresponse\/link\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apiresponse\/link\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apiresponse\/link\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/apiresponse\/link\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link",
                    "title" : "APIResponse.Link",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiresponse",
                "title" : "APIResponse",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiretry\/donotretry",
                    "title" : "case doNotRetry",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiretry\/retry(maximumcount:)",
                    "title" : "case retry(maximumCount: Int)",
                    "type" : "case"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiretry\/default",
                    "title" : "static let `default`: APIRetry",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiretry",
                "title" : "APIRetry",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/empty\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/empty",
                "title" : "Empty",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsondecodable\/jsondecoder",
                    "title" : "static var jsonDecoder: JSONDecoder",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsondecodable",
                "title" : "JSONDecodable",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2apirequest\/category",
                    "title" : "var category: OAuth2APIRequestCategory",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2apirequest\/openidconfiguration",
                    "title" : "var openIdConfiguration: OpenIdConfiguration",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2apirequest",
                "title" : "OAuth2APIRequest",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2apirequestcategory\/authorization",
                    "title" : "case authorization",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2apirequestcategory\/configuration",
                    "title" : "case configuration",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2apirequestcategory\/other",
                    "title" : "case other",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2apirequestcategory\/resource",
                    "title" : "case resource",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2apirequestcategory\/token",
                    "title" : "case token",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2apirequestcategory\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2apirequestcategory\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2apirequestcategory",
                "title" : "OAuth2APIRequestCategory",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Associated Types",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflowrequest\/flow",
                    "title" : "Flow",
                    "type" : "associatedtype"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationflowrequest\/context",
                    "title" : "var context: Self.Flow.Context",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationflowrequest",
                "title" : "AuthenticationFlowRequest",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/providesoauth2parameters\/parameters(for:)",
                    "title" : "func parameters(for: OAuth2APIRequestCategory) -> [String : any APIRequestArgument]?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/providesoauth2parameters",
                "title" : "ProvidesOAuth2Parameters",
                "type" : "protocol"
              },
              {
                "title" : "Error Types",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/cannotparseresponse(error:)",
                    "title" : "case cannotParseResponse(error: any Error)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/httperror(_:)",
                    "title" : "case httpError(any Error)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/invalidrequestdata",
                    "title" : "case invalidRequestData",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/invalidresponse",
                    "title" : "case invalidResponse",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/invalidurl",
                    "title" : "case invalidUrl",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/missingrefreshsettings",
                    "title" : "case missingRefreshSettings",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/missingresponse(request:)",
                    "title" : "case missingResponse(request: URLRequest?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/statuscode(_:)",
                    "title" : "case statusCode(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/unknown",
                    "title" : "case unknown",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/unsupportedcontenttype(_:)",
                    "title" : "case unsupportedContentType(APIContentType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/validation(error:)",
                    "title" : "case validation(error: any Error)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclienterror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclienterror\/==(_:_:)",
                        "title" : "static func == (APIClientError, APIClientError) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclienterror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclienterror\/errordescription",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclienterror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclienterror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclienterror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclienterror",
                "title" : "APIClientError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claimerror\/missingrequiredvalue(key:)",
                    "title" : "case missingRequiredValue(key: String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/claimerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimerror\/errordescription",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/claimerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/claimerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/claimerror",
                "title" : "ClaimError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/incorrectclientconfiguration",
                    "title" : "case incorrectClientConfiguration",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/metadataconsistency",
                    "title" : "case metadataConsistency",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/missingcoordinator",
                    "title" : "case missingCoordinator",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credentialerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/credentialerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credentialerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/credentialerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credentialerror\/errordescription",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credentialerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credentialerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credentialerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/credentialerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialerror",
                "title" : "CredentialError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonerror\/arrayexpected",
                    "title" : "case arrayExpected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonerror\/cannotdecode(value:)",
                    "title" : "case cannotDecode(value: (any Sendable)?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonerror\/invalidcontentencoding",
                    "title" : "case invalidContentEncoding",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonerror\/objectexpected",
                    "title" : "case objectExpected",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jsonerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jsonerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonerror",
                "title" : "JSONError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/badtokenstructure",
                    "title" : "case badTokenStructure",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/cannotcreatekey(code:description:)",
                    "title" : "case cannotCreateKey(code: OSStatus, description: String?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/cannotgeneratehash",
                    "title" : "case cannotGenerateHash",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/exceedsmaxage",
                    "title" : "case exceedsMaxAge",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/expired",
                    "title" : "case expired",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/invalidaudience",
                    "title" : "case invalidAudience",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/invalidauthenticationtime",
                    "title" : "case invalidAuthenticationTime",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/invalidbase64encoding",
                    "title" : "case invalidBase64Encoding",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/invalidissuer",
                    "title" : "case invalidIssuer",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/invalidkey",
                    "title" : "case invalidKey",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/invalidsigningalgorithm",
                    "title" : "case invalidSigningAlgorithm",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/invalidsubject",
                    "title" : "case invalidSubject",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/issuedattimeexceedsgraceinterval",
                    "title" : "case issuedAtTimeExceedsGraceInterval",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/issuerrequireshttps",
                    "title" : "case issuerRequiresHTTPS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/noncemismatch",
                    "title" : "case nonceMismatch",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/signatureinvalid",
                    "title" : "case signatureInvalid",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/signatureverificationunavailable",
                    "title" : "case signatureVerificationUnavailable",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/unsupportedalgorithm(_:)",
                    "title" : "case unsupportedAlgorithm(JWK.Algorithm)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwterror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwterror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwterror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwterror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwterror\/errordescription",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwterror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwterror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwterror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwterror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwterror",
                "title" : "JWTError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/accesscontrolinvalid(code:description:)",
                    "title" : "case accessControlInvalid(code: OSStatus, description: String?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/cannotdelete(code:)",
                    "title" : "case cannotDelete(code: OSStatus)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/cannotget(code:)",
                    "title" : "case cannotGet(code: OSStatus)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/cannotlist(code:)",
                    "title" : "case cannotList(code: OSStatus)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/cannotsave(code:)",
                    "title" : "case cannotSave(code: OSStatus)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/cannotupdate(code:)",
                    "title" : "case cannotUpdate(code: OSStatus)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/invalidaccessibilityoption",
                    "title" : "case invalidAccessibilityOption",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/invalidformat",
                    "title" : "case invalidFormat",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/missingaccount",
                    "title" : "case missingAccount",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/missingattribute",
                    "title" : "case missingAttribute",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/missingvaluedata",
                    "title" : "case missingValueData",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/notfound",
                    "title" : "case notFound",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychainerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychainerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychainerror\/errordescription",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychainerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychainerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychainerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychainerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychainerror",
                "title" : "KeychainError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/cannotcomposeurl",
                    "title" : "case cannotComposeUrl",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/cannotrevoke(type:)",
                    "title" : "case cannotRevoke(type: Token.RevokeType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/error(_:)",
                    "title" : "case error(any Error)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/invalidcontext",
                    "title" : "case invalidContext",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/invalidurl",
                    "title" : "case invalidUrl",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/missingclientconfiguration",
                    "title" : "case missingClientConfiguration",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/missinglocationheader",
                    "title" : "case missingLocationHeader",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/missingoauth2responsekey(_:)",
                    "title" : "case missingOAuth2ResponseKey(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/missingopenidconfiguration(attribute:)",
                    "title" : "case missingOpenIdConfiguration(attribute: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/missingtoken(type:)",
                    "title" : "case missingToken(type: Token.Kind)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/multiple(errors:)",
                    "title" : "case multiple(errors: [OAuth2Error])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/network(error:)",
                    "title" : "case network(error: APIClientError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/redirecturi(_:reason:)",
                    "title" : "case redirectUri(URL, reason: OAuth2Error.RedirectReason)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/redirecturirequired",
                    "title" : "case redirectUriRequired",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/server(error:)",
                    "title" : "case server(error: OAuth2ServerError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/signatureinvalid",
                    "title" : "case signatureInvalid",
                    "type" : "case"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/coderequired",
                        "title" : "case codeRequired",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/hostorpath",
                        "title" : "case hostOrPath",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/invalid",
                        "title" : "case invalid",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/queryargument(_:)",
                        "title" : "case queryArgument(String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/scheme(_:)",
                        "title" : "case scheme(String?)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/state(_:)",
                        "title" : "case state(String?)",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/localizeddescription",
                            "title" : "var localizedDescription: String",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/error-implementations",
                        "title" : "Error Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/failurereason",
                            "title" : "var failureReason: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/helpanchor",
                            "title" : "var helpAnchor: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/recoverysuggestion",
                            "title" : "var recoverySuggestion: String?",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason\/localizederror-implementations",
                        "title" : "LocalizedError Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2error\/redirectreason",
                    "title" : "OAuth2Error.RedirectReason",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2error\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2error\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2error\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2error\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2error",
                "title" : "OAuth2Error",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/additionalvalues",
                    "title" : "var additionalValues: [String : any Sendable]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.property",
                    "title" : "let code: OAuth2ServerError.Code",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/description",
                    "title" : "let description: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/errordescription",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/accessdenied",
                        "title" : "case accessDenied",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/authorizationpending",
                        "title" : "case authorizationPending",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/directauthauthorizationpending",
                        "title" : "case directAuthAuthorizationPending",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/expiredtoken",
                        "title" : "case expiredToken",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidchallengetypessupported",
                        "title" : "case invalidChallengeTypesSupported",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidclient",
                        "title" : "case invalidClient",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidgrant",
                        "title" : "case invalidGrant",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidotp",
                        "title" : "case invalidOTP",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidrequest",
                        "title" : "case invalidRequest",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidscope",
                        "title" : "case invalidScope",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidtoken",
                        "title" : "case invalidToken",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/mfarequired",
                        "title" : "case mfaRequired",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/oobrejected",
                        "title" : "case oobRejected",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/other(code:)",
                        "title" : "case other(code: String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/servererror",
                        "title" : "case serverError",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/slowdown",
                        "title" : "case slowDown",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/temporarilyunavailable",
                        "title" : "case temporarilyUnavailable",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/unauthorizedclient",
                        "title" : "case unauthorizedClient",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/unsupportedresponsemode",
                        "title" : "case unsupportedResponseMode",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/unsupportedresponsetype",
                        "title" : "case unsupportedResponseType",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/init(rawvalue:)",
                            "title" : "init?(rawValue: String)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/rawvalue-swift.property",
                            "title" : "var rawValue: String",
                            "type" : "property"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/rawvalue-swift.typealias",
                            "title" : "OAuth2ServerError.Code.RawValue",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum",
                    "title" : "OAuth2ServerError.Code",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2servererror",
                "title" : "OAuth2ServerError",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/causes",
                    "title" : "let causes: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/code",
                    "title" : "let code: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/id",
                    "title" : "let id: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/link",
                    "title" : "let link: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/summary",
                    "title" : "let summary: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oktaapierror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oktaapierror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oktaapierror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oktaapierror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oktaapierror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oktaapierror",
                "title" : "OktaAPIError",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/cannotreplacetoken",
                    "title" : "case cannotReplaceToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/contextmissing",
                    "title" : "case contextMissing",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/duplicatetokenadded",
                    "title" : "case duplicateTokenAdded",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/invalidconfiguration",
                    "title" : "case invalidConfiguration",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/tokennotfound(id:)",
                    "title" : "case tokenNotFound(id: String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokenerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/tokenerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokenerror\/errordescription",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokenerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokenerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/tokenerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/tokenerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokenerror",
                "title" : "TokenError",
                "type" : "enum"
              },
              {
                "title" : "Migration and versioning",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/migration\/legacyoidc\/needsmigration",
                        "title" : "var needsMigration: Bool",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/migration\/legacyoidc\/migrate()",
                        "title" : "func migrate() throws",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/migration\/legacyoidc\/register()",
                        "title" : "static func register() throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/migration\/legacyoidc\/register(clientid:)",
                        "title" : "static func register(clientId: String?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/migration\/legacyoidc\/register(plist:)",
                        "title" : "static func register(plist: URL) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/migration\/legacyoidc",
                    "title" : "Migration.LegacyOIDC",
                    "type" : "class"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/migration\/ismigrationneeded",
                    "title" : "static var isMigrationNeeded: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/migration\/migrateifneeded()",
                    "title" : "static func migrateIfNeeded() throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/migration\/register(migrator:)",
                    "title" : "static func register(migrator: any SDKVersionMigrator)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/migration",
                "title" : "Migration",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.struct\/init(_:)",
                        "title" : "init(String)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.struct\/init(rawvalue:)",
                        "title" : "init(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.struct\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.struct\/rawvalue",
                        "title" : "let rawValue: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.struct\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.struct\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.struct\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.struct\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.struct\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.struct",
                    "title" : "SDKVersion.Name",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/sdkversion\/init(sdk:version:)",
                    "title" : "init(sdk: SDKVersion.Name, version: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/sdkversion\/displayname",
                    "title" : "var displayName: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/sdkversion\/name-swift.property",
                    "title" : "let name: SDKVersion.Name",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/sdkversion\/version",
                    "title" : "let version: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/sdkversion\/useragent",
                    "title" : "static var userAgent: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/sdkversion\/register(_:version:)",
                    "title" : "static func register(SDKVersion.Name, version: String) -> SDKVersion?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/sdkversion\/register(sdk:)",
                    "title" : "static func register(sdk: SDKVersion) -> SDKVersion",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/sdkversion\/version(for:)",
                    "title" : "static func version(for: SDKVersion.Name) -> SDKVersion?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/sdkversion",
                "title" : "SDKVersion",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/sdkversionmigrator\/needsmigration",
                    "title" : "var needsMigration: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/sdkversionmigrator\/migrate()",
                    "title" : "func migrate() throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/sdkversionmigrator",
                "title" : "SDKVersionMigrator",
                "type" : "protocol"
              },
              {
                "title" : "Internals and Debugging",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/delegatecollection\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/delegatecollection\/add(_:)",
                    "title" : "func add(D)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/delegatecollection\/call(_:)",
                    "title" : "func call<T>((D) -> T) -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/delegatecollection\/invoke(_:)",
                    "title" : "func invoke((D) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/delegatecollection\/remove(_:)",
                    "title" : "func remove(D)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/delegatecollection",
                "title" : "DelegateCollection",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/debugapirequestobserver\/observealloauth2clients",
                    "title" : "var observeAllOAuth2Clients: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/debugapirequestobserver\/showheaders",
                    "title" : "var showHeaders: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/debugapirequestobserver\/startobserving(client:)",
                    "title" : "func startObserving(client: OAuth2Client)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/debugapirequestobserver\/stopobserving(client:)",
                    "title" : "func stopObserving(client: OAuth2Client)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/debugapirequestobserver\/shared",
                    "title" : "static var shared: DebugAPIRequestObserver",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/debugapirequestobserver\/api(client:shouldretry:)",
                        "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/debugapirequestobserver\/apiclientdelegate-implementations",
                    "title" : "APIClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/debugapirequestobserver\/oauth(client:didrefresh:replacedwith:)",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/debugapirequestobserver\/oauth(client:willrefresh:)",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/debugapirequestobserver\/oauth2clientdelegate-implementations",
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/debugapirequestobserver",
                "title" : "DebugAPIRequestObserver",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Associated Types",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/delegate",
                    "title" : "Delegate",
                    "type" : "associatedtype"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/delegatecollection",
                    "title" : "var delegateCollection: DelegateCollection<Self.Delegate>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/add(delegate:)-85i7",
                            "title" : "func add(delegate: Self.Delegate)",
                            "type" : "method"
                          }
                        ],
                        "title" : "UsesDelegateCollection Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/add(delegate:)",
                    "title" : "func add(delegate: Self.Delegate)",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/remove(delegate:)-34r73",
                            "title" : "func remove(delegate: Self.Delegate)",
                            "type" : "method"
                          }
                        ],
                        "title" : "UsesDelegateCollection Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/remove(delegate:)",
                    "title" : "func remove(delegate: Self.Delegate)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/usesdelegatecollection",
                "title" : "UsesDelegateCollection",
                "type" : "protocol"
              },
              {
                "title" : "Extended Modules",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Extended Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/foundation\/date\/coordinated",
                        "title" : "var coordinated: Date",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/foundation\/date\/coordinator",
                        "title" : "static var coordinator: any TimeCoordinator",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/foundation\/date\/nowcoordinated",
                        "title" : "static var nowCoordinated: Date",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/foundation\/date",
                    "title" : "Date",
                    "type" : "extension"
                  },
                  {
                    "title" : "Extended Types",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Extended Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Type Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/foundation\/nsnotification\/name\/credentialcreated",
                            "title" : "static let credentialCreated: Notification.Name",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/foundation\/nsnotification\/name\/credentialmigrated",
                            "title" : "static let credentialMigrated: Notification.Name",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/foundation\/nsnotification\/name\/credentialrefreshfailed",
                            "title" : "static let credentialRefreshFailed: Notification.Name",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/foundation\/nsnotification\/name\/credentialremoved",
                            "title" : "static let credentialRemoved: Notification.Name",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/foundation\/nsnotification\/name\/defaultcredentialchanged",
                            "title" : "static let defaultCredentialChanged: Notification.Name",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/foundation\/nsnotification\/name\/oauth2clientcreated",
                            "title" : "static let oauth2ClientCreated: Notification.Name",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/foundation\/nsnotification\/name\/tokenrefreshfailed",
                            "title" : "static let tokenRefreshFailed: Notification.Name",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/authfoundation\/foundation\/nsnotification\/name\/tokenrefreshed",
                            "title" : "static let tokenRefreshed: Notification.Name",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/authfoundation\/foundation\/nsnotification\/name",
                        "title" : "NSNotification.Name",
                        "type" : "extension"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/foundation\/nsnotification",
                    "title" : "NSNotification",
                    "type" : "extension"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/foundation",
                "title" : "Foundation",
                "type" : "extension"
              },
              {
                "children" : [
                  {
                    "title" : "Extended Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/swift\/array\/base64urlencodedstring",
                        "title" : "var base64URLEncodedString: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/swift\/array\/random(count:)",
                        "title" : "static func random(count: Int) -> [Element]",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/swift\/array",
                    "title" : "Array",
                    "type" : "extension"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/swift",
                "title" : "Swift",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/authfoundation",
            "title" : "AuthFoundation",
            "type" : "module"
          },
          {
            "children" : [
              {
                "title" : "Essentials",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Creating a flow",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/init()",
                    "title" : "init() throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/init(plist:)",
                    "title" : "init(plist: URL) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/init(issuerurl:clientid:scope:supportedgrants:additionalparameters:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, supportedGrants: [GrantType], additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/init(client:supportedgrants:additionalparameters:)",
                    "title" : "init(client: OAuth2Client, supportedGrants: [GrantType], additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Starting MFA or signing in with 1FA",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/start(_:with:context:)",
                    "title" : "func start(String, with: DirectAuthenticationFlow.PrimaryFactor, context: DirectAuthenticationFlow.Context) async throws -> DirectAuthenticationFlow.Status",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/start(_:with:context:completion:)",
                    "title" : "func start(String, with: DirectAuthenticationFlow.PrimaryFactor, context: DirectAuthenticationFlow.Context, completion: (Result<DirectAuthenticationFlow.Status, DirectAuthenticationFlowError>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/primaryfactor\/oob(channel:)",
                        "title" : "case oob(channel: DirectAuthenticationFlow.OOBChannel)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/primaryfactor\/otp(code:)",
                        "title" : "case otp(code: String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/primaryfactor\/password(_:)",
                        "title" : "case password(String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/primaryfactor\/webauthn",
                        "title" : "case webAuthn",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/primaryfactor\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/primaryfactor\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/primaryfactor",
                    "title" : "DirectAuthenticationFlow.PrimaryFactor",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/push",
                        "title" : "case push",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/sms",
                        "title" : "case sms",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/voice",
                        "title" : "case voice",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel",
                    "title" : "DirectAuthenticationFlow.OOBChannel",
                    "type" : "enum"
                  },
                  {
                    "title" : "Resuming sign in with MFA",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/secondaryfactor\/oob(channel:)",
                        "title" : "case oob(channel: DirectAuthenticationFlow.OOBChannel)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/secondaryfactor\/otp(code:)",
                        "title" : "case otp(code: String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/secondaryfactor\/webauthn",
                        "title" : "case webAuthn",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/secondaryfactor\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/secondaryfactor\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/secondaryfactor",
                    "title" : "DirectAuthenticationFlow.SecondaryFactor",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/push",
                        "title" : "case push",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/sms",
                        "title" : "case sms",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/voice",
                        "title" : "case voice",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oobchannel",
                    "title" : "DirectAuthenticationFlow.OOBChannel",
                    "type" : "enum"
                  },
                  {
                    "title" : "Continuing authenticating a factor",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationfactor\/prompt(code:)",
                        "title" : "case prompt(code: String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationfactor\/transfer",
                        "title" : "case transfer",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationfactor\/webauthn(response:)",
                        "title" : "case webAuthn(response: WebAuthn.AuthenticatorAssertionResponse)",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationfactor\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationfactor\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationfactor",
                    "title" : "DirectAuthenticationFlow.ContinuationFactor",
                    "type" : "enum"
                  },
                  {
                    "title" : "Sign in responses",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/status\/continuation(_:)",
                        "title" : "case continuation(DirectAuthenticationFlow.ContinuationType)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/status\/mfarequired(_:)",
                        "title" : "case mfaRequired(DirectAuthenticationFlow.MFAContext)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/status\/success(_:)",
                        "title" : "case success(Token)",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/status\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/status\/==(_:_:)",
                            "title" : "static func == (DirectAuthenticationFlow.Status, DirectAuthenticationFlow.Status) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/status\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/status",
                    "title" : "DirectAuthenticationFlow.Status",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/mfacontext\/supportedchallengetypes",
                        "title" : "let supportedChallengeTypes: [GrantType]?",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/mfacontext\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/mfacontext\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/mfacontext",
                    "title" : "DirectAuthenticationFlow.MFAContext",
                    "type" : "struct"
                  },
                  {
                    "title" : "Flow configuration values",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/client",
                    "title" : "let client: OAuth2Client",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/supportedgranttypes",
                    "title" : "let supportedGrantTypes: [GrantType]",
                    "type" : "property"
                  },
                  {
                    "title" : "Responding to changes",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/delegatecollection",
                    "title" : "let delegateCollection: DelegateCollection<any DirectAuthenticationFlowDelegate>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/isauthenticating",
                    "title" : "var isAuthenticating: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Resetting a flow",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  },
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/context-swift.struct\/init(acrvalues:intent:)",
                        "title" : "init(acrValues: ClaimCollection<[String]?>, intent: DirectAuthenticationFlow.Intent)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/context-swift.struct\/acrvalues",
                        "title" : "var acrValues: [String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/context-swift.struct\/currentstatus",
                        "title" : "var currentStatus: DirectAuthenticationFlow.Status?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/context-swift.struct\/intent",
                        "title" : "var intent: DirectAuthenticationFlow.Intent",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/context-swift.struct\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/context-swift.struct\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/context-swift.struct",
                    "title" : "DirectAuthenticationFlow.Context",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/init(client:additionalparameters:)",
                    "title" : "init(client: OAuth2Client, additionalParameters: [String : any APIRequestArgument]?) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/additionalparameters",
                    "title" : "let additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/context-swift.property",
                    "title" : "var context: DirectAuthenticationFlow.Context?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/resume(with:)",
                    "title" : "func resume(with:)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/resume(with:completion:)",
                    "title" : "func resume(with:completion:)",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/bindingcontext\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/bindingcontext\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/bindingcontext",
                        "title" : "DirectAuthenticationFlow.ContinuationType.BindingContext",
                        "type" : "struct"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/webauthncontext\/request",
                            "title" : "let request: WebAuthn.CredentialRequestOptions",
                            "type" : "property"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/webauthncontext\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/webauthncontext\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/webauthncontext",
                        "title" : "DirectAuthenticationFlow.ContinuationType.WebAuthnContext",
                        "type" : "struct"
                      },
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/prompt(_:)",
                        "title" : "case prompt(DirectAuthenticationFlow.ContinuationType.BindingContext)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/transfer(_:code:)",
                        "title" : "case transfer(DirectAuthenticationFlow.ContinuationType.BindingContext, code: String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/webauthn(_:)",
                        "title" : "case webAuthn(DirectAuthenticationFlow.ContinuationType.WebAuthnContext)",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/==(_:_:)",
                            "title" : "static func == (DirectAuthenticationFlow.ContinuationType, DirectAuthenticationFlow.ContinuationType) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/continuationtype",
                    "title" : "DirectAuthenticationFlow.ContinuationType",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent\/recovery",
                        "title" : "case recovery",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent\/signin",
                        "title" : "case signIn",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/intent",
                    "title" : "DirectAuthenticationFlow.Intent",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/api(client:didsend:received:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/api(client:didsend:received:requestid:ratelimit:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/api(client:shouldretry:)",
                        "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/api(client:willsend:)",
                        "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/apiclientdelegate-implementations",
                    "title" : "APIClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/assertisolated(_:file:line:)",
                        "title" : "func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/assumeisolated(_:file:line:)",
                        "title" : "func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/preconditionisolated(_:file:line:)",
                        "title" : "func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/actor-implementations",
                    "title" : "Actor Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/init()",
                        "title" : "init() throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/init(plist:)",
                        "title" : "init(plist: URL) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/reset(completion:)",
                        "title" : "func reset(completion: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/authenticationflow-implementations",
                    "title" : "AuthenticationFlow Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oauth(client:didrefresh:replacedwith:)",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oauth(client:willrefresh:)",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/oauth2clientdelegate-implementations",
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/add(delegate:)",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/remove(delegate:)",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/delegate",
                        "title" : "DirectAuthenticationFlow.Delegate",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflow\/usesdelegatecollection-implementations",
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktadirectauth\/directauthenticationflow",
                "title" : "DirectAuthenticationFlow",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowdelegate\/authentication(flow:received:)",
                    "title" : "func authentication<Flow>(flow: Flow, received: DirectAuthenticationFlow.Status)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktadirectauth\/directauthenticationflowdelegate",
                "title" : "DirectAuthenticationFlowDelegate",
                "type" : "protocol"
              },
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatorassertionresponse\/init(clientdatajson:authenticatordata:signature:userhandle:)",
                        "title" : "init(clientDataJSON: String, authenticatorData: String, signature: String, userHandle: String?)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatorassertionresponse\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatorassertionresponse\/authenticatordata",
                        "title" : "let authenticatorData: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatorassertionresponse\/clientdatajson",
                        "title" : "let clientDataJSON: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatorassertionresponse\/signature",
                        "title" : "let signature: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatorassertionresponse\/userhandle",
                        "title" : "let userHandle: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatorassertionresponse\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatorassertionresponse\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatorassertionresponse",
                    "title" : "WebAuthn.AuthenticatorAssertionResponse",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/authenticatorenrollment\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/authenticatorenrollment\/credentialid",
                            "title" : "let credentialId: String",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/authenticatorenrollment\/displayname",
                            "title" : "let displayName: String",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/authenticatorenrollment\/profile",
                            "title" : "let profile: [String : String]",
                            "type" : "property"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/authenticatorenrollment\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/authenticatorenrollment\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/authenticatorenrollment",
                        "title" : "WebAuthn.CredentialRequestOptions.AuthenticatorEnrollment",
                        "type" : "struct"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/authenticatorenrollments",
                        "title" : "let authenticatorEnrollments: [WebAuthn.CredentialRequestOptions.AuthenticatorEnrollment]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/publickey",
                        "title" : "let publicKey: WebAuthn.PublicKeyCredentialRequestOptions",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Type Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/jsondecoder",
                            "title" : "static let jsonDecoder: JSONDecoder",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions\/jsondecodable-implementations",
                        "title" : "JSONDecodable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/webauthn\/credentialrequestoptions",
                    "title" : "WebAuthn.CredentialRequestOptions",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialdescriptor\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialdescriptor\/id",
                        "title" : "let id: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialdescriptor\/transports",
                        "title" : "let transports: [WebAuthn.AuthenticatorTransport]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialdescriptor\/type",
                        "title" : "let type: WebAuthn.PublicKeyCredentialType",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialdescriptor\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialdescriptor\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialdescriptor",
                    "title" : "WebAuthn.PublicKeyCredentialDescriptor",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialrequestoptions\/allowcredentials",
                        "title" : "let allowCredentials: [WebAuthn.PublicKeyCredentialDescriptor]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialrequestoptions\/challenge",
                        "title" : "let challenge: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialrequestoptions\/extensions",
                        "title" : "let extensions: [String : JSON]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialrequestoptions\/hints",
                        "title" : "let hints: [WebAuthn.PublicKeyCredentialHints]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialrequestoptions\/rpid",
                        "title" : "var rpID: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialrequestoptions\/timeout",
                        "title" : "let timeout: TimeInterval?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialrequestoptions\/userverification",
                        "title" : "let userVerification: WebAuthn.UserVerificationRequirement?",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialrequestoptions\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialrequestoptions\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialrequestoptions",
                    "title" : "WebAuthn.PublicKeyCredentialRequestOptions",
                    "type" : "struct"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/ble",
                        "title" : "case ble",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/hybrid",
                        "title" : "case hybrid",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/nfc",
                        "title" : "case nfc",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/platform",
                        "title" : "case platform",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/smartcard",
                        "title" : "case smartCard",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/usb",
                        "title" : "case usb",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/webauthn\/authenticatortransport",
                    "title" : "WebAuthn.AuthenticatorTransport",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/clientdevice",
                        "title" : "case clientDevice",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/hybrid",
                        "title" : "case hybrid",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/securitykey",
                        "title" : "case securityKey",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialhints",
                    "title" : "WebAuthn.PublicKeyCredentialHints",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialtype\/publickey",
                        "title" : "case publicKey",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialtype\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialtype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialtype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialtype\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialtype\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialtype\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialtype\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialtype\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/webauthn\/publickeycredentialtype",
                    "title" : "WebAuthn.PublicKeyCredentialType",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/discouraged",
                        "title" : "case discouraged",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/preferred",
                        "title" : "case preferred",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/required",
                        "title" : "case required",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/webauthn\/userverificationrequirement",
                    "title" : "WebAuthn.UserVerificationRequirement",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/oktadirectauth\/webauthn",
                "title" : "WebAuthn",
                "type" : "struct"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/bindingcodemissing",
                    "title" : "case bindingCodeMissing",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/flownotstarted",
                    "title" : "case flowNotStarted",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/inconsistentcontextstate",
                    "title" : "case inconsistentContextState",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/invalidcontinuationcontext",
                    "title" : "case invalidContinuationContext",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/missingarguments(_:)",
                    "title" : "case missingArguments([String])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/network(error:)",
                    "title" : "case network(error: APIClientError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/oauth2(error:)",
                    "title" : "case oauth2(error: OAuth2Error)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/other(error:)",
                    "title" : "case other(error: any Error)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/pollingtimeoutexceeded",
                    "title" : "case pollingTimeoutExceeded",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/server(error:)",
                    "title" : "case server(error: OAuth2ServerError)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/==(_:_:)",
                        "title" : "static func == (DirectAuthenticationFlowError, DirectAuthenticationFlowError) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/errordescription",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktadirectauth\/directauthenticationflowerror",
                "title" : "DirectAuthenticationFlowError",
                "type" : "enum"
              },
              {
                "title" : "Extended Modules",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Extended Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/authfoundation\/oauth2client\/directauthenticationflow(supportedgrants:additionalparameters:)",
                        "title" : "func directAuthenticationFlow(supportedGrants: [GrantType], additionalParameters: [String : String]?) -> DirectAuthenticationFlow",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/authfoundation\/oauth2client",
                    "title" : "OAuth2Client",
                    "type" : "extension"
                  }
                ],
                "path" : "\/documentation\/oktadirectauth\/authfoundation",
                "title" : "AuthFoundation",
                "type" : "extension"
              },
              {
                "children" : [
                  {
                    "title" : "Extended Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktadirectauth\/swift\/array\/directauth",
                        "title" : "static var directAuth: [GrantType]",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktadirectauth\/swift\/array",
                    "title" : "Array",
                    "type" : "extension"
                  }
                ],
                "path" : "\/documentation\/oktadirectauth\/swift",
                "title" : "Swift",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/oktadirectauth",
            "title" : "OktaDirectAuth",
            "type" : "module"
          },
          {
            "children" : [
              {
                "title" : "Essentials",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Essentials",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/init()",
                    "title" : "init() throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/init(plist:)",
                    "title" : "init(plist: URL) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/init(client:additionalparameters:)",
                    "title" : "convenience init(client: OAuth2Client, additionalParameters: [String : any APIRequestArgument]?) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/init(issuerurl:clientid:scope:redirecturi:additionalparameters:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, redirectUri: URL, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/start(with:)",
                    "title" : "func start(with: InteractionCodeFlow.Context) async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/resume()",
                    "title" : "func resume() async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/resume(with:)-994wx",
                    "title" : "func resume(with: Remediation) async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/resume(with:)-8uogq",
                    "title" : "func resume(with: URL) async throws -> InteractionCodeFlow.RedirectResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/resume(with:)-9z8bd",
                    "title" : "func resume(with: Response) async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "title" : "Completion Block Functions",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/start(with:completion:)",
                    "title" : "func start(with: InteractionCodeFlow.Context, completion: (Result<Response, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/resume(completion:)",
                    "title" : "func resume(completion: (Result<Response, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/resume(with:completion:)-5mb6r",
                    "title" : "func resume(with: Response, completion: (Result<Token, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/resume(with:completion:)-14v3z",
                    "title" : "func resume(with: URL, completion: (Result<InteractionCodeFlow.RedirectResult, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/resume(with:completion:)-6wh2e",
                    "title" : "func resume(with: Remediation, completion: (Result<Response, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/additionalparameters",
                    "title" : "let additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/client",
                    "title" : "let client: OAuth2Client",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.property",
                    "title" : "var context: InteractionCodeFlow.Context?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/isauthenticating",
                    "title" : "var isAuthenticating: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/resume(with:)",
                    "title" : "func resume(with:)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/resume(with:completion:)",
                    "title" : "func resume(with:completion:)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/tokenresult",
                    "title" : "InteractionCodeFlow.TokenResult",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/redirectresult\/interactionrequired(_:)",
                        "title" : "case interactionRequired(Response)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/redirectresult\/success(_:)",
                        "title" : "case success(Token)",
                        "type" : "case"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/redirectresult",
                    "title" : "InteractionCodeFlow.RedirectResult",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/assertisolated(_:file:line:)",
                        "title" : "func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/assumeisolated(_:file:line:)",
                        "title" : "func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/preconditionisolated(_:file:line:)",
                        "title" : "func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/actor-implementations",
                    "title" : "Actor Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/init(recoverytoken:state:maxage:acrvalues:additionalparameters:)",
                            "title" : "init(recoveryToken: String?, state: String?, maxAge: TimeInterval?, acrValues: ClaimCollection<[String]?>, additionalParameters: [String : any APIRequestArgument]?)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/acrvalues",
                            "title" : "var acrValues: [String]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/additionalparameters",
                            "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/interactionhandle",
                            "title" : "var interactionHandle: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/maxage",
                            "title" : "var maxAge: TimeInterval?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/nonce",
                            "title" : "let nonce: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/pkce",
                            "title" : "let pkce: PKCE?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/recoverytoken",
                            "title" : "var recoveryToken: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/state",
                            "title" : "var state: String",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/context-swift.struct",
                        "title" : "InteractionCodeFlow.Context",
                        "type" : "struct"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/init()",
                        "title" : "init() throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/init(plist:)",
                        "title" : "init(plist: URL) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/reset(completion:)",
                        "title" : "func reset(completion: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/authenticationflow-implementations",
                    "title" : "AuthenticationFlow Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/add(delegate:)",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/remove(delegate:)",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/delegate",
                        "title" : "InteractionCodeFlow.Delegate",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflow\/usesdelegatecollection-implementations",
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/interactioncodeflow",
                "title" : "InteractionCodeFlow",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowdelegate\/authentication(flow:received:)",
                    "title" : "func authentication(flow:received:)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowdelegate\/authenticationfinished(flow:)",
                    "title" : "func authenticationFinished<Flow>(flow: Flow)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowdelegate\/authenticationstarted(flow:)",
                    "title" : "func authenticationStarted<Flow>(flow: Flow)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/interactioncodeflowdelegate",
                "title" : "InteractionCodeFlowDelegate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Classes",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/==(_:_:)",
                            "title" : "static func == (Response.Message.Collection, Response.Message.Collection) -> Bool",
                            "type" : "op"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/allmessages",
                            "title" : "var allMessages: [Response.Message]",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/message(for:)",
                            "title" : "func message(for:)",
                            "type" : "method"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Instance Properties",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/count",
                                "title" : "var count: Int",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/endindex",
                                "title" : "var endIndex: Response.Message.Collection.Index",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/first",
                                "title" : "var first: Self.Element?",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices",
                                "title" : "var indices: DefaultIndices<Self>",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/isempty",
                                "title" : "var isEmpty: Bool",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/startindex",
                                "title" : "var startIndex: Response.Message.Collection.Index",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/underestimatedcount",
                                "title" : "var underestimatedCount: Int",
                                "type" : "property"
                              },
                              {
                                "title" : "Instance Methods",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/distance(from:to:)",
                                "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/drop(while:)",
                                "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/dropfirst(_:)",
                                "title" : "func dropFirst(Int) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/droplast(_:)",
                                "title" : "func dropLast(Int) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstindex(of:)",
                                "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstindex(where:)",
                                "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstrange(of:)",
                                "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(_:offsetby:)",
                                "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(_:offsetby:limitedby:)",
                                "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(after:)",
                                "title" : "func formIndex(after: inout Self.Index)",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(_:offsetby:)",
                                "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(_:offsetby:limitedby:)",
                                "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(after:)",
                                "title" : "func index(after: Response.Message.Collection.Index) -> Response.Message.Collection.Index",
                                "type" : "method"
                              },
                              {
                                "deprecated" : true,
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(of:)",
                                "title" : "func index(of: Self.Element) -> Self.Index?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices(of:)",
                                "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices(where:)",
                                "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/makeiterator()",
                                "title" : "func makeIterator() -> IndexingIterator<Self>",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)-zmad",
                                "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(_:)",
                                "title" : "func prefix(Int) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(through:)",
                                "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(upto:)",
                                "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(while:)",
                                "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/randomelement()",
                                "title" : "func randomElement() -> Self.Element?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/randomelement(using:)",
                                "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/ranges(of:)",
                                "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/removingsubranges(_:)",
                                "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                                "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/split(separator:maxsplits:omittingemptysubsequences:)",
                                "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/suffix(_:)",
                                "title" : "func suffix(Int) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/suffix(from:)",
                                "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/trimmingprefix(_:)",
                                "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/trimmingprefix(while:)",
                                "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "title" : "Subscripts",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/subscript(_:)",
                                "title" : "subscript(Response.Message.Collection.Index) -> Response.Message.Collection.Element",
                                "type" : "subscript"
                              },
                              {
                                "title" : "Type Aliases",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index",
                                "title" : "Response.Message.Collection.Index",
                                "type" : "typealias"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/collection-implementations",
                            "title" : "Collection Implementations",
                            "type" : "symbol"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Instance Properties",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/lazy",
                                "title" : "var lazy: LazySequence<Self>",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/publisher",
                                "title" : "var publisher: Publishers.Sequence<Self, Never>",
                                "type" : "property"
                              },
                              {
                                "title" : "Instance Methods",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/allsatisfy(_:)",
                                "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/compactmap(_:)",
                                "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/compare(_:_:)",
                                "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/contains(_:)",
                                "title" : "func contains(Self.Element) -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/contains(where:)",
                                "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/count(where:)",
                                "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/elementsequal(_:)",
                                "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/elementsequal(_:by:)",
                                "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/enumerated()",
                                "title" : "func enumerated() -> EnumeratedSequence<Self>",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/filter(_:)",
                                "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/first(where:)",
                                "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)",
                                "title" : "func flatMap(_:)",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)-6287y",
                                "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                                "type" : "method"
                              },
                              {
                                "deprecated" : true,
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)-vfqe",
                                "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/foreach(_:)",
                                "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formatted(_:)",
                                "title" : "func formatted<S>(S) -> S.FormatOutput",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/lexicographicallyprecedes(_:by:)",
                                "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)",
                                "title" : "func map(_:)",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)-3exni",
                                "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/max(by:)",
                                "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/min(by:)",
                                "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reduce(_:_:)",
                                "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reduce(into:_:)",
                                "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reversed()",
                                "title" : "func reversed() -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/shuffled()",
                                "title" : "func shuffled() -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/shuffled(using:)",
                                "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(by:)",
                                "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)",
                                "title" : "func sorted(using:)",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)-1ealu",
                                "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)-8lavq",
                                "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/starts(with:)",
                                "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/starts(with:by:)",
                                "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/withcontiguousstorageifavailable(_:)",
                                "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                                "type" : "method"
                              },
                              {
                                "title" : "Type Aliases",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/element",
                                "title" : "Response.Message.Collection.Element",
                                "type" : "typealias"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sequence-implementations",
                            "title" : "Sequence Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection",
                        "title" : "Response.Message.Collection",
                        "type" : "class"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/field",
                        "title" : "var field: Remediation.Form.Field?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/localizationkey",
                        "title" : "let localizationKey: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/message",
                        "title" : "let message: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/type",
                        "title" : "let type: Response.Message.Severity",
                        "type" : "property"
                      },
                      {
                        "title" : "Enumerations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Enumeration Cases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/error",
                            "title" : "case error",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/info",
                            "title" : "case info",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/unknown",
                            "title" : "case unknown",
                            "type" : "case"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/severity",
                        "title" : "Response.Message.Severity",
                        "type" : "enum"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/message",
                    "title" : "Response.Message",
                    "type" : "class"
                  },
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/application\/id",
                        "title" : "let id: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/application\/label",
                        "title" : "let label: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/application\/name",
                        "title" : "let name: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/application\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/application\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/application",
                    "title" : "Response.Application",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/firstname",
                            "title" : "let firstName: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/lastname",
                            "title" : "let lastName: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/locale",
                            "title" : "let locale: Locale?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/timezone",
                            "title" : "let timeZone: TimeZone?",
                            "type" : "property"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct",
                        "title" : "Response.User.Profile",
                        "type" : "struct"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/id",
                        "title" : "let id: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.property",
                        "title" : "let profile: Response.User.Profile?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/username",
                        "title" : "let username: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct",
                    "title" : "Response.User",
                    "type" : "struct"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/app",
                    "title" : "let app: Response.Application?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/authenticators",
                    "title" : "let authenticators: Authenticator.Collection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/canrestart",
                    "title" : "let canRestart: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/expiresat",
                    "title" : "let expiresAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.property",
                    "title" : "let intent: Response.Intent",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/isloginsuccessful",
                    "title" : "let isLoginSuccessful: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/messages",
                    "title" : "let messages: Response.Message.Collection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/remediations",
                    "title" : "let remediations: Remediation.Collection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/user-swift.property",
                    "title" : "let user: Response.User?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/finish()",
                    "title" : "func finish() async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/finish(completion:)",
                    "title" : "func finish(completion: (Result<Token, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/restart()",
                    "title" : "func restart() async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/restart(completion:)",
                    "title" : "func restart(completion: (Result<Response, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/credentialenrollment",
                        "title" : "case credentialEnrollment",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/credentialmodify",
                        "title" : "case credentialModify",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/credentialrecovery",
                        "title" : "case credentialRecovery",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/credentialunenrollment",
                        "title" : "case credentialUnenrollment",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/enrollnewuser",
                        "title" : "case enrollNewUser",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/login",
                        "title" : "case login",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/unknown",
                        "title" : "case unknown",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/init(string:)",
                        "title" : "init(string: String?)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum",
                    "title" : "Response.Intent",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/response",
                "title" : "Response",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/count",
                            "title" : "var count: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/endindex",
                            "title" : "var endIndex: Remediation.Collection.Index",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/first",
                            "title" : "var first: Self.Element?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/indices",
                            "title" : "var indices: DefaultIndices<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/isempty",
                            "title" : "var isEmpty: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/startindex",
                            "title" : "var startIndex: Remediation.Collection.Index",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/underestimatedcount",
                            "title" : "var underestimatedCount: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/distance(from:to:)",
                            "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/drop(while:)",
                            "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/dropfirst(_:)",
                            "title" : "func dropFirst(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/droplast(_:)",
                            "title" : "func dropLast(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/firstindex(of:)",
                            "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/firstindex(where:)",
                            "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/firstrange(of:)",
                            "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/formindex(_:offsetby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/formindex(_:offsetby:limitedby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/formindex(after:)",
                            "title" : "func formIndex(after: inout Self.Index)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/index(_:offsetby:)",
                            "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/index(_:offsetby:limitedby:)",
                            "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/index(after:)",
                            "title" : "func index(after: Remediation.Collection.Index) -> Remediation.Collection.Index",
                            "type" : "method"
                          },
                          {
                            "deprecated" : true,
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/index(of:)",
                            "title" : "func index(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/indices(of:)",
                            "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/indices(where:)",
                            "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/makeiterator()",
                            "title" : "func makeIterator() -> IndexingIterator<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/map(_:)-3fss",
                            "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/prefix(_:)",
                            "title" : "func prefix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/prefix(through:)",
                            "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/prefix(upto:)",
                            "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/prefix(while:)",
                            "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/randomelement()",
                            "title" : "func randomElement() -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/randomelement(using:)",
                            "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/ranges(of:)",
                            "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/removingsubranges(_:)",
                            "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                            "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/split(separator:maxsplits:omittingemptysubsequences:)",
                            "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/suffix(_:)",
                            "title" : "func suffix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/suffix(from:)",
                            "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/trimmingprefix(_:)",
                            "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/trimmingprefix(while:)",
                            "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "title" : "Subscripts",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/subscript(_:)",
                            "title" : "subscript(_:)",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/subscript(_:)-14yya",
                            "title" : "subscript<R>(R) -> Self.SubSequence",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/subscript(_:)-17mty",
                            "title" : "subscript(Remediation.Collection.Index) -> Remediation.Collection.Element",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/subscript(_:)-5xc9u",
                            "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/subscript(_:)-64a7s",
                            "title" : "subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/subscript(_:)-6bqri",
                            "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                            "type" : "subscript"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/index",
                            "title" : "Remediation.Collection.Index",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/collection-implementations",
                        "title" : "Collection Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/lazy",
                            "title" : "var lazy: LazySequence<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/publisher",
                            "title" : "var publisher: Publishers.Sequence<Self, Never>",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/allsatisfy(_:)",
                            "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/compactmap(_:)",
                            "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/compare(_:_:)",
                            "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/contains(_:)",
                            "title" : "func contains(Self.Element) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/contains(where:)",
                            "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/count(where:)",
                            "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/elementsequal(_:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/elementsequal(_:by:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/enumerated()",
                            "title" : "func enumerated() -> EnumeratedSequence<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/filter(_:)",
                            "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/first(where:)",
                            "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/flatmap(_:)",
                            "title" : "func flatMap(_:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/flatmap(_:)-3meqj",
                            "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                            "type" : "method"
                          },
                          {
                            "deprecated" : true,
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/flatmap(_:)-9cfad",
                            "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/foreach(_:)",
                            "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/formatted(_:)",
                            "title" : "func formatted<S>(S) -> S.FormatOutput",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/lexicographicallyprecedes(_:by:)",
                            "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/map(_:)",
                            "title" : "func map(_:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/map(_:)-4m6kz",
                            "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/max(by:)",
                            "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/min(by:)",
                            "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/reduce(_:_:)",
                            "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/reduce(into:_:)",
                            "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/reversed()",
                            "title" : "func reversed() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/shuffled()",
                            "title" : "func shuffled() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/shuffled(using:)",
                            "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/sorted(by:)",
                            "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/sorted(using:)",
                            "title" : "func sorted(using:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/sorted(using:)-61fg8",
                            "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/sorted(using:)-9oxso",
                            "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/starts(with:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/starts(with:by:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/withcontiguousstorageifavailable(_:)",
                            "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                            "type" : "method"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/element",
                            "title" : "Remediation.Collection.Element",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/remediation\/collection\/sequence-implementations",
                        "title" : "Sequence Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/remediation\/collection",
                    "title" : "Remediation.Collection",
                    "type" : "class"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Classes",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/authenticator",
                            "title" : "var authenticator: Authenticator?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/form",
                            "title" : "let form: Remediation.Form?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/ismutable",
                            "title" : "let isMutable: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/isrequired",
                            "title" : "let isRequired: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/issecret",
                            "title" : "let isSecret: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/isselectedoption",
                            "title" : "var isSelectedOption: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/label",
                            "title" : "let label: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/messages",
                            "title" : "let messages: Response.Message.Collection",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/name",
                            "title" : "let name: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/options",
                            "title" : "let options: [Remediation.Form.Field]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/selectedoption",
                            "title" : "var selectedOption: Remediation.Form.Field?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/type",
                            "title" : "let type: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/value",
                            "title" : "var value: (any JSONRepresentable)?",
                            "type" : "property"
                          },
                          {
                            "title" : "Subscripts",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/subscript(_:)",
                            "title" : "subscript(String) -> Remediation.Form.Field?",
                            "type" : "subscript"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field",
                        "title" : "Remediation.Form.Field",
                        "type" : "class"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/fields",
                        "title" : "let fields: [Remediation.Form.Field]",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/count",
                            "title" : "var count: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/endindex",
                            "title" : "var endIndex: Remediation.Form.Index",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/first",
                            "title" : "var first: Self.Element?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/indices",
                            "title" : "var indices: DefaultIndices<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/isempty",
                            "title" : "var isEmpty: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/startindex",
                            "title" : "var startIndex: Remediation.Form.Index",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/underestimatedcount",
                            "title" : "var underestimatedCount: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/distance(from:to:)",
                            "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/drop(while:)",
                            "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/dropfirst(_:)",
                            "title" : "func dropFirst(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/droplast(_:)",
                            "title" : "func dropLast(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/firstindex(of:)",
                            "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/firstindex(where:)",
                            "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/firstrange(of:)",
                            "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/formindex(_:offsetby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/formindex(_:offsetby:limitedby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/formindex(after:)",
                            "title" : "func formIndex(after: inout Self.Index)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/index(_:offsetby:)",
                            "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/index(_:offsetby:limitedby:)",
                            "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/index(after:)",
                            "title" : "func index(after: Remediation.Form.Index) -> Remediation.Form.Index",
                            "type" : "method"
                          },
                          {
                            "deprecated" : true,
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/index(of:)",
                            "title" : "func index(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/indices(of:)",
                            "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/indices(where:)",
                            "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/makeiterator()",
                            "title" : "func makeIterator() -> IndexingIterator<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/map(_:)-lnhe",
                            "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/prefix(_:)",
                            "title" : "func prefix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/prefix(through:)",
                            "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/prefix(upto:)",
                            "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/prefix(while:)",
                            "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/randomelement()",
                            "title" : "func randomElement() -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/randomelement(using:)",
                            "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/ranges(of:)",
                            "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/removingsubranges(_:)",
                            "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                            "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/split(separator:maxsplits:omittingemptysubsequences:)",
                            "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/suffix(_:)",
                            "title" : "func suffix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/suffix(from:)",
                            "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/trimmingprefix(_:)",
                            "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/trimmingprefix(while:)",
                            "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "title" : "Subscripts",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)",
                            "title" : "subscript(_:)",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)-1efjz",
                            "title" : "subscript(Remediation.Form.Index) -> Remediation.Form.Element",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)-296xb",
                            "title" : "subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)-4ylh",
                            "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)-57zxh",
                            "title" : "subscript<R>(R) -> Self.SubSequence",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)-8um4r",
                            "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                            "type" : "subscript"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/index",
                            "title" : "Remediation.Form.Index",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/collection-implementations",
                        "title" : "Collection Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/lazy",
                            "title" : "var lazy: LazySequence<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/publisher",
                            "title" : "var publisher: Publishers.Sequence<Self, Never>",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/allsatisfy(_:)",
                            "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/compactmap(_:)",
                            "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/compare(_:_:)",
                            "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/contains(_:)",
                            "title" : "func contains(Self.Element) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/contains(where:)",
                            "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/count(where:)",
                            "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/elementsequal(_:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/elementsequal(_:by:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/enumerated()",
                            "title" : "func enumerated() -> EnumeratedSequence<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/filter(_:)",
                            "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/first(where:)",
                            "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/flatmap(_:)",
                            "title" : "func flatMap(_:)",
                            "type" : "method"
                          },
                          {
                            "deprecated" : true,
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/flatmap(_:)-22t5l",
                            "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/flatmap(_:)-3mqxr",
                            "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/foreach(_:)",
                            "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/formatted(_:)",
                            "title" : "func formatted<S>(S) -> S.FormatOutput",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/lexicographicallyprecedes(_:by:)",
                            "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/map(_:)",
                            "title" : "func map(_:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/map(_:)-9tbvl",
                            "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/max(by:)",
                            "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/min(by:)",
                            "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/reduce(_:_:)",
                            "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/reduce(into:_:)",
                            "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/reversed()",
                            "title" : "func reversed() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/shuffled()",
                            "title" : "func shuffled() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/shuffled(using:)",
                            "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/sorted(by:)",
                            "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/sorted(using:)",
                            "title" : "func sorted(using:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/sorted(using:)-6gtv4",
                            "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/sorted(using:)-7vdll",
                            "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/starts(with:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/starts(with:by:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/withcontiguousstorageifavailable(_:)",
                            "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                            "type" : "method"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/element",
                            "title" : "Remediation.Form.Element",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/sequence-implementations",
                        "title" : "Sequence Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class",
                    "title" : "Remediation.Form",
                    "type" : "class"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/allsocialidps",
                    "title" : "var allSocialIdps: [SocialIDPCapability]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/authenticators",
                    "title" : "let authenticators: Authenticator.Collection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/capabilities",
                    "title" : "let capabilities: [Remediation.CapabilityType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.property",
                    "title" : "let form: Remediation.Form",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/messages",
                    "title" : "var messages: Response.Message.Collection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/pollable",
                    "title" : "var pollable: PollCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/socialidp",
                    "title" : "var socialIdp: SocialIDPCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/type",
                    "title" : "let type: Remediation.RemediationType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/webauthnauthentication",
                    "title" : "var webAuthnAuthentication: WebAuthnAuthenticationCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/webauthnregistration",
                    "title" : "var webAuthnRegistration: WebAuthnRegistrationCapability?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/proceed()",
                    "title" : "func proceed() async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/proceed(completion:)",
                    "title" : "func proceed(completion: (Result<Response, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/subscript(_:)",
                    "title" : "subscript(String) -> Remediation.Form.Field?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/adminconsent",
                        "title" : "case adminConsent",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/authenticatorenrollmentdata",
                        "title" : "case authenticatorEnrollmentData",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/authenticatorverificationdata",
                        "title" : "case authenticatorVerificationData",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/cancel",
                        "title" : "case cancel",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/cancelpolling",
                        "title" : "case cancelPolling",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/canceltransaction",
                        "title" : "case cancelTransaction",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/challengeauthenticator",
                        "title" : "case challengeAuthenticator",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/challengepoll",
                        "title" : "case challengePoll",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/challengewebauthnautofilluiauthenticator",
                        "title" : "case challengeWebAuthnAutofillUIAuthenticator",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/consent",
                        "title" : "case consent",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/deviceapplessoextension",
                        "title" : "case deviceAppleSsoExtension",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/devicechallengepoll",
                        "title" : "case deviceChallengePoll",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/emailchallengeconsent",
                        "title" : "case emailChallengeConsent",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/enrollauthenticator",
                        "title" : "case enrollAuthenticator",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/enrollpoll",
                        "title" : "case enrollPoll",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/enrollprofile",
                        "title" : "case enrollProfile",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/enrollmentchanneldata",
                        "title" : "case enrollmentChannelData",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/identify",
                        "title" : "case identify",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/identifyrecovery",
                        "title" : "case identifyRecovery",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/launchauthenticator",
                        "title" : "case launchAuthenticator",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/poll",
                        "title" : "case poll",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/recover",
                        "title" : "case recover",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/redirectidp",
                        "title" : "case redirectIdp",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/reenrollauthenticator",
                        "title" : "case reenrollAuthenticator",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/reenrollauthenticatorwarning",
                        "title" : "case reenrollAuthenticatorWarning",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/requestactivationemail",
                        "title" : "case requestActivationEmail",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/resend",
                        "title" : "case resend",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/resendchallenge",
                        "title" : "case resendChallenge",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/resetauthenticator",
                        "title" : "case resetAuthenticator",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/selectauthenticatorauthenticate",
                        "title" : "case selectAuthenticatorAuthenticate",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/selectauthenticatorenroll",
                        "title" : "case selectAuthenticatorEnroll",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/selectauthenticatorunlockaccount",
                        "title" : "case selectAuthenticatorUnlockAccount",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/selectenrollprofile",
                        "title" : "case selectEnrollProfile",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/selectenrollmentchannel",
                        "title" : "case selectEnrollmentChannel",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/selectidentify",
                        "title" : "case selectIdentify",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/send",
                        "title" : "case send",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/sendchallenge",
                        "title" : "case sendChallenge",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/skip",
                        "title" : "case skip",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/unknown(_:)",
                        "title" : "case unknown(String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/unlockaccount",
                        "title" : "case unlockAccount",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/usercode",
                        "title" : "case userCode",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/==(_:_:)",
                            "title" : "static func == (Remediation.RemediationType, Remediation.RemediationType) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/remediation\/remediationtype",
                    "title" : "Remediation.RemediationType",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/capabilities(of:)",
                        "title" : "func capabilities<T>(of: T.Type) -> [T]",
                        "type" : "method"
                      },
                      {
                        "title" : "Enumerations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Enumeration Cases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype\/pollable(_:)",
                            "title" : "case pollable(PollCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype\/socialidp(_:)",
                            "title" : "case socialIdp(SocialIDPCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype\/webauthnauthentication(_:)",
                            "title" : "case webAuthnAuthentication(WebAuthnAuthenticationCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype\/webauthnregistration(_:)",
                            "title" : "case webAuthnRegistration(WebAuthnRegistrationCapability)",
                            "type" : "case"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Initializers",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype\/init(_:)",
                                "title" : "init?(any Capability)",
                                "type" : "init"
                              },
                              {
                                "title" : "Instance Properties",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype\/capabilityvalue",
                                "title" : "var capabilityValue: any Capability",
                                "type" : "property"
                              },
                              {
                                "title" : "Instance Methods",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype\/capability(of:)",
                                "title" : "func capability<T>(of: T.Type) -> T?",
                                "type" : "method"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype\/iscapabilitytype-implementations",
                            "title" : "IsCapabilityType Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitytype",
                        "title" : "Remediation.CapabilityType",
                        "type" : "enum"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/remediation\/capabilitycollection-implementations",
                    "title" : "CapabilityCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/remediation\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/remediation",
                "title" : "Remediation",
                "type" : "class"
              },
              {
                "title" : "Forms and Fields",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/authenticator",
                        "title" : "var authenticator: Authenticator?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/form",
                        "title" : "let form: Remediation.Form?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/ismutable",
                        "title" : "let isMutable: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/isrequired",
                        "title" : "let isRequired: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/issecret",
                        "title" : "let isSecret: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/isselectedoption",
                        "title" : "var isSelectedOption: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/label",
                        "title" : "let label: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/messages",
                        "title" : "let messages: Response.Message.Collection",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/name",
                        "title" : "let name: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/options",
                        "title" : "let options: [Remediation.Form.Field]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/selectedoption",
                        "title" : "var selectedOption: Remediation.Form.Field?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/type",
                        "title" : "let type: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/value",
                        "title" : "var value: (any JSONRepresentable)?",
                        "type" : "property"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/subscript(_:)",
                        "title" : "subscript(String) -> Remediation.Form.Field?",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field",
                    "title" : "Remediation.Form.Field",
                    "type" : "class"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/fields",
                    "title" : "let fields: [Remediation.Form.Field]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/endindex",
                        "title" : "var endIndex: Remediation.Form.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/startindex",
                        "title" : "var startIndex: Remediation.Form.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/firstrange(of:)",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/index(after:)",
                        "title" : "func index(after: Remediation.Form.Index) -> Remediation.Form.Index",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/indices(of:)",
                        "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/map(_:)-lnhe",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)",
                        "title" : "subscript(_:)",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)-1efjz",
                        "title" : "subscript(Remediation.Form.Index) -> Remediation.Form.Element",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)-296xb",
                        "title" : "subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)-4ylh",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)-57zxh",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/subscript(_:)-8um4r",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/index",
                        "title" : "Remediation.Form.Index",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/flatmap(_:)",
                        "title" : "func flatMap(_:)",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/flatmap(_:)-22t5l",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/flatmap(_:)-3mqxr",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/map(_:)",
                        "title" : "func map(_:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/map(_:)-9tbvl",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/sorted(using:)",
                        "title" : "func sorted(using:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/sorted(using:)-6gtv4",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/sorted(using:)-7vdll",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/element",
                        "title" : "Remediation.Form.Element",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class",
                "title" : "Remediation.Form",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/authenticator",
                    "title" : "var authenticator: Authenticator?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/form",
                    "title" : "let form: Remediation.Form?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/ismutable",
                    "title" : "let isMutable: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/isrequired",
                    "title" : "let isRequired: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/issecret",
                    "title" : "let isSecret: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/isselectedoption",
                    "title" : "var isSelectedOption: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/label",
                    "title" : "let label: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/messages",
                    "title" : "let messages: Response.Message.Collection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/name",
                    "title" : "let name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/options",
                    "title" : "let options: [Remediation.Form.Field]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/selectedoption",
                    "title" : "var selectedOption: Remediation.Form.Field?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/type",
                    "title" : "let type: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/value",
                    "title" : "var value: (any JSONRepresentable)?",
                    "type" : "property"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/subscript(_:)",
                    "title" : "subscript(String) -> Remediation.Form.Field?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/remediation\/form-swift.class\/field",
                "title" : "Remediation.Form.Field",
                "type" : "class"
              },
              {
                "title" : "Working with Authenticators",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/current",
                        "title" : "var current: Authenticator?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/enrolled",
                        "title" : "var enrolled: [Authenticator]",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/count",
                            "title" : "var count: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/endindex",
                            "title" : "var endIndex: Authenticator.Collection.Index",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/first",
                            "title" : "var first: Self.Element?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/indices",
                            "title" : "var indices: DefaultIndices<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/isempty",
                            "title" : "var isEmpty: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/startindex",
                            "title" : "var startIndex: Authenticator.Collection.Index",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/underestimatedcount",
                            "title" : "var underestimatedCount: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/distance(from:to:)",
                            "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/drop(while:)",
                            "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/dropfirst(_:)",
                            "title" : "func dropFirst(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/droplast(_:)",
                            "title" : "func dropLast(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/firstindex(of:)",
                            "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/firstindex(where:)",
                            "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/firstrange(of:)",
                            "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/formindex(_:offsetby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/formindex(_:offsetby:limitedby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/formindex(after:)",
                            "title" : "func formIndex(after: inout Self.Index)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/index(_:offsetby:)",
                            "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/index(_:offsetby:limitedby:)",
                            "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/index(after:)",
                            "title" : "func index(after: Authenticator.Collection.Index) -> Authenticator.Collection.Index",
                            "type" : "method"
                          },
                          {
                            "deprecated" : true,
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/index(of:)",
                            "title" : "func index(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/indices(of:)",
                            "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/indices(where:)",
                            "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/makeiterator()",
                            "title" : "func makeIterator() -> IndexingIterator<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/map(_:)-1f9bq",
                            "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/prefix(_:)",
                            "title" : "func prefix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/prefix(through:)",
                            "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/prefix(upto:)",
                            "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/prefix(while:)",
                            "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/randomelement()",
                            "title" : "func randomElement() -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/randomelement(using:)",
                            "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/ranges(of:)",
                            "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/removingsubranges(_:)",
                            "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                            "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/split(separator:maxsplits:omittingemptysubsequences:)",
                            "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/suffix(_:)",
                            "title" : "func suffix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/suffix(from:)",
                            "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/trimmingprefix(_:)",
                            "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/trimmingprefix(while:)",
                            "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "title" : "Subscripts",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)",
                            "title" : "subscript(_:)",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)-1nxjw",
                            "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)-1qpze",
                            "title" : "subscript(Authenticator.Collection.Index) -> Authenticator.Collection.Element",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)-3govj",
                            "title" : "subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)-5cswu",
                            "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                            "type" : "subscript"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)-f1lv",
                            "title" : "subscript<R>(R) -> Self.SubSequence",
                            "type" : "subscript"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/index",
                            "title" : "Authenticator.Collection.Index",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/collection-implementations",
                        "title" : "Collection Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/lazy",
                            "title" : "var lazy: LazySequence<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/publisher",
                            "title" : "var publisher: Publishers.Sequence<Self, Never>",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/allsatisfy(_:)",
                            "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/compactmap(_:)",
                            "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/compare(_:_:)",
                            "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/contains(_:)",
                            "title" : "func contains(Self.Element) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/contains(where:)",
                            "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/count(where:)",
                            "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/elementsequal(_:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/elementsequal(_:by:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/enumerated()",
                            "title" : "func enumerated() -> EnumeratedSequence<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/filter(_:)",
                            "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/first(where:)",
                            "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/flatmap(_:)",
                            "title" : "func flatMap(_:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/flatmap(_:)-7vdvk",
                            "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                            "type" : "method"
                          },
                          {
                            "deprecated" : true,
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/flatmap(_:)-9x0dx",
                            "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/foreach(_:)",
                            "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/formatted(_:)",
                            "title" : "func formatted<S>(S) -> S.FormatOutput",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/lexicographicallyprecedes(_:by:)",
                            "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/map(_:)",
                            "title" : "func map(_:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/map(_:)-59z9",
                            "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/max(by:)",
                            "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/min(by:)",
                            "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/reduce(_:_:)",
                            "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/reduce(into:_:)",
                            "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/reversed()",
                            "title" : "func reversed() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/shuffled()",
                            "title" : "func shuffled() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/shuffled(using:)",
                            "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/sorted(by:)",
                            "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/sorted(using:)",
                            "title" : "func sorted(using:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/sorted(using:)-2d9w1",
                            "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/sorted(using:)-4envp",
                            "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/starts(with:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/starts(with:by:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/withcontiguousstorageifavailable(_:)",
                            "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                            "type" : "method"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/element",
                            "title" : "Authenticator.Collection.Element",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/sequence-implementations",
                        "title" : "Sequence Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/collection",
                    "title" : "Authenticator.Collection",
                    "type" : "class"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilities",
                    "title" : "let capabilities: [Authenticator.CapabilityType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/context",
                    "title" : "let context: [String : JSON]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/displayname",
                    "title" : "let displayName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/duo",
                    "title" : "var duo: DuoCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/id",
                    "title" : "let id: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/key",
                    "title" : "let key: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/methods",
                    "title" : "let methods: [Authenticator.Method]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/numberchallenge",
                    "title" : "var numberChallenge: NumberChallengeCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/otp",
                    "title" : "var otp: OTPCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/passwordsettings",
                    "title" : "var passwordSettings: PasswordSettingsCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/pollable",
                    "title" : "var pollable: PollCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/profile",
                    "title" : "var profile: ProfileCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/recoverable",
                    "title" : "var recoverable: RecoverCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/resendable",
                    "title" : "var resendable: ResendCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/sendable",
                    "title" : "var sendable: SendCapability?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.property",
                    "title" : "let state: Authenticator.State",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/type",
                    "title" : "let type: Authenticator.Kind",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/app",
                        "title" : "case app",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/device",
                        "title" : "case device",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/email",
                        "title" : "case email",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/federated",
                        "title" : "case federated",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/other(type:)",
                        "title" : "case other(type: String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/password",
                        "title" : "case password",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/phone",
                        "title" : "case phone",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/securitykey",
                        "title" : "case securityKey",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/securityquestion",
                        "title" : "case securityQuestion",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/init(rawvalue:)",
                            "title" : "init(rawValue: String)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/rawvalue",
                            "title" : "var rawValue: String",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind",
                    "title" : "Authenticator.Kind",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/duo",
                        "title" : "case duo",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/email",
                        "title" : "case email",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/federated",
                        "title" : "case federated",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/idp",
                        "title" : "case idp",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/other(type:)",
                        "title" : "case other(type: String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/otp",
                        "title" : "case otp",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/password",
                        "title" : "case password",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/push",
                        "title" : "case push",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/securityquestion",
                        "title" : "case securityQuestion",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/signednonce",
                        "title" : "case signedNonce",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/sms",
                        "title" : "case sms",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/totp",
                        "title" : "case totp",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/voice",
                        "title" : "case voice",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/webauthn",
                        "title" : "case webAuthN",
                        "type" : "case"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/stringvalue",
                        "title" : "var stringValue: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/init(from:)",
                            "title" : "init(from: any Decoder) throws",
                            "type" : "init"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/init(rawvalue:)",
                            "title" : "init(rawValue: String)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/rawvalue",
                            "title" : "var rawValue: String",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/encode(to:)",
                            "title" : "func encode(to: any Encoder) throws",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method",
                    "title" : "Authenticator.Method",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/authenticating",
                        "title" : "case authenticating",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/enrolled",
                        "title" : "case enrolled",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/enrolling",
                        "title" : "case enrolling",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/normal",
                        "title" : "case normal",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/recovery",
                        "title" : "case recovery",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'...(_:)",
                            "title" : "static ...(_:)",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'...(_:)-412sy",
                            "title" : "static func ... (Self) -> PartialRangeThrough<Self>",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'...(_:)-4wdwr",
                            "title" : "static func ... (Self) -> PartialRangeFrom<Self>",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'...(_:_:)",
                            "title" : "static func ... (Self, Self) -> ClosedRange<Self>",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'.._(_:)",
                            "title" : "static func ..< (Self) -> PartialRangeUpTo<Self>",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'.._(_:_:)",
                            "title" : "static func ..< (Self, Self) -> Range<Self>",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/_(_:_:)",
                            "title" : "static func > (Self, Self) -> Bool",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/_=(_:_:)-5e73f",
                            "title" : "static func >= (Self, Self) -> Bool",
                            "type" : "op"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/_=(_:_:)-ade",
                            "title" : "static func <= (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/comparable-implementations",
                        "title" : "Comparable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum",
                    "title" : "Authenticator.State",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilities(of:)",
                        "title" : "func capabilities<T>(of: T.Type) -> [T]",
                        "type" : "method"
                      },
                      {
                        "title" : "Enumerations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Enumeration Cases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/duo(_:)",
                            "title" : "case duo(DuoCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/numberchallenge(_:)",
                            "title" : "case numberChallenge(NumberChallengeCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/otp(_:)",
                            "title" : "case otp(OTPCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/passwordsettings(_:)",
                            "title" : "case passwordSettings(PasswordSettingsCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/pollable(_:)",
                            "title" : "case pollable(PollCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/profile(_:)",
                            "title" : "case profile(ProfileCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/recoverable(_:)",
                            "title" : "case recoverable(RecoverCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/resendable(_:)",
                            "title" : "case resendable(ResendCapability)",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/sendable(_:)",
                            "title" : "case sendable(SendCapability)",
                            "type" : "case"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Initializers",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/init(_:)",
                                "title" : "init?(any Capability)",
                                "type" : "init"
                              },
                              {
                                "title" : "Instance Properties",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/capabilityvalue",
                                "title" : "var capabilityValue: any Capability",
                                "type" : "property"
                              },
                              {
                                "title" : "Instance Methods",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/capability(of:)",
                                "title" : "func capability<T>(of: T.Type) -> T?",
                                "type" : "method"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype\/iscapabilitytype-implementations",
                            "title" : "IsCapabilityType Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitytype",
                        "title" : "Authenticator.CapabilityType",
                        "type" : "enum"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/capabilitycollection-implementations",
                    "title" : "CapabilityCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/authenticator",
                "title" : "Authenticator",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/current",
                    "title" : "var current: Authenticator?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/enrolled",
                    "title" : "var enrolled: [Authenticator]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/endindex",
                        "title" : "var endIndex: Authenticator.Collection.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/startindex",
                        "title" : "var startIndex: Authenticator.Collection.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/firstrange(of:)",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/index(after:)",
                        "title" : "func index(after: Authenticator.Collection.Index) -> Authenticator.Collection.Index",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/indices(of:)",
                        "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/map(_:)-1f9bq",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)",
                        "title" : "subscript(_:)",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)-1nxjw",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)-1qpze",
                        "title" : "subscript(Authenticator.Collection.Index) -> Authenticator.Collection.Element",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)-3govj",
                        "title" : "subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)-5cswu",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/subscript(_:)-f1lv",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/index",
                        "title" : "Authenticator.Collection.Index",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/flatmap(_:)",
                        "title" : "func flatMap(_:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/flatmap(_:)-7vdvk",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/flatmap(_:)-9x0dx",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/map(_:)",
                        "title" : "func map(_:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/map(_:)-59z9",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/sorted(using:)",
                        "title" : "func sorted(using:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/sorted(using:)-2d9w1",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/sorted(using:)-4envp",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/element",
                        "title" : "Authenticator.Collection.Element",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/collection\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/authenticator\/collection",
                "title" : "Authenticator.Collection",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/app",
                    "title" : "case app",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/device",
                    "title" : "case device",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/email",
                    "title" : "case email",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/federated",
                    "title" : "case federated",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/other(type:)",
                    "title" : "case other(type: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/password",
                    "title" : "case password",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/phone",
                    "title" : "case phone",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/securitykey",
                    "title" : "case securityKey",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/securityquestion",
                    "title" : "case securityQuestion",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/init(rawvalue:)",
                        "title" : "init(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/rawvalue",
                        "title" : "var rawValue: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/kind\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/authenticator\/kind",
                "title" : "Authenticator.Kind",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/duo",
                    "title" : "case duo",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/email",
                    "title" : "case email",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/federated",
                    "title" : "case federated",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/idp",
                    "title" : "case idp",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/other(type:)",
                    "title" : "case other(type: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/otp",
                    "title" : "case otp",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/password",
                    "title" : "case password",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/push",
                    "title" : "case push",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/securityquestion",
                    "title" : "case securityQuestion",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/signednonce",
                    "title" : "case signedNonce",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/sms",
                    "title" : "case sms",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/totp",
                    "title" : "case totp",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/voice",
                    "title" : "case voice",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/webauthn",
                    "title" : "case webAuthN",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/stringvalue",
                    "title" : "var stringValue: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/init(rawvalue:)",
                        "title" : "init(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/rawvalue",
                        "title" : "var rawValue: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/method\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/authenticator\/method",
                "title" : "Authenticator.Method",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/authenticating",
                    "title" : "case authenticating",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/enrolled",
                    "title" : "case enrolled",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/enrolling",
                    "title" : "case enrolling",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/normal",
                    "title" : "case normal",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/recovery",
                    "title" : "case recovery",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'...(_:)",
                        "title" : "static ...(_:)",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'...(_:)-412sy",
                        "title" : "static func ... (Self) -> PartialRangeThrough<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'...(_:)-4wdwr",
                        "title" : "static func ... (Self) -> PartialRangeFrom<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'...(_:_:)",
                        "title" : "static func ... (Self, Self) -> ClosedRange<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'.._(_:)",
                        "title" : "static func ..< (Self) -> PartialRangeUpTo<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/'.._(_:_:)",
                        "title" : "static func ..< (Self, Self) -> Range<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/_(_:_:)",
                        "title" : "static func > (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/_=(_:_:)-5e73f",
                        "title" : "static func >= (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/_=(_:_:)-ade",
                        "title" : "static func <= (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/comparable-implementations",
                    "title" : "Comparable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/authenticator\/state-swift.enum",
                "title" : "Authenticator.State",
                "type" : "enum"
              },
              {
                "title" : "Working with Responses",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Classes",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/==(_:_:)",
                            "title" : "static func == (Response.Message.Collection, Response.Message.Collection) -> Bool",
                            "type" : "op"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/allmessages",
                            "title" : "var allMessages: [Response.Message]",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/message(for:)",
                            "title" : "func message(for:)",
                            "type" : "method"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Instance Properties",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/count",
                                "title" : "var count: Int",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/endindex",
                                "title" : "var endIndex: Response.Message.Collection.Index",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/first",
                                "title" : "var first: Self.Element?",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices",
                                "title" : "var indices: DefaultIndices<Self>",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/isempty",
                                "title" : "var isEmpty: Bool",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/startindex",
                                "title" : "var startIndex: Response.Message.Collection.Index",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/underestimatedcount",
                                "title" : "var underestimatedCount: Int",
                                "type" : "property"
                              },
                              {
                                "title" : "Instance Methods",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/distance(from:to:)",
                                "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/drop(while:)",
                                "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/dropfirst(_:)",
                                "title" : "func dropFirst(Int) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/droplast(_:)",
                                "title" : "func dropLast(Int) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstindex(of:)",
                                "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstindex(where:)",
                                "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstrange(of:)",
                                "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(_:offsetby:)",
                                "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(_:offsetby:limitedby:)",
                                "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(after:)",
                                "title" : "func formIndex(after: inout Self.Index)",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(_:offsetby:)",
                                "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(_:offsetby:limitedby:)",
                                "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(after:)",
                                "title" : "func index(after: Response.Message.Collection.Index) -> Response.Message.Collection.Index",
                                "type" : "method"
                              },
                              {
                                "deprecated" : true,
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(of:)",
                                "title" : "func index(of: Self.Element) -> Self.Index?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices(of:)",
                                "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices(where:)",
                                "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/makeiterator()",
                                "title" : "func makeIterator() -> IndexingIterator<Self>",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)-zmad",
                                "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(_:)",
                                "title" : "func prefix(Int) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(through:)",
                                "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(upto:)",
                                "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(while:)",
                                "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/randomelement()",
                                "title" : "func randomElement() -> Self.Element?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/randomelement(using:)",
                                "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/ranges(of:)",
                                "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/removingsubranges(_:)",
                                "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                                "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/split(separator:maxsplits:omittingemptysubsequences:)",
                                "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/suffix(_:)",
                                "title" : "func suffix(Int) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/suffix(from:)",
                                "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/trimmingprefix(_:)",
                                "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/trimmingprefix(while:)",
                                "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                                "type" : "method"
                              },
                              {
                                "title" : "Subscripts",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/subscript(_:)",
                                "title" : "subscript(Response.Message.Collection.Index) -> Response.Message.Collection.Element",
                                "type" : "subscript"
                              },
                              {
                                "title" : "Type Aliases",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index",
                                "title" : "Response.Message.Collection.Index",
                                "type" : "typealias"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/collection-implementations",
                            "title" : "Collection Implementations",
                            "type" : "symbol"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Instance Properties",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/lazy",
                                "title" : "var lazy: LazySequence<Self>",
                                "type" : "property"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/publisher",
                                "title" : "var publisher: Publishers.Sequence<Self, Never>",
                                "type" : "property"
                              },
                              {
                                "title" : "Instance Methods",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/allsatisfy(_:)",
                                "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/compactmap(_:)",
                                "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/compare(_:_:)",
                                "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/contains(_:)",
                                "title" : "func contains(Self.Element) -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/contains(where:)",
                                "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/count(where:)",
                                "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/elementsequal(_:)",
                                "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/elementsequal(_:by:)",
                                "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/enumerated()",
                                "title" : "func enumerated() -> EnumeratedSequence<Self>",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/filter(_:)",
                                "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/first(where:)",
                                "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)",
                                "title" : "func flatMap(_:)",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)-6287y",
                                "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                                "type" : "method"
                              },
                              {
                                "deprecated" : true,
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)-vfqe",
                                "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/foreach(_:)",
                                "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formatted(_:)",
                                "title" : "func formatted<S>(S) -> S.FormatOutput",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/lexicographicallyprecedes(_:by:)",
                                "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)",
                                "title" : "func map(_:)",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)-3exni",
                                "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/max(by:)",
                                "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/min(by:)",
                                "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reduce(_:_:)",
                                "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reduce(into:_:)",
                                "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reversed()",
                                "title" : "func reversed() -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/shuffled()",
                                "title" : "func shuffled() -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/shuffled(using:)",
                                "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(by:)",
                                "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)",
                                "title" : "func sorted(using:)",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)-1ealu",
                                "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)-8lavq",
                                "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/starts(with:)",
                                "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/starts(with:by:)",
                                "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                                "type" : "method"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/withcontiguousstorageifavailable(_:)",
                                "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                                "type" : "method"
                              },
                              {
                                "title" : "Type Aliases",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/element",
                                "title" : "Response.Message.Collection.Element",
                                "type" : "typealias"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sequence-implementations",
                            "title" : "Sequence Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection",
                        "title" : "Response.Message.Collection",
                        "type" : "class"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/field",
                        "title" : "var field: Remediation.Form.Field?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/localizationkey",
                        "title" : "let localizationKey: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/message",
                        "title" : "let message: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/type",
                        "title" : "let type: Response.Message.Severity",
                        "type" : "property"
                      },
                      {
                        "title" : "Enumerations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Enumeration Cases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/error",
                            "title" : "case error",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/info",
                            "title" : "case info",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/unknown",
                            "title" : "case unknown",
                            "type" : "case"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/severity",
                        "title" : "Response.Message.Severity",
                        "type" : "enum"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/message",
                    "title" : "Response.Message",
                    "type" : "class"
                  },
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/application\/id",
                        "title" : "let id: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/application\/label",
                        "title" : "let label: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/application\/name",
                        "title" : "let name: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/application\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/application\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/application",
                    "title" : "Response.Application",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/firstname",
                            "title" : "let firstName: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/lastname",
                            "title" : "let lastName: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/locale",
                            "title" : "let locale: Locale?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/timezone",
                            "title" : "let timeZone: TimeZone?",
                            "type" : "property"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct",
                        "title" : "Response.User.Profile",
                        "type" : "struct"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/id",
                        "title" : "let id: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.property",
                        "title" : "let profile: Response.User.Profile?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/username",
                        "title" : "let username: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct",
                    "title" : "Response.User",
                    "type" : "struct"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/app",
                    "title" : "let app: Response.Application?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/authenticators",
                    "title" : "let authenticators: Authenticator.Collection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/canrestart",
                    "title" : "let canRestart: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/expiresat",
                    "title" : "let expiresAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.property",
                    "title" : "let intent: Response.Intent",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/isloginsuccessful",
                    "title" : "let isLoginSuccessful: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/messages",
                    "title" : "let messages: Response.Message.Collection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/remediations",
                    "title" : "let remediations: Remediation.Collection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/user-swift.property",
                    "title" : "let user: Response.User?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/finish()",
                    "title" : "func finish() async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/finish(completion:)",
                    "title" : "func finish(completion: (Result<Token, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/restart()",
                    "title" : "func restart() async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/restart(completion:)",
                    "title" : "func restart(completion: (Result<Response, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/credentialenrollment",
                        "title" : "case credentialEnrollment",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/credentialmodify",
                        "title" : "case credentialModify",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/credentialrecovery",
                        "title" : "case credentialRecovery",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/credentialunenrollment",
                        "title" : "case credentialUnenrollment",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/enrollnewuser",
                        "title" : "case enrollNewUser",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/login",
                        "title" : "case login",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/unknown",
                        "title" : "case unknown",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/init(string:)",
                        "title" : "init(string: String?)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/intent-swift.enum",
                    "title" : "Response.Intent",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/response",
                "title" : "Response",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/==(_:_:)",
                        "title" : "static func == (Response.Message.Collection, Response.Message.Collection) -> Bool",
                        "type" : "op"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/allmessages",
                        "title" : "var allMessages: [Response.Message]",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/message(for:)",
                        "title" : "func message(for:)",
                        "type" : "method"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/count",
                            "title" : "var count: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/endindex",
                            "title" : "var endIndex: Response.Message.Collection.Index",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/first",
                            "title" : "var first: Self.Element?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices",
                            "title" : "var indices: DefaultIndices<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/isempty",
                            "title" : "var isEmpty: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/startindex",
                            "title" : "var startIndex: Response.Message.Collection.Index",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/underestimatedcount",
                            "title" : "var underestimatedCount: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/distance(from:to:)",
                            "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/drop(while:)",
                            "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/dropfirst(_:)",
                            "title" : "func dropFirst(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/droplast(_:)",
                            "title" : "func dropLast(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstindex(of:)",
                            "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstindex(where:)",
                            "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstrange(of:)",
                            "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(_:offsetby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(_:offsetby:limitedby:)",
                            "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(after:)",
                            "title" : "func formIndex(after: inout Self.Index)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(_:offsetby:)",
                            "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(_:offsetby:limitedby:)",
                            "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(after:)",
                            "title" : "func index(after: Response.Message.Collection.Index) -> Response.Message.Collection.Index",
                            "type" : "method"
                          },
                          {
                            "deprecated" : true,
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(of:)",
                            "title" : "func index(of: Self.Element) -> Self.Index?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices(of:)",
                            "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices(where:)",
                            "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/makeiterator()",
                            "title" : "func makeIterator() -> IndexingIterator<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)-zmad",
                            "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(_:)",
                            "title" : "func prefix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(through:)",
                            "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(upto:)",
                            "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(while:)",
                            "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/randomelement()",
                            "title" : "func randomElement() -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/randomelement(using:)",
                            "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/ranges(of:)",
                            "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/removingsubranges(_:)",
                            "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                            "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/split(separator:maxsplits:omittingemptysubsequences:)",
                            "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/suffix(_:)",
                            "title" : "func suffix(Int) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/suffix(from:)",
                            "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/trimmingprefix(_:)",
                            "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/trimmingprefix(while:)",
                            "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                            "type" : "method"
                          },
                          {
                            "title" : "Subscripts",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/subscript(_:)",
                            "title" : "subscript(Response.Message.Collection.Index) -> Response.Message.Collection.Element",
                            "type" : "subscript"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index",
                            "title" : "Response.Message.Collection.Index",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/collection-implementations",
                        "title" : "Collection Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/lazy",
                            "title" : "var lazy: LazySequence<Self>",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/publisher",
                            "title" : "var publisher: Publishers.Sequence<Self, Never>",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/allsatisfy(_:)",
                            "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/compactmap(_:)",
                            "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/compare(_:_:)",
                            "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/contains(_:)",
                            "title" : "func contains(Self.Element) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/contains(where:)",
                            "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/count(where:)",
                            "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/elementsequal(_:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/elementsequal(_:by:)",
                            "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/enumerated()",
                            "title" : "func enumerated() -> EnumeratedSequence<Self>",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/filter(_:)",
                            "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/first(where:)",
                            "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)",
                            "title" : "func flatMap(_:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)-6287y",
                            "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                            "type" : "method"
                          },
                          {
                            "deprecated" : true,
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)-vfqe",
                            "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/foreach(_:)",
                            "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formatted(_:)",
                            "title" : "func formatted<S>(S) -> S.FormatOutput",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/lexicographicallyprecedes(_:by:)",
                            "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)",
                            "title" : "func map(_:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)-3exni",
                            "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/max(by:)",
                            "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/min(by:)",
                            "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reduce(_:_:)",
                            "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reduce(into:_:)",
                            "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reversed()",
                            "title" : "func reversed() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/shuffled()",
                            "title" : "func shuffled() -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/shuffled(using:)",
                            "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(by:)",
                            "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)",
                            "title" : "func sorted(using:)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)-1ealu",
                            "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)-8lavq",
                            "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/starts(with:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/starts(with:by:)",
                            "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/withcontiguousstorageifavailable(_:)",
                            "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                            "type" : "method"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/element",
                            "title" : "Response.Message.Collection.Element",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sequence-implementations",
                        "title" : "Sequence Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/collection",
                    "title" : "Response.Message.Collection",
                    "type" : "class"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/field",
                    "title" : "var field: Remediation.Form.Field?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/localizationkey",
                    "title" : "let localizationKey: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/message",
                    "title" : "let message: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/type",
                    "title" : "let type: Response.Message.Severity",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/error",
                        "title" : "case error",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/info",
                        "title" : "case info",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/unknown",
                        "title" : "case unknown",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/severity\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/severity",
                    "title" : "Response.Message.Severity",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/response\/message",
                "title" : "Response.Message",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/==(_:_:)",
                    "title" : "static func == (Response.Message.Collection, Response.Message.Collection) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/allmessages",
                    "title" : "var allMessages: [Response.Message]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/message(for:)",
                    "title" : "func message(for:)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/endindex",
                        "title" : "var endIndex: Response.Message.Collection.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/startindex",
                        "title" : "var startIndex: Response.Message.Collection.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/firstrange(of:)",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(after:)",
                        "title" : "func index(after: Response.Message.Collection.Index) -> Response.Message.Collection.Index",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices(of:)",
                        "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)-zmad",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/subscript(_:)",
                        "title" : "subscript(Response.Message.Collection.Index) -> Response.Message.Collection.Element",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/index",
                        "title" : "Response.Message.Collection.Index",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)",
                        "title" : "func flatMap(_:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)-6287y",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/flatmap(_:)-vfqe",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)",
                        "title" : "func map(_:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/map(_:)-3exni",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)",
                        "title" : "func sorted(using:)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)-1ealu",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sorted(using:)-8lavq",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/element",
                        "title" : "Response.Message.Collection.Element",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/message\/collection\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/response\/message\/collection",
                "title" : "Response.Message.Collection",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/application\/id",
                    "title" : "let id: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/application\/label",
                    "title" : "let label: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/application\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/application\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/application\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/response\/application",
                "title" : "Response.Application",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/firstname",
                        "title" : "let firstName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/lastname",
                        "title" : "let lastName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/locale",
                        "title" : "let locale: Locale?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/timezone",
                        "title" : "let timeZone: TimeZone?",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.struct",
                    "title" : "Response.User.Profile",
                    "type" : "struct"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/id",
                    "title" : "let id: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/profile-swift.property",
                    "title" : "let profile: Response.User.Profile?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/username",
                    "title" : "let username: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/response\/user-swift.struct",
                "title" : "Response.User",
                "type" : "struct"
              },
              {
                "title" : "Using Capabilities",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/capability\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/capability",
                "title" : "Capability",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/capabilitycollection\/capabilities",
                    "title" : "var capabilities: [Self.CapabilityType]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/oktaidxauth\/capabilitycollection\/capabilities(of:)-2wsxz",
                            "title" : "func capabilities<T>(of: T.Type) -> [T]",
                            "type" : "method"
                          }
                        ],
                        "title" : "CapabilityCollection Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/capabilitycollection\/capabilities(of:)",
                    "title" : "func capabilities<T>(of: T.Type) -> [T]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/capabilitycollection",
                "title" : "CapabilityCollection",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/capability\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/capability",
                "title" : "Capability",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/numberchallengecapability\/correctanswer",
                    "title" : "let correctAnswer: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/numberchallengecapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/numberchallengecapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/numberchallengecapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/numberchallengecapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/numberchallengecapability",
                "title" : "NumberChallengeCapability",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/daystoexpiry",
                    "title" : "let daysToExpiry: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/excludeattributes",
                    "title" : "let excludeAttributes: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/excludeusername",
                    "title" : "let excludeUsername: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/maxconsecutiverepeatingcharacters",
                    "title" : "let maxConsecutiveRepeatingCharacters: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/minlength",
                    "title" : "let minLength: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/minlowercase",
                    "title" : "let minLowerCase: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/minnumber",
                    "title" : "let minNumber: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/minsymbol",
                    "title" : "let minSymbol: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/minuppercase",
                    "title" : "let minUpperCase: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/passwordsettingscapability",
                "title" : "PasswordSettingsCapability",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/pollcapability\/ispolling",
                    "title" : "var isPolling: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/pollcapability\/cancel()",
                    "title" : "func cancel()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/pollcapability\/proceed()",
                    "title" : "func proceed() async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/pollcapability\/proceed(completion:)",
                    "title" : "func proceed(completion: (Result<Response, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/pollcapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/pollcapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/pollcapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/pollcapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/pollcapability",
                "title" : "PollCapability",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/profilecapability\/values",
                    "title" : "let values: [String : String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/profilecapability\/subscript(_:)",
                    "title" : "subscript(String) -> String?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/profilecapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/profilecapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/profilecapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/profilecapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/profilecapability",
                "title" : "ProfileCapability",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/recovercapability\/recover()",
                    "title" : "func recover() async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/recovercapability\/recover(completion:)",
                    "title" : "func recover(completion: (Result<Response, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/recovercapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/recovercapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/recovercapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/recovercapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/recovercapability",
                "title" : "RecoverCapability",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/sendcapability\/send()",
                    "title" : "func send() async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/sendcapability\/send(completion:)",
                    "title" : "func send(completion: (Result<Response, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/sendcapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/sendcapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/sendcapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/sendcapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/sendcapability",
                "title" : "SendCapability",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/resendcapability\/resend()",
                    "title" : "func resend() async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/resendcapability\/resend(completion:)",
                    "title" : "func resend(completion: (Result<Response, any Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/resendcapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/resendcapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/resendcapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/resendcapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/resendcapability",
                "title" : "ResendCapability",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/id",
                    "title" : "let id: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/idpname",
                    "title" : "let idpName: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/redirecturl",
                    "title" : "let redirectUrl: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.property",
                    "title" : "let service: SocialIDPCapability.Service",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/agentlessiwa",
                        "title" : "case agentlessIwa",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/apple",
                        "title" : "case apple",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/facebook",
                        "title" : "case facebook",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/google",
                        "title" : "case google",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/iwa",
                        "title" : "case iwa",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/linkedin",
                        "title" : "case linkedin",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/microsoft",
                        "title" : "case microsoft",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/oidc",
                        "title" : "case oidc",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/oinsocial",
                        "title" : "case oinSocial",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/okta",
                        "title" : "case okta",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/other(_:)",
                        "title" : "case other(String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/saml",
                        "title" : "case saml",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/x509",
                        "title" : "case x509",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/init(string:)",
                        "title" : "init(string: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/init(rawvalue:)",
                            "title" : "init?(rawValue: String)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/rawvalue-swift.property",
                            "title" : "var rawValue: String",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          },
                          {
                            "title" : "Type Aliases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/rawvalue-swift.typealias",
                            "title" : "SocialIDPCapability.Service.RawValue",
                            "type" : "typealias"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/service-swift.enum",
                    "title" : "SocialIDPCapability.Service",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/socialidpcapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/socialidpcapability",
                "title" : "SocialIDPCapability",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/otpcapability\/image",
                    "title" : "var image: NSImage?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/otpcapability\/imagedata",
                    "title" : "let imageData: Data",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/otpcapability\/mimetype",
                    "title" : "let mimeType: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/otpcapability\/sharedsecret",
                    "title" : "let sharedSecret: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/otpcapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/otpcapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/otpcapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/otpcapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/otpcapability",
                "title" : "OTPCapability",
                "type" : "struct"
              },
              {
                "title" : "Errors",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/idxservererror\/localizationkey",
                    "title" : "let localizationKey: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/idxservererror\/message",
                    "title" : "let message: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/idxservererror\/severity",
                    "title" : "let severity: Response.Message.Severity",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/idxservererror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/idxservererror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/idxservererror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/idxservererror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/idxservererror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/idxservererror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/idxservererror",
                "title" : "IDXServerError",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/authenticationincomplete",
                    "title" : "case authenticationIncomplete",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/invalidflow",
                    "title" : "case invalidFlow",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/invalidparameter(name:)",
                    "title" : "case invalidParameter(name: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/missingremediation(name:)",
                    "title" : "case missingRemediation(name: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/missingrequiredparameter(name:)",
                    "title" : "case missingRequiredParameter(name: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/responsevalidationfailed(_:)",
                    "title" : "case responseValidationFailed(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/==(_:_:)",
                        "title" : "static func == (InteractionCodeFlowError, InteractionCodeFlowError) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/errordescription",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/interactioncodeflowerror",
                "title" : "InteractionCodeFlowError",
                "type" : "enum"
              },
              {
                "title" : "Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/duocapability\/host",
                    "title" : "let host: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/duocapability\/script",
                    "title" : "let script: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/duocapability\/signaturedata",
                    "title" : "var signatureData: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/duocapability\/signedtoken",
                    "title" : "let signedToken: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/duocapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/duocapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/duocapability",
                "title" : "DuoCapability",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/challenge",
                    "title" : "let challenge: Data",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/relyingpartyidentifier",
                    "title" : "var relyingPartyIdentifier: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/userverificationpreference",
                    "title" : "var userVerificationPreference: ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/userverificationpreferencestring",
                    "title" : "let userVerificationPreferenceString: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/challenge(authenticatordata:clientdata:signaturedata:userhandle:)",
                    "title" : "func challenge(authenticatorData: Data, clientData: Data, signatureData: Data, userHandle: Data?) async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/challenge(credential:)",
                    "title" : "func challenge(credential: any ASAuthorizationPublicKeyCredentialAssertion) async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/createplatformcredentialassertionrequest()",
                    "title" : "func createPlatformCredentialAssertionRequest() -> ASAuthorizationPlatformPublicKeyCredentialAssertionRequest",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/createsecuritykeycredentialassertionrequest()",
                    "title" : "func createSecurityKeyCredentialAssertionRequest() -> ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/webauthnauthenticationcapability",
                "title" : "WebAuthnAuthenticationCapability",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/attestationpreferencestring",
                    "title" : "let attestationPreferenceString: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/challenge",
                    "title" : "let challenge: Data",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/displayname",
                    "title" : "let displayName: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/relyingpartyidentifier",
                    "title" : "var relyingPartyIdentifier: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/userid",
                    "title" : "let userId: Data",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/userverificationpreferencestring",
                    "title" : "let userVerificationPreferenceString: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/createplatformregistrationrequest()",
                    "title" : "func createPlatformRegistrationRequest() -> ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/createsecuritykeyregistrationrequest()",
                    "title" : "func createSecurityKeyRegistrationRequest() -> ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/register(attestation:clientjson:)",
                    "title" : "func register(attestation: Data, clientJSON: Data) async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/register(credential:)",
                    "title" : "func register(credential: any ASAuthorizationPublicKeyCredentialRegistration) async throws -> Response",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/willproceed(to:)",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/capability-implementations",
                    "title" : "Capability Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/webauthnregistrationcapability",
                "title" : "WebAuthnRegistrationCapability",
                "type" : "class"
              },
              {
                "title" : "Protocols",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/iscapabilitytype\/capability(of:)",
                    "title" : "func capability<T>(of: T.Type) -> T?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/iscapabilitytype",
                "title" : "IsCapabilityType",
                "type" : "protocol"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/invalidremediationform",
                    "title" : "case invalidRemediationForm",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/missingchallengejson",
                    "title" : "case missingChallengeJson",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/missingrelyingpartyidentifier",
                    "title" : "case missingRelyingPartyIdentifier",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/unsupportedcredentialtype",
                    "title" : "case unsupportedCredentialType",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/==(_:_:)",
                        "title" : "static func == (WebAuthnCapabilityError, WebAuthnCapabilityError) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/errordescription",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/webauthncapabilityerror",
                "title" : "WebAuthnCapabilityError",
                "type" : "enum"
              },
              {
                "title" : "Extended Modules",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Extended Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authfoundation\/oauth2client\/interactioncodeflow(additionalparameters:)",
                        "title" : "func interactionCodeFlow(additionalParameters: [String : String]?) throws -> InteractionCodeFlow",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authfoundation\/oauth2client",
                    "title" : "OAuth2Client",
                    "type" : "extension"
                  },
                  {
                    "title" : "Extended Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authfoundation\/apicontenttype\/ionjson",
                        "title" : "static let ionJson: APIContentType",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authfoundation\/apicontenttype",
                    "title" : "APIContentType",
                    "type" : "extension"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidxauth\/authfoundation\/granttype\/interactioncode",
                        "title" : "static let interactionCode: GrantType",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authfoundation\/granttype",
                    "title" : "GrantType",
                    "type" : "extension"
                  },
                  {
                    "title" : "Extended Types",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Extended Enumerations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Type Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oktaidxauth\/authfoundation\/oauth2servererror\/code\/interactionrequired",
                            "title" : "static let interactionRequired: OAuth2ServerError.Code?",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/oktaidxauth\/authfoundation\/oauth2servererror\/code",
                        "title" : "OAuth2ServerError.Code",
                        "type" : "extension"
                      }
                    ],
                    "path" : "\/documentation\/oktaidxauth\/authfoundation\/oauth2servererror",
                    "title" : "OAuth2ServerError",
                    "type" : "extension"
                  }
                ],
                "path" : "\/documentation\/oktaidxauth\/authfoundation",
                "title" : "AuthFoundation",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/oktaidxauth",
            "title" : "OktaIdxAuth",
            "type" : "module"
          },
          {
            "children" : [
              {
                "title" : "Essentials",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oauth2auth\/introductiontoauthenticationflows",
                "title" : "Introduction to Authentication Flows",
                "type" : "article"
              },
              {
                "title" : "Authorization Code Flow",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/init(client:additionalparameters:)",
                    "title" : "convenience init(client: OAuth2Client, additionalParameters: [String : any APIRequestArgument]?) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/init(issuerurl:clientid:scope:redirecturi:logoutredirecturi:additionalparameters:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, redirectUri: URL, logoutRedirectUri: URL?, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/additionalparameters",
                    "title" : "let additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/client",
                    "title" : "let client: OAuth2Client",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.property",
                    "title" : "var context: AuthorizationCodeFlow.Context?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/delegatecollection",
                    "title" : "let delegateCollection: DelegateCollection<any AuthorizationCodeFlowDelegate>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/isauthenticating",
                    "title" : "var isAuthenticating: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/resume(with:)",
                    "title" : "func resume(with: URL) async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/resume(with:completion:)",
                    "title" : "func resume(with: URL, completion: (Result<Token, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/start(with:)",
                    "title" : "func start(with: AuthorizationCodeFlow.Context) async throws -> URL",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/start(with:completion:)",
                    "title" : "func start(with: AuthorizationCodeFlow.Context, completion: (Result<URL, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/prompt\/consent",
                        "title" : "case consent",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/prompt\/login",
                        "title" : "case login",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/prompt\/loginandconsent",
                        "title" : "case loginAndConsent",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/prompt\/none",
                        "title" : "case none",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/prompt\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/prompt\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/prompt\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/prompt\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/prompt\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/prompt",
                    "title" : "AuthorizationCodeFlow.Prompt",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/api(client:didsend:received:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/api(client:didsend:received:requestid:ratelimit:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/api(client:shouldretry:)",
                        "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/api(client:willsend:)",
                        "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/apiclientdelegate-implementations",
                    "title" : "APIClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/assertisolated(_:file:line:)",
                        "title" : "func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/assumeisolated(_:file:line:)",
                        "title" : "func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/preconditionisolated(_:file:line:)",
                        "title" : "func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/actor-implementations",
                    "title" : "Actor Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/init(state:maxage:acrvalues:additionalparameters:)",
                            "title" : "init(state: String?, maxAge: TimeInterval?, acrValues: ClaimCollection<[String]?>, additionalParameters: [String : any APIRequestArgument]?)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/acrvalues",
                            "title" : "var acrValues: [String]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/additionalparameters",
                            "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/authenticationurl",
                            "title" : "var authenticationURL: URL?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/claimslocales",
                            "title" : "var claimsLocales: [String]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/display",
                            "title" : "var display: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/idtokenhint",
                            "title" : "var idTokenHint: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/loginhint",
                            "title" : "var loginHint: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/maxage",
                            "title" : "var maxAge: TimeInterval?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/nonce",
                            "title" : "let nonce: String?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/pkce",
                            "title" : "let pkce: PKCE?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/prompt",
                            "title" : "var prompt: AuthorizationCodeFlow.Prompt?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/state",
                            "title" : "var state: String",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/uilocales",
                            "title" : "var uiLocales: [String]?",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct",
                        "title" : "AuthorizationCodeFlow.Context",
                        "type" : "struct"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/init()",
                        "title" : "init() throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/init(plist:)",
                        "title" : "init(plist: URL) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/reset(completion:)",
                        "title" : "func reset(completion: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/authenticationflow-implementations",
                    "title" : "AuthenticationFlow Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/oauth(client:didrefresh:replacedwith:)",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/oauth(client:willrefresh:)",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/oauth2clientdelegate-implementations",
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/add(delegate:)",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/remove(delegate:)",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/delegate",
                        "title" : "AuthorizationCodeFlow.Delegate",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/usesdelegatecollection-implementations",
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/authorizationcodeflow",
                "title" : "AuthorizationCodeFlow",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflowdelegate\/authentication(flow:customizeurl:)",
                    "title" : "func authentication<Flow>(flow: Flow, customizeUrl: inout URLComponents)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflowdelegate\/authentication(flow:shouldauthenticateusing:)",
                    "title" : "func authentication<Flow>(flow: Flow, shouldAuthenticateUsing: URL)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflowdelegate\/authenticationfinished(flow:)",
                    "title" : "func authenticationFinished<Flow>(flow: Flow)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflowdelegate\/authenticationstarted(flow:)",
                    "title" : "func authenticationStarted<Flow>(flow: Flow)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/authorizationcodeflowdelegate",
                "title" : "AuthorizationCodeFlowDelegate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/init(state:maxage:acrvalues:additionalparameters:)",
                    "title" : "init(state: String?, maxAge: TimeInterval?, acrValues: ClaimCollection<[String]?>, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/acrvalues",
                    "title" : "var acrValues: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/additionalparameters",
                    "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/authenticationurl",
                    "title" : "var authenticationURL: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/claimslocales",
                    "title" : "var claimsLocales: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/display",
                    "title" : "var display: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/idtokenhint",
                    "title" : "var idTokenHint: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/loginhint",
                    "title" : "var loginHint: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/maxage",
                    "title" : "var maxAge: TimeInterval?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/nonce",
                    "title" : "let nonce: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/pkce",
                    "title" : "let pkce: PKCE?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/prompt",
                    "title" : "var prompt: AuthorizationCodeFlow.Prompt?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/state",
                    "title" : "var state: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct\/uilocales",
                    "title" : "var uiLocales: [String]?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/authorizationcodeflow\/context-swift.struct",
                "title" : "AuthorizationCodeFlow.Context",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/init(idtoken:logouthint:state:additionalparameters:)",
                        "title" : "init(idToken: String?, logoutHint: String?, state: String?, additionalParameters: [String : any APIRequestArgument]?)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/init(token:logouthint:state:additionalparameters:)",
                        "title" : "init(token: Token, logoutHint: String?, state: String?, additionalParameters: [String : any APIRequestArgument]?)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/additionalparameters",
                        "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/idtoken",
                        "title" : "var idToken: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/logouthint",
                        "title" : "var logoutHint: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/logouturl",
                        "title" : "var logoutURL: URL?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/state",
                        "title" : "let state: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct",
                    "title" : "SessionLogoutFlow.Context",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/init(client:additionalparameters:)",
                    "title" : "init(client: OAuth2Client, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/init(issuerurl:clientid:scope:logoutredirecturi:additionalparameters:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, logoutRedirectUri: URL?, additionalParameters: [String : String]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/additionalparameters",
                    "title" : "let additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/client",
                    "title" : "let client: OAuth2Client",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.property",
                    "title" : "var context: SessionLogoutFlow.Context?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/delegatecollection",
                    "title" : "let delegateCollection: DelegateCollection<any SessionLogoutFlowDelegate>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/inprogress",
                    "title" : "var inProgress: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/cancel()",
                    "title" : "func cancel()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/start(with:)",
                    "title" : "func start(with: SessionLogoutFlow.Context) async throws -> URL",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/start(with:completion:)",
                    "title" : "func start(with: SessionLogoutFlow.Context, completion: (Result<URL, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/api(client:didsend:received:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/api(client:didsend:received:requestid:ratelimit:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/api(client:shouldretry:)",
                        "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/api(client:willsend:)",
                        "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/apiclientdelegate-implementations",
                    "title" : "APIClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/assertisolated(_:file:line:)",
                        "title" : "func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/assumeisolated(_:file:line:)",
                        "title" : "func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/preconditionisolated(_:file:line:)",
                        "title" : "func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/actor-implementations",
                    "title" : "Actor Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/oauth(client:didrefresh:replacedwith:)",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/oauth(client:willrefresh:)",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/oauth2clientdelegate-implementations",
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/add(delegate:)",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/remove(delegate:)",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/delegate",
                        "title" : "SessionLogoutFlow.Delegate",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/usesdelegatecollection-implementations",
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/sessionlogoutflow",
                "title" : "SessionLogoutFlow",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/init(idtoken:logouthint:state:additionalparameters:)",
                    "title" : "init(idToken: String?, logoutHint: String?, state: String?, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/init(token:logouthint:state:additionalparameters:)",
                    "title" : "init(token: Token, logoutHint: String?, state: String?, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/additionalparameters",
                    "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/idtoken",
                    "title" : "var idToken: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/logouthint",
                    "title" : "var logoutHint: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/logouturl",
                    "title" : "var logoutURL: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/state",
                    "title" : "let state: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/sessionlogoutflow\/context-swift.struct",
                "title" : "SessionLogoutFlow.Context",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/oauth2auth\/sessionlogoutflowdelegate\/logout(flow:customizeurl:)-9awbp",
                            "title" : "func logout<Flow>(flow: Flow, customizeUrl: inout URLComponents)",
                            "type" : "method"
                          }
                        ],
                        "title" : "SessionLogoutFlowDelegate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflowdelegate\/logout(flow:customizeurl:)",
                    "title" : "func logout<Flow>(flow: Flow, customizeUrl: inout URLComponents)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflowdelegate\/logout(flow:received:)",
                    "title" : "func logout<Flow>(flow: Flow, received: OAuth2Error)",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/oauth2auth\/sessionlogoutflowdelegate\/logout(flow:shouldlogoutusing:)-96tg9",
                            "title" : "func logout<Flow>(flow: Flow, shouldLogoutUsing: URL)",
                            "type" : "method"
                          }
                        ],
                        "title" : "SessionLogoutFlowDelegate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessionlogoutflowdelegate\/logout(flow:shouldlogoutusing:)",
                    "title" : "func logout<Flow>(flow: Flow, shouldLogoutUsing: URL)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/sessionlogoutflowdelegate",
                "title" : "SessionLogoutFlowDelegate",
                "type" : "protocol"
              },
              {
                "title" : "Device Authorization Flow",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/expiresin",
                        "title" : "let expiresIn: TimeInterval",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/issuedat",
                        "title" : "let issuedAt: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/usercode",
                        "title" : "let userCode: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/verificationuri",
                        "title" : "let verificationUri: URL",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/verificationuricomplete",
                        "title" : "let verificationUriComplete: URL?",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/expiresat",
                            "title" : "var expiresAt: Date?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/isexpired",
                            "title" : "var isExpired: Bool",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/isvalid",
                            "title" : "var isValid: Bool",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification\/expires-implementations",
                        "title" : "Expires Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/verification",
                    "title" : "DeviceAuthorizationFlow.Verification",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/init(client:additionalparameters:)",
                    "title" : "init(client: OAuth2Client, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/init(issuerurl:clientid:scope:additionalparameters:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/additionalparameters",
                    "title" : "let additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/client",
                    "title" : "let client: OAuth2Client",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.property",
                    "title" : "var context: DeviceAuthorizationFlow.Context?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/delegatecollection",
                    "title" : "let delegateCollection: DelegateCollection<any DeviceAuthorizationFlowDelegate>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/isauthenticating",
                    "title" : "var isAuthenticating: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/resume()",
                    "title" : "func resume() async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/resume(completion:)",
                    "title" : "func resume(completion: (Result<Token, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/start(with:)",
                    "title" : "func start(with: DeviceAuthorizationFlow.Context) async throws -> DeviceAuthorizationFlow.Verification",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/start(with:completion:)",
                    "title" : "func start(with: DeviceAuthorizationFlow.Context, completion: (Result<DeviceAuthorizationFlow.Verification, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/api(client:didsend:received:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/api(client:didsend:received:requestid:ratelimit:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/api(client:shouldretry:)",
                        "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/api(client:willsend:)",
                        "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/apiclientdelegate-implementations",
                    "title" : "APIClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/assertisolated(_:file:line:)",
                        "title" : "func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/assumeisolated(_:file:line:)",
                        "title" : "func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/preconditionisolated(_:file:line:)",
                        "title" : "func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/actor-implementations",
                    "title" : "Actor Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.struct\/init(acrvalues:additionalparameters:)",
                            "title" : "init(acrValues: ClaimCollection<[String]?>, additionalParameters: [String : any APIRequestArgument]?)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.struct\/acrvalues",
                            "title" : "var acrValues: [String]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.struct\/additionalparameters",
                            "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.struct\/verification",
                            "title" : "var verification: DeviceAuthorizationFlow.Verification?",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.struct",
                        "title" : "DeviceAuthorizationFlow.Context",
                        "type" : "struct"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/init()",
                        "title" : "init() throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/init(plist:)",
                        "title" : "init(plist: URL) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/reset(completion:)",
                        "title" : "func reset(completion: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/authenticationflow-implementations",
                    "title" : "AuthenticationFlow Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/oauth(client:didrefresh:replacedwith:)",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/oauth(client:willrefresh:)",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/oauth2clientdelegate-implementations",
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/add(delegate:)",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/remove(delegate:)",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/delegate",
                        "title" : "DeviceAuthorizationFlow.Delegate",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/usesdelegatecollection-implementations",
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow",
                "title" : "DeviceAuthorizationFlow",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflowdelegate\/authentication(flow:received:)",
                    "title" : "func authentication<Flow>(flow: Flow, received: DeviceAuthorizationFlow.Verification)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflowdelegate\/authenticationfinished(flow:)",
                    "title" : "func authenticationFinished<Flow>(flow: Flow)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflowdelegate\/authenticationstarted(flow:)",
                    "title" : "func authenticationStarted<Flow>(flow: Flow)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/deviceauthorizationflowdelegate",
                "title" : "DeviceAuthorizationFlowDelegate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.struct\/init(acrvalues:additionalparameters:)",
                    "title" : "init(acrValues: ClaimCollection<[String]?>, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.struct\/acrvalues",
                    "title" : "var acrValues: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.struct\/additionalparameters",
                    "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.struct\/verification",
                    "title" : "var verification: DeviceAuthorizationFlow.Verification?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/deviceauthorizationflow\/context-swift.struct",
                "title" : "DeviceAuthorizationFlow.Context",
                "type" : "struct"
              },
              {
                "title" : "Token Exchange Flow",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/init(client:additionalparameters:)",
                    "title" : "init(client: OAuth2Client, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/init(issuerurl:clientid:scope:additionalparameters:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/additionalparameters",
                    "title" : "let additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/client",
                    "title" : "let client: OAuth2Client",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/context-swift.property",
                    "title" : "var context: TokenExchangeFlow.Context?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/delegatecollection",
                    "title" : "let delegateCollection: DelegateCollection<any AuthenticationDelegate>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/isauthenticating",
                    "title" : "var isAuthenticating: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/start(with:context:)",
                    "title" : "func start(with: [TokenExchangeFlow.TokenType], context: TokenExchangeFlow.Context) async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/start(with:context:completion:)",
                    "title" : "func start(with: [TokenExchangeFlow.TokenType], context: TokenExchangeFlow.Context, completion: (Result<Token, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/audience\/custom(_:)",
                        "title" : "case custom(String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/audience\/default",
                        "title" : "case `default`",
                        "type" : "case"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/audience\/stringvalue",
                        "title" : "var stringValue: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/audience",
                    "title" : "TokenExchangeFlow.Audience",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/actor(type:value:)",
                        "title" : "case actor(type: TokenExchangeFlow.TokenType.Kind, value: String)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/subject(type:value:)",
                        "title" : "case subject(type: TokenExchangeFlow.TokenType.Kind, value: String)",
                        "type" : "case"
                      },
                      {
                        "title" : "Enumerations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Enumeration Cases",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind\/accesstoken",
                            "title" : "case accessToken",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind\/devicesecret",
                            "title" : "case deviceSecret",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind\/idtoken",
                            "title" : "case idToken",
                            "type" : "case"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind\/refreshtoken",
                            "title" : "case refreshToken",
                            "type" : "case"
                          },
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind\/init(rawvalue:)",
                            "title" : "init?(rawValue: String)",
                            "type" : "init"
                          },
                          {
                            "title" : "Default Implementations",
                            "type" : "groupMarker"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Operators",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind\/!=(_:_:)",
                                "title" : "static func != (Self, Self) -> Bool",
                                "type" : "op"
                              }
                            ],
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind\/equatable-implementations",
                            "title" : "Equatable Implementations",
                            "type" : "symbol"
                          },
                          {
                            "children" : [
                              {
                                "title" : "Instance Properties",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind\/hashvalue",
                                "title" : "var hashValue: Int",
                                "type" : "property"
                              },
                              {
                                "title" : "Instance Methods",
                                "type" : "groupMarker"
                              },
                              {
                                "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind\/hash(into:)",
                                "title" : "func hash(into: inout Hasher)",
                                "type" : "method"
                              }
                            ],
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind\/rawrepresentable-implementations",
                            "title" : "RawRepresentable Implementations",
                            "type" : "symbol"
                          }
                        ],
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype\/kind",
                        "title" : "TokenExchangeFlow.TokenType.Kind",
                        "type" : "enum"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/tokentype",
                    "title" : "TokenExchangeFlow.TokenType",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/api(client:didsend:received:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/api(client:didsend:received:requestid:ratelimit:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/api(client:shouldretry:)",
                        "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/api(client:willsend:)",
                        "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/apiclientdelegate-implementations",
                    "title" : "APIClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/assertisolated(_:file:line:)",
                        "title" : "func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/assumeisolated(_:file:line:)",
                        "title" : "func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/preconditionisolated(_:file:line:)",
                        "title" : "func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/actor-implementations",
                    "title" : "Actor Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Structures",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/context-swift.struct\/init(audience:acrvalues:additionalparameters:)",
                            "title" : "init(audience: TokenExchangeFlow.Audience, acrValues: ClaimCollection<[String]?>, additionalParameters: [String : any APIRequestArgument]?)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/context-swift.struct\/acrvalues",
                            "title" : "var acrValues: [String]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/context-swift.struct\/additionalparameters",
                            "title" : "var additionalParameters: [String : any APIRequestArgument]?",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/context-swift.struct\/audience",
                            "title" : "var audience: TokenExchangeFlow.Audience",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/context-swift.struct",
                        "title" : "TokenExchangeFlow.Context",
                        "type" : "struct"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/init()",
                        "title" : "init() throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/init(plist:)",
                        "title" : "init(plist: URL) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/reset(completion:)",
                        "title" : "func reset(completion: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/authenticationflow-implementations",
                    "title" : "AuthenticationFlow Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/oauth(client:didrefresh:replacedwith:)",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/oauth(client:willrefresh:)",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/oauth2clientdelegate-implementations",
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/add(delegate:)",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/remove(delegate:)",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/usesdelegatecollection-implementations",
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/tokenexchangeflow",
                "title" : "TokenExchangeFlow",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/audience\/custom(_:)",
                    "title" : "case custom(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/audience\/default",
                    "title" : "case `default`",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/audience\/stringvalue",
                    "title" : "var stringValue: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/tokenexchangeflow\/audience",
                "title" : "TokenExchangeFlow.Audience",
                "type" : "enum"
              },
              {
                "title" : "Resource Owner Flow",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/init(client:additionalparameters:)",
                    "title" : "init(client: OAuth2Client, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/init(issuerurl:clientid:scope:additionalparameters:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/additionalparameters",
                    "title" : "let additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/client",
                    "title" : "let client: OAuth2Client",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/context-swift.property",
                    "title" : "var context: ResourceOwnerFlow.Context?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/delegatecollection",
                    "title" : "let delegateCollection: DelegateCollection<any AuthenticationDelegate>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/isauthenticating",
                    "title" : "var isAuthenticating: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/start(username:password:context:)",
                    "title" : "func start(username: String, password: String, context: ResourceOwnerFlow.Context) async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/start(username:password:context:completion:)",
                    "title" : "func start(username: String, password: String, context: ResourceOwnerFlow.Context, completion: (Result<Token, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/context-swift.typealias",
                    "title" : "ResourceOwnerFlow.Context",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/api(client:didsend:received:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/api(client:didsend:received:requestid:ratelimit:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/api(client:shouldretry:)",
                        "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/api(client:willsend:)",
                        "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/apiclientdelegate-implementations",
                    "title" : "APIClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/assertisolated(_:file:line:)",
                        "title" : "func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/assumeisolated(_:file:line:)",
                        "title" : "func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/preconditionisolated(_:file:line:)",
                        "title" : "func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/actor-implementations",
                    "title" : "Actor Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/init()",
                        "title" : "init() throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/init(plist:)",
                        "title" : "init(plist: URL) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/reset(completion:)",
                        "title" : "func reset(completion: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/authenticationflow-implementations",
                    "title" : "AuthenticationFlow Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/oauth(client:didrefresh:replacedwith:)",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/oauth(client:willrefresh:)",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/oauth2clientdelegate-implementations",
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/add(delegate:)",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/remove(delegate:)",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/resourceownerflow\/delegate",
                        "title" : "ResourceOwnerFlow.Delegate",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/resourceownerflow\/usesdelegatecollection-implementations",
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/resourceownerflow",
                "title" : "ResourceOwnerFlow",
                "type" : "class"
              },
              {
                "title" : "Session Token Flow",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/init(client:additionalparameters:)",
                    "title" : "init(client: OAuth2Client, additionalParameters: [String : any APIRequestArgument]?) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/init(issuerurl:clientid:scope:redirecturi:additionalparameters:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, redirectUri: URL, additionalParameters: [String : any APIRequestArgument]?) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/additionalparameters",
                    "title" : "let additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/client",
                    "title" : "let client: OAuth2Client",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/context-swift.property",
                    "title" : "var context: SessionTokenFlow.Context?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/delegatecollection",
                    "title" : "let delegateCollection: DelegateCollection<any SessionTokenFlow.Delegate>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/isauthenticating",
                    "title" : "var isAuthenticating: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/start(with:context:)",
                    "title" : "func start(with: String, context: SessionTokenFlow.Context) async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/start(with:context:completion:)",
                    "title" : "func start(with: String, context: SessionTokenFlow.Context, completion: (Result<Token, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/context-swift.typealias",
                    "title" : "SessionTokenFlow.Context",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/api(client:didsend:received:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/api(client:didsend:received:requestid:ratelimit:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/api(client:shouldretry:)",
                        "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/api(client:willsend:)",
                        "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/apiclientdelegate-implementations",
                    "title" : "APIClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/assertisolated(_:file:line:)",
                        "title" : "func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/assumeisolated(_:file:line:)",
                        "title" : "func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/preconditionisolated(_:file:line:)",
                        "title" : "func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/actor-implementations",
                    "title" : "Actor Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/init()",
                        "title" : "init() throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/init(plist:)",
                        "title" : "init(plist: URL) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/reset(completion:)",
                        "title" : "func reset(completion: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/authenticationflow-implementations",
                    "title" : "AuthenticationFlow Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/oauth(client:didrefresh:replacedwith:)",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/oauth(client:willrefresh:)",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/oauth2clientdelegate-implementations",
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/add(delegate:)",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/remove(delegate:)",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/delegate",
                        "title" : "SessionTokenFlow.Delegate",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/sessiontokenflow\/usesdelegatecollection-implementations",
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/sessiontokenflow",
                "title" : "SessionTokenFlow",
                "type" : "class"
              },
              {
                "title" : "Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/init(client:additionalparameters:)",
                    "title" : "init(client: OAuth2Client, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/init(issuerurl:clientid:scope:additionalparameters:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/additionalparameters",
                    "title" : "let additionalParameters: [String : any APIRequestArgument]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/client",
                    "title" : "let client: OAuth2Client",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/context-swift.property",
                    "title" : "var context: JWTAuthorizationFlow.Context?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/delegatecollection",
                    "title" : "let delegateCollection: DelegateCollection<any AuthenticationDelegate>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/isauthenticating",
                    "title" : "var isAuthenticating: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/start(with:context:)",
                    "title" : "func start(with: JWT, context: JWTAuthorizationFlow.Context) async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/start(with:context:completion:)",
                    "title" : "func start(with: JWT, context: JWTAuthorizationFlow.Context, completion: (Result<Token, OAuth2Error>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/context-swift.typealias",
                    "title" : "JWTAuthorizationFlow.Context",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/api(client:didsend:received:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/api(client:didsend:received:requestid:ratelimit:)",
                        "title" : "func api(client: any APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/api(client:shouldretry:)",
                        "title" : "func api(client: any APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/api(client:willsend:)",
                        "title" : "func api(client: any APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/apiclientdelegate-implementations",
                    "title" : "APIClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/assertisolated(_:file:line:)",
                        "title" : "func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/assumeisolated(_:file:line:)",
                        "title" : "func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/preconditionisolated(_:file:line:)",
                        "title" : "func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/actor-implementations",
                    "title" : "Actor Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/init()",
                        "title" : "init() throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/init(plist:)",
                        "title" : "init(plist: URL) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/reset(completion:)",
                        "title" : "func reset(completion: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/authenticationflow-implementations",
                    "title" : "AuthenticationFlow Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/oauth(client:didrefresh:replacedwith:)",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/oauth(client:willrefresh:)",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/oauth2clientdelegate-implementations",
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/add(delegate:)",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/remove(delegate:)",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/delegate",
                        "title" : "JWTAuthorizationFlow.Delegate",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow\/usesdelegatecollection-implementations",
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/jwtauthorizationflow",
                "title" : "JWTAuthorizationFlow",
                "type" : "class"
              },
              {
                "title" : "Protocols",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/logoutflow\/inprogress",
                    "title" : "var inProgress: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/logoutflow\/cancel()",
                    "title" : "func cancel()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/logoutflow\/reset()",
                    "title" : "func reset()",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/logoutflow",
                "title" : "LogoutFlow",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oauth2auth\/logoutflowdelegate\/logout(flow:received:)",
                    "title" : "func logout<Flow>(flow: Flow, received: OAuth2Error)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/logoutflowdelegate",
                "title" : "LogoutFlowDelegate",
                "type" : "protocol"
              },
              {
                "title" : "Extended Modules",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Extended Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authfoundation\/oauth2client\/authorizationcodeflow(additionalparameters:)",
                        "title" : "func authorizationCodeFlow(additionalParameters: [String : String]?) throws -> AuthorizationCodeFlow",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authfoundation\/oauth2client\/deviceauthorizationflow(additionalparameters:)",
                        "title" : "func deviceAuthorizationFlow(additionalParameters: [String : String]?) -> DeviceAuthorizationFlow",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authfoundation\/oauth2client\/jwtauthorizationflow(additionalparameters:)",
                        "title" : "func jwtAuthorizationFlow(additionalParameters: [String : String]?) -> JWTAuthorizationFlow",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authfoundation\/oauth2client\/resourceownerflow(additionalparameters:)",
                        "title" : "func resourceOwnerFlow(additionalParameters: [String : String]?) -> ResourceOwnerFlow",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authfoundation\/oauth2client\/sessionlogoutflow(additionalparameters:)",
                        "title" : "func sessionLogoutFlow(additionalParameters: [String : any APIRequestArgument]?) -> SessionLogoutFlow",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authfoundation\/oauth2client\/sessiontokenflow(additionalparameters:)",
                        "title" : "func sessionTokenFlow(additionalParameters: [String : String]?) throws -> SessionTokenFlow",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/authfoundation\/oauth2client\/tokenexchangeflow(additionalparameters:)",
                        "title" : "func tokenExchangeFlow(additionalParameters: [String : String]?) -> TokenExchangeFlow",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/authfoundation\/oauth2client",
                    "title" : "OAuth2Client",
                    "type" : "extension"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/authfoundation",
                "title" : "AuthFoundation",
                "type" : "extension"
              },
              {
                "children" : [
                  {
                    "title" : "Extended Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oauth2auth\/foundation\/url\/authorizationcode(state:configuration:)",
                        "title" : "func authorizationCode(state: String, configuration: OAuth2Client.Configuration?) throws -> String",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oauth2auth\/foundation\/url",
                    "title" : "URL",
                    "type" : "extension"
                  }
                ],
                "path" : "\/documentation\/oauth2auth\/foundation",
                "title" : "Foundation",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/oauth2auth",
            "title" : "OAuth2Auth",
            "type" : "module"
          },
          {
            "children" : [
              {
                "title" : "Essentials",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Essentials",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/configuringyourclient",
                    "title" : "Configuring Your Client",
                    "type" : "article"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/shared",
                    "title" : "static var shared: BrowserSignin?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/ephemeralsession",
                    "title" : "var ephemeralSession: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/init()",
                    "title" : "convenience init() throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/init(plist:)",
                    "title" : "convenience init(plist: URL) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/init(issuerurl:clientid:scope:redirecturi:logoutredirecturi:additionalparameters:)",
                    "title" : "convenience init(issuerURL: URL, clientId: String, scope: ClaimCollection<[String]>, redirectUri: URL, logoutRedirectUri: URL?, additionalParameters: [String : any APIRequestArgument]?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/init(loginflow:logoutflow:)",
                    "title" : "init(loginFlow: AuthorizationCodeFlow, logoutFlow: SessionLogoutFlow?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Sign In",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/signin(from:context:)",
                    "title" : "func signIn(from: BrowserSignin.WindowAnchor?, context: AuthorizationCodeFlow.Context) async throws -> Token",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/signin(from:context:completion:)",
                    "title" : "func signIn(from: BrowserSignin.WindowAnchor?, context: AuthorizationCodeFlow.Context, completion: (Result<Token, BrowserSigninError>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Sign Out Using Credential",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/howtosignout",
                    "title" : "How To Sign Out",
                    "type" : "article"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/signout(from:credential:context:)",
                    "title" : "func signOut(from: BrowserSignin.WindowAnchor?, credential: Credential?, context: SessionLogoutFlow.Context) async throws -> URL",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/signout(from:credential:context:completion:)",
                    "title" : "func signOut(from: BrowserSignin.WindowAnchor?, credential: Credential?, context: SessionLogoutFlow.Context, completion: (Result<URL, BrowserSigninError>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Sign Out Using Token",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/howtosignout",
                    "title" : "How To Sign Out",
                    "type" : "article"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/signout(from:token:context:)",
                    "title" : "func signOut(from: BrowserSignin.WindowAnchor?, token: Token?, context: SessionLogoutFlow.Context) async throws -> URL",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/signout(from:token:context:completion:)",
                    "title" : "func signOut(from: BrowserSignin.WindowAnchor?, token: Token, context: SessionLogoutFlow.Context, completion: (Result<URL, BrowserSigninError>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Sign Out Using Custom Settings",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/howtosignout",
                    "title" : "How To Sign Out",
                    "type" : "article"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/signout(from:context:)",
                    "title" : "func signOut(from: BrowserSignin.WindowAnchor?, context: SessionLogoutFlow.Context) async throws -> URL",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/signout(from:context:completion:)",
                    "title" : "func signOut(from: BrowserSignin.WindowAnchor?, context: SessionLogoutFlow.Context, completion: (Result<URL, BrowserSigninError>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "title" : "Customizing OAuth2 Flows",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/signinflow",
                    "title" : "let signInFlow: AuthorizationCodeFlow",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/signoutflow",
                    "title" : "let signOutFlow: SessionLogoutFlow?",
                    "type" : "property"
                  },
                  {
                    "title" : "Protocols",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersignin\/provider\/cancel()",
                        "title" : "func cancel()",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersignin\/provider\/open(authorizeurl:redirecturi:)",
                        "title" : "func open(authorizeUrl: URL, redirectUri: URL) async throws -> URL",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/browsersignin\/browsersignin\/provider",
                    "title" : "BrowserSignin.Provider",
                    "type" : "protocol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersignin\/providerfactory-swift.protocol\/createwebauthenticationprovider(for:from:options:)",
                        "title" : "static func createWebAuthenticationProvider(for: BrowserSignin, from: BrowserSignin.WindowAnchor?, options: BrowserSignin.Option) async throws -> (any BrowserSignin.Provider)?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/browsersignin\/browsersignin\/providerfactory-swift.protocol",
                    "title" : "BrowserSignin.ProviderFactory",
                    "type" : "protocol"
                  },
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersignin\/option\/init(rawvalue:)",
                        "title" : "init(rawValue: Int)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersignin\/option\/rawvalue",
                        "title" : "let rawValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersignin\/option\/ephemeralsession",
                        "title" : "static let ephemeralSession: BrowserSignin.Option",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/browsersignin\/browsersignin\/option\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/init()",
                            "title" : "init()",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/contains(_:)",
                            "title" : "func contains(Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/formintersection(_:)",
                            "title" : "func formIntersection(Self)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/formsymmetricdifference(_:)",
                            "title" : "func formSymmetricDifference(Self)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/formunion(_:)",
                            "title" : "func formUnion(Self)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/insert(_:)",
                            "title" : "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/intersection(_:)",
                            "title" : "func intersection(Self) -> Self",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/remove(_:)",
                            "title" : "func remove(Self.Element) -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/symmetricdifference(_:)",
                            "title" : "func symmetricDifference(Self) -> Self",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/union(_:)",
                            "title" : "func union(Self) -> Self",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/update(with:)",
                            "title" : "func update(with: Self.Element) -> Self.Element?",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/browsersignin\/browsersignin\/option\/optionset-implementations",
                        "title" : "OptionSet Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/init(_:)",
                            "title" : "init<S>(S)",
                            "type" : "init"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/init(arrayliteral:)",
                            "title" : "init(arrayLiteral: Self.Element...)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/isempty",
                            "title" : "var isEmpty: Bool",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/isdisjoint(with:)",
                            "title" : "func isDisjoint(with: Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/isstrictsubset(of:)",
                            "title" : "func isStrictSubset(of: Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/isstrictsuperset(of:)",
                            "title" : "func isStrictSuperset(of: Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/issubset(of:)",
                            "title" : "func isSubset(of: Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/issuperset(of:)",
                            "title" : "func isSuperset(of: Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/subtract(_:)",
                            "title" : "func subtract(Self)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/browsersignin\/browsersignin\/option\/subtracting(_:)",
                            "title" : "func subtracting(Self) -> Self",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/browsersignin\/browsersignin\/option\/setalgebra-implementations",
                        "title" : "SetAlgebra Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/browsersignin\/browsersignin\/option",
                    "title" : "BrowserSignin.Option",
                    "type" : "struct"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/options",
                    "title" : "var options: BrowserSignin.Option",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/cancel()",
                    "title" : "func cancel() async",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/windowanchor",
                    "title" : "BrowserSignin.WindowAnchor",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersignin\/providerfactory-swift.type.property",
                    "title" : "static var providerFactory: any BrowserSignin.ProviderFactory.Type",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersignin\/createwebauthenticationprovider(for:from:options:)",
                        "title" : "static func createWebAuthenticationProvider(for: BrowserSignin, from: BrowserSignin.WindowAnchor?, options: BrowserSignin.Option) throws -> (any BrowserSignin.Provider)?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/browsersignin\/browsersignin\/providerfactory-implementations",
                    "title" : "ProviderFactory Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/browsersignin\/browsersignin",
                "title" : "BrowserSignin",
                "type" : "class"
              },
              {
                "path" : "\/documentation\/browsersignin\/configuringyourclient",
                "title" : "Configuring Your Client",
                "type" : "article"
              },
              {
                "title" : "Customizations",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/browsersignin\/customizingauthorizationurl",
                "title" : "Customizing the Authorization URL",
                "type" : "article"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/authenticationprovider(error:)",
                    "title" : "case authenticationProvider(error: any Error)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/cannotcomposeauthenticationurl",
                    "title" : "case cannotComposeAuthenticationURL",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/cannotstartbrowsersession",
                    "title" : "case cannotStartBrowserSession",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/generic(error:)",
                    "title" : "case generic(error: any Error)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/genericerror(message:)",
                    "title" : "case genericError(message: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/invalidredirectscheme(_:)",
                    "title" : "case invalidRedirectScheme(String?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/missingidtoken",
                    "title" : "case missingIdToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/noauthenticatorproviderresonse",
                    "title" : "case noAuthenticatorProviderResonse",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/nocompatibleauthenticationproviders",
                    "title" : "case noCompatibleAuthenticationProviders",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/nosignoutflowprovided",
                    "title" : "case noSignOutFlowProvided",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/oauth2(error:)",
                    "title" : "case oauth2(error: OAuth2Error)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/servererror(_:)",
                    "title" : "case serverError(OAuth2ServerError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/usercancelledlogin(_:)",
                    "title" : "case userCancelledLogin(String?)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersigninerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersigninerror\/==(_:_:)",
                        "title" : "static func == (BrowserSigninError, BrowserSigninError) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersigninerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersigninerror\/errordescription",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersigninerror\/errordescription-5tyqz",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersigninerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersigninerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/browsersignin\/browsersigninerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/browsersignin\/browsersigninerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/browsersignin\/browsersigninerror",
                "title" : "BrowserSigninError",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/browsersignin",
            "title" : "BrowserSignin",
            "type" : "module"
          }
        ],
        "path" : "\/documentation",
        "title" : "OktaClient",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 2
  }
}