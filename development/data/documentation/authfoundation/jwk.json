{
  "abstract" : [
    {
      "text" : "Describes an individual key from an authorization server, which can be used to validate tokens or encrypt content.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14AuthFoundation3JWKV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "JWK"
      }
    ],
    "modules" : [
      {
        "name" : "AuthFoundation"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "JWK"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "JWK"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "JWK"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "At this time, this class only supports RSA Public Keys.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Warning",
          "style" : "warning",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/AuthFoundation\/Se",
        "doc:\/\/AuthFoundation\/SE",
        "doc:\/\/AuthFoundation\/SQ",
        "doc:\/\/AuthFoundation\/SH",
        "doc:\/\/AuthFoundation\/s12IdentifiableP",
        "doc:\/\/AuthFoundation\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "JWT-and-Token-Verification",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/WorkingWithClaims",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWKS",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWTClaim",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSONClaimContainer",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSON",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/AnyJSON",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSONRepresentable",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/IsClaim",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/Expires"
      ],
      "title" : "JWT and Token Verification"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/algorithm-swift.property",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/id",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/rsaExponent",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/rsaModulus",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/type",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/usage-swift.property"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/verify(token:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "anchor" : "Type-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/validator"
      ],
      "title" : "Type Properties"
    },
    {
      "anchor" : "Enumerations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/Algorithm-swift.enum",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/KeyType",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/Usage-swift.enum"
      ],
      "title" : "Enumerations"
    },
    {
      "anchor" : "Default-Implementations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/Equatable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/authfoundation\/jwk"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://AuthFoundation/SE": {
  "identifier" : "doc:\/\/AuthFoundation\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/SH": {
  "identifier" : "doc:\/\/AuthFoundation\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/SQ": {
  "identifier" : "doc:\/\/AuthFoundation\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/Se": {
  "identifier" : "doc:\/\/AuthFoundation\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/documentation/AuthFoundation": {
  "abstract" : [
    {
      "text" : "Library that provides foundational features used by Oktaâ€™s authentication libraries, as well as APIs used to work with tokens and user credentials.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "AuthFoundation",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation"
},
"doc://AuthFoundation/documentation/AuthFoundation/AnyJSON": {
  "abstract" : [
    {
      "text" : "Efficiently represents ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSON",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " values, and exchanges between its String or Data representations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyJSON"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/AnyJSON",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyJSON"
    }
  ],
  "role" : "symbol",
  "title" : "AnyJSON",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/anyjson"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection": {
  "abstract" : [
    {
      "text" : "Indicates a special type of claim whose value is interchangable between a whitespace-separated value, or an array of values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimCollection"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClaimCollection"
    }
  ],
  "role" : "symbol",
  "title" : "ClaimCollection",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimConvertable": {
  "abstract" : [
    {
      "text" : "Indicates a type can be consumed from a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object and converted to the indicated type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimConvertable"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClaimConvertable"
    }
  ],
  "role" : "symbol",
  "title" : "ClaimConvertable",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimconvertable"
},
"doc://AuthFoundation/documentation/AuthFoundation/Expires": {
  "abstract" : [
    {
      "text" : "Protocol that indicates an object is capable of expiring.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Expires"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/Expires",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Expires"
    }
  ],
  "role" : "symbol",
  "title" : "Expires",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/expires"
},
"doc://AuthFoundation/documentation/AuthFoundation/HasClaims": {
  "abstract" : [
    {
      "text" : "Used by classes that contains OAuth2 claims.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HasClaims"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HasClaims"
    }
  ],
  "role" : "symbol",
  "title" : "HasClaims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/hasclaims"
},
"doc://AuthFoundation/documentation/AuthFoundation/HasClaims/ClaimType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation7IsClaimP",
      "text" : "IsClaim"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/ClaimType",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "ClaimType",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/hasclaims\/claimtype"
},
"doc://AuthFoundation/documentation/AuthFoundation/IsClaim": {
  "abstract" : [
    {
      "text" : "Indicates a type that can be used as an enum value for the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/ClaimType",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " associated type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IsClaim"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/IsClaim",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "IsClaim"
    }
  ],
  "role" : "symbol",
  "title" : "IsClaim",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/isclaim"
},
"doc://AuthFoundation/documentation/AuthFoundation/JSON": {
  "abstract" : [
    {
      "text" : "Represent mixed JSON values as instances of ",
      "type" : "text"
    },
    {
      "code" : "Any",
      "type" : "codeVoice"
    },
    {
      "text" : ". This is used to expose API response values to Swift native types where Swift enums are not supported.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSON"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSON",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSON"
    }
  ],
  "role" : "symbol",
  "title" : "JSON",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/json"
},
"doc://AuthFoundation/documentation/AuthFoundation/JSONClaimContainer": {
  "abstract" : [
    {
      "text" : "Protocol used to define shared behavior when an object can contain claims.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSONClaimContainer"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSONClaimContainer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSONClaimContainer"
    }
  ],
  "role" : "symbol",
  "title" : "JSONClaimContainer",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jsonclaimcontainer"
},
"doc://AuthFoundation/documentation/AuthFoundation/JSONRepresentable": {
  "abstract" : [
    {
      "text" : "Represents types that are interoperable or usable with JSON.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSONRepresentable"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSONRepresentable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSONRepresentable"
    }
  ],
  "role" : "symbol",
  "title" : "JSONRepresentable",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jsonrepresentable"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK": {
  "abstract" : [
    {
      "text" : "Describes an individual key from an authorization server, which can be used to validate tokens or encrypt content.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWK"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWK"
    }
  ],
  "role" : "symbol",
  "title" : "JWK",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/Algorithm-swift.enum": {
  "abstract" : [
    {
      "text" : "The algorithm this key is intended to be used with.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Algorithm"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/Algorithm-swift.enum",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Algorithm"
    }
  ],
  "role" : "symbol",
  "title" : "JWK.Algorithm",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/equatable-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/KeyType": {
  "abstract" : [
    {
      "text" : "The type of JWK key.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "KeyType"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/KeyType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "KeyType"
    }
  ],
  "role" : "symbol",
  "title" : "JWK.KeyType",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/keytype"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/Usage-swift.enum": {
  "abstract" : [
    {
      "text" : "The intended usage for this key (e.g. signing or encryption).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Usage"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/Usage-swift.enum",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Usage"
    }
  ],
  "role" : "symbol",
  "title" : "JWK.Usage",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/algorithm-swift.property": {
  "abstract" : [
    {
      "text" : "The signing algorithm used with this key.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "algorithm"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWKV",
      "text" : "JWK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWKV9AlgorithmO",
      "text" : "Algorithm"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/algorithm-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "algorithm",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.property"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/id": {
  "abstract" : [
    {
      "text" : "The keyâ€™s ID.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "id"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/id",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "id",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/id"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/rsaExponent": {
  "abstract" : [
    {
      "text" : "The RSA exponent value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rsaExponent"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/rsaExponent",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rsaExponent",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/rsaexponent"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/rsaModulus": {
  "abstract" : [
    {
      "text" : "The RSA modulus value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rsaModulus"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/rsaModulus",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rsaModulus",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/rsamodulus"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/type": {
  "abstract" : [
    {
      "text" : "The type of this key.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "type"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWKV",
      "text" : "JWK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWKV7KeyTypeO",
      "text" : "KeyType"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/type",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "type",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/type"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/usage-swift.property": {
  "abstract" : [
    {
      "text" : "The intended usage for this key.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "usage"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWKV",
      "text" : "JWK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWKV5UsageO",
      "text" : "Usage"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/usage-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "usage",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/usage-swift.property"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/validator": {
  "abstract" : [
    {
      "text" : "The validator instance used to perform verification steps on JWT tokens.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "validator"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation12JWKValidatorP",
      "text" : "JWKValidator"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/validator",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "validator",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/validator"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK/verify(token:)": {
  "abstract" : [
    {
      "text" : "Attempts to verify the given token, using the appropriate signing algorithm described.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "verify"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "token"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation3JWTV",
      "text" : "JWT"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK\/verify(token:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "verify(token:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk\/verify(token:)"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWKS": {
  "abstract" : [
    {
      "text" : "Describes the collection of keys associated with an authorization server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWKS"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWKS",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWKS"
    }
  ],
  "role" : "symbol",
  "title" : "JWKS",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwks"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT": {
  "abstract" : [
    {
      "text" : "Represents the contents of a JWT token, providing access to its payload contents.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWT"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWT"
    }
  ],
  "role" : "symbol",
  "title" : "JWT",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWTClaim": {
  "abstract" : [
    {
      "text" : "List of registered and public claims.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWTClaim"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWTClaim",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWTClaim"
    }
  ],
  "role" : "symbol",
  "title" : "JWTClaim",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwtclaim"
},
"doc://AuthFoundation/documentation/AuthFoundation/WorkingWithClaims": {
  "abstract" : [
    {
      "text" : "Using Claims on the various types included in OIDC and AuthFoundation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/WorkingWithClaims",
  "kind" : "article",
  "role" : "article",
  "title" : "Working with Claims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/workingwithclaims"
},
"doc://AuthFoundation/s12IdentifiableP": {
  "identifier" : "doc:\/\/AuthFoundation\/s12IdentifiableP",
  "title" : "Swift.Identifiable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/s8SendableP": {
  "identifier" : "doc:\/\/AuthFoundation\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}