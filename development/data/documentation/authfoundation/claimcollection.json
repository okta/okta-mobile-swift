{
  "abstract" : [
    {
      "text" : "Indicates a special type of claim whose value is interchangable between a whitespace-separated value, or an array of values.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14AuthFoundation15ClaimCollectionV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ClaimCollection"
      }
    ],
    "modules" : [
      {
        "name" : "AuthFoundation"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ClaimCollection"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "ClaimCollection"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@propertyWrapper"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ClaimCollection"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Container"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Container"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "ClaimCollectionContainer"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This is used to simplify interactions with Claim values whose raw representation is the claim’s string value, separated by whitespace. This enables the conversion between the string representation, as sent to\/received from the server, and the array of claims which it represents.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/rawValue-swift.property",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " of the collection returns the whitespace-separated string representation of the value this wrapper contains, which can be accessed using the projected value of the property. For example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "config.scope.append(\"profile\")",
            "print(config.$scope.rawValue)"
          ],
          "syntax" : null,
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequestArgument",
        "doc:\/\/AuthFoundation\/s8CopyableP",
        "doc:\/\/AuthFoundation\/Se",
        "doc:\/\/AuthFoundation\/SE",
        "doc:\/\/AuthFoundation\/SQ",
        "doc:\/\/AuthFoundation\/s25ExpressibleByArrayLiteralP",
        "doc:\/\/AuthFoundation\/s43ExpressibleByExtendedGraphemeClusterLiteralP",
        "doc:\/\/AuthFoundation\/s23ExpressibleByNilLiteralP",
        "doc:\/\/AuthFoundation\/s26ExpressibleByStringLiteralP",
        "doc:\/\/AuthFoundation\/s33ExpressibleByUnicodeScalarLiteralP",
        "doc:\/\/AuthFoundation\/SH",
        "doc:\/\/AuthFoundation\/SY",
        "doc:\/\/AuthFoundation\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "JWT-and-Token-Verification",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/WorkingWithClaims",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWKS",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWTClaim",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSONClaimContainer",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/IsClaim",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/Expires"
      ],
      "title" : "JWT and Token Verification"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Initializers",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/init(rawValue:)",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/init(wrappedValue:)"
      ],
      "title" : "Initializers"
    },
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/projectedValue",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/wrappedValue"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Default-Implementations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/Equatable-Implementations",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/ExpressibleByArrayLiteral-Implementations",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/ExpressibleByStringLiteral-Implementations",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/ExpressibleByUnicodeScalarLiteral-Implementations",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/Hashable-Implementations",
        "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/RawRepresentable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/authfoundation\/claimcollection"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://AuthFoundation/SE": {
  "identifier" : "doc:\/\/AuthFoundation\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/SH": {
  "identifier" : "doc:\/\/AuthFoundation\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/SQ": {
  "identifier" : "doc:\/\/AuthFoundation\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/SY": {
  "identifier" : "doc:\/\/AuthFoundation\/SY",
  "title" : "Swift.RawRepresentable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/Se": {
  "identifier" : "doc:\/\/AuthFoundation\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/documentation/AuthFoundation": {
  "abstract" : [
    {
      "text" : "Library that provides foundational features used by Okta’s authentication libraries, as well as APIs used to work with tokens and user credentials.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "AuthFoundation",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation"
},
"doc://AuthFoundation/documentation/AuthFoundation/APIRequest": {
  "abstract" : [
    {
      "text" : "Abstract protocol defining the structure of an API request.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "APIRequest"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "APIRequest"
    }
  ],
  "role" : "symbol",
  "title" : "APIRequest",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/apirequest"
},
"doc://AuthFoundation/documentation/AuthFoundation/APIRequest/headers": {
  "abstract" : [
    {
      "text" : "Optional HTTP headers to supply.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "headers"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation18APIRequestArgumentP",
      "text" : "APIRequestArgument"
    },
    {
      "kind" : "text",
      "text" : ")?]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest\/headers",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "headers",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/apirequest\/headers"
},
"doc://AuthFoundation/documentation/AuthFoundation/APIRequest/query-730ld": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "query"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation18APIRequestArgumentP",
      "text" : "APIRequestArgument"
    },
    {
      "kind" : "text",
      "text" : ")?]?"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest\/query-730ld",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "query",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/apirequest\/query-730ld"
},
"doc://AuthFoundation/documentation/AuthFoundation/APIRequestArgument": {
  "abstract" : [
    {
      "text" : "Defines an argument to an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". Used within ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest\/headers",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequest\/query-730ld",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Container",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ClaimCollectionContainer",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Container.RawValue",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "String",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "APIRequestArgument"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/APIRequestArgument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "APIRequestArgument"
    }
  ],
  "role" : "symbol",
  "title" : "APIRequestArgument",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/apirequestargument"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection": {
  "abstract" : [
    {
      "text" : "Indicates a special type of claim whose value is interchangable between a whitespace-separated value, or an array of values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimCollection"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClaimCollection"
    }
  ],
  "role" : "symbol",
  "title" : "ClaimCollection",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/equatable-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/ExpressibleByArrayLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/ExpressibleByArrayLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByArrayLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/expressiblebyarrayliteral-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/ExpressibleByExtendedGraphemeClusterLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/expressiblebyextendedgraphemeclusterliteral-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/ExpressibleByStringLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/ExpressibleByStringLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByStringLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/expressiblebystringliteral-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/ExpressibleByUnicodeScalarLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/ExpressibleByUnicodeScalarLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/expressiblebyunicodescalarliteral-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/Hashable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/Hashable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Hashable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/hashable-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/RawRepresentable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/RawRepresentable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RawRepresentable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/rawrepresentable-implementations"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/init(rawValue:)": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Container",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ClaimCollectionContainer",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Container.RawValue",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "String",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ":)"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/init(rawValue:)",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "keyword",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ":)"
    }
  ],
  "role" : "symbol",
  "title" : "init(rawValue:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/init(rawvalue:)"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/init(wrappedValue:)": {
  "abstract" : [
    {
      "text" : "Initializer accepting a whitespace-separated string representation of the value.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Container",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ClaimCollectionContainer",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ":)"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/init(wrappedValue:)",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "keyword",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ":)"
    }
  ],
  "role" : "symbol",
  "title" : "init(wrappedValue:)",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/init(wrappedvalue:)"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/projectedValue": {
  "abstract" : [
    {
      "text" : "Provides access to the property wrapper.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "projectedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation15ClaimCollectionV",
      "text" : "ClaimCollection"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Container"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/projectedValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "projectedValue",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/projectedvalue"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/rawValue-swift.property": {
  "abstract" : [
    {
      "text" : "The whitespace-separated string representation of the values in this claim list.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Container",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ClaimCollectionContainer",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation15ClaimCollectionV",
      "text" : "ClaimCollection"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Container"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "RawValue"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/rawValue-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rawValue",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/rawvalue-swift.property"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimCollection/wrappedValue": {
  "abstract" : [
    {
      "text" : "The array representation of the claims in this list.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Container"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimCollection\/wrappedValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "wrappedValue",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimcollection\/wrappedvalue"
},
"doc://AuthFoundation/documentation/AuthFoundation/ClaimConvertable": {
  "abstract" : [
    {
      "text" : "Indicates a type can be consumed from a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object and converted to the indicated type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimConvertable"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/ClaimConvertable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClaimConvertable"
    }
  ],
  "role" : "symbol",
  "title" : "ClaimConvertable",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/claimconvertable"
},
"doc://AuthFoundation/documentation/AuthFoundation/Expires": {
  "abstract" : [
    {
      "text" : "Protocol that indicates an object is capable of expiring.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Expires"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/Expires",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Expires"
    }
  ],
  "role" : "symbol",
  "title" : "Expires",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/expires"
},
"doc://AuthFoundation/documentation/AuthFoundation/HasClaims": {
  "abstract" : [
    {
      "text" : "Used by classes that contains OAuth2 claims.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HasClaims"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HasClaims"
    }
  ],
  "role" : "symbol",
  "title" : "HasClaims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/hasclaims"
},
"doc://AuthFoundation/documentation/AuthFoundation/HasClaims/ClaimType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClaimType"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:14AuthFoundation7IsClaimP",
      "text" : "IsClaim"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/ClaimType",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "ClaimType",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/hasclaims\/claimtype"
},
"doc://AuthFoundation/documentation/AuthFoundation/IsClaim": {
  "abstract" : [
    {
      "text" : "Indicates a type that can be used as an enum value for the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/HasClaims\/ClaimType",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " associated type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IsClaim"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/IsClaim",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "IsClaim"
    }
  ],
  "role" : "symbol",
  "title" : "IsClaim",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/isclaim"
},
"doc://AuthFoundation/documentation/AuthFoundation/JSONClaimContainer": {
  "abstract" : [
    {
      "text" : "Protocol used to define shared behavior when an object can contain claims.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSONClaimContainer"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JSONClaimContainer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSONClaimContainer"
    }
  ],
  "role" : "symbol",
  "title" : "JSONClaimContainer",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jsonclaimcontainer"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWK": {
  "abstract" : [
    {
      "text" : "Describes an individual key from an authorization server, which can be used to validate tokens or encrypt content.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWK"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWK",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWK"
    }
  ],
  "role" : "symbol",
  "title" : "JWK",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwk"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWKS": {
  "abstract" : [
    {
      "text" : "Describes the collection of keys associated with an authorization server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWKS"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWKS",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWKS"
    }
  ],
  "role" : "symbol",
  "title" : "JWKS",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwks"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWT": {
  "abstract" : [
    {
      "text" : "Represents the contents of a JWT token, providing access to its payload contents.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWT"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWT",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWT"
    }
  ],
  "role" : "symbol",
  "title" : "JWT",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwt"
},
"doc://AuthFoundation/documentation/AuthFoundation/JWTClaim": {
  "abstract" : [
    {
      "text" : "List of registered and public claims.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JWTClaim"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/JWTClaim",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JWTClaim"
    }
  ],
  "role" : "symbol",
  "title" : "JWTClaim",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/jwtclaim"
},
"doc://AuthFoundation/documentation/AuthFoundation/WorkingWithClaims": {
  "abstract" : [
    {
      "text" : "Using Claims on the various types included in OIDC and AuthFoundation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/AuthFoundation\/documentation\/AuthFoundation\/WorkingWithClaims",
  "kind" : "article",
  "role" : "article",
  "title" : "Working with Claims",
  "type" : "topic",
  "url" : "\/documentation\/authfoundation\/workingwithclaims"
},
"doc://AuthFoundation/s23ExpressibleByNilLiteralP": {
  "identifier" : "doc:\/\/AuthFoundation\/s23ExpressibleByNilLiteralP",
  "title" : "Swift.ExpressibleByNilLiteral",
  "type" : "unresolvable"
},
"doc://AuthFoundation/s25ExpressibleByArrayLiteralP": {
  "identifier" : "doc:\/\/AuthFoundation\/s25ExpressibleByArrayLiteralP",
  "title" : "Swift.ExpressibleByArrayLiteral",
  "type" : "unresolvable"
},
"doc://AuthFoundation/s26ExpressibleByStringLiteralP": {
  "identifier" : "doc:\/\/AuthFoundation\/s26ExpressibleByStringLiteralP",
  "title" : "Swift.ExpressibleByStringLiteral",
  "type" : "unresolvable"
},
"doc://AuthFoundation/s33ExpressibleByUnicodeScalarLiteralP": {
  "identifier" : "doc:\/\/AuthFoundation\/s33ExpressibleByUnicodeScalarLiteralP",
  "title" : "Swift.ExpressibleByUnicodeScalarLiteral",
  "type" : "unresolvable"
},
"doc://AuthFoundation/s43ExpressibleByExtendedGraphemeClusterLiteralP": {
  "identifier" : "doc:\/\/AuthFoundation\/s43ExpressibleByExtendedGraphemeClusterLiteralP",
  "title" : "Swift.ExpressibleByExtendedGraphemeClusterLiteral",
  "type" : "unresolvable"
},
"doc://AuthFoundation/s8CopyableP": {
  "identifier" : "doc:\/\/AuthFoundation\/s8CopyableP",
  "title" : "Swift.Copyable",
  "type" : "unresolvable"
},
"doc://AuthFoundation/s8SendableP": {
  "identifier" : "doc:\/\/AuthFoundation\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}