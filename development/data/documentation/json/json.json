{
  "abstract" : [
    {
      "text" : "Mutable value type representing JSON and its contents in a type-safe and performant way.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/JSON\/documentation\/JSON"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/JSON\/documentation\/JSON\/JSON"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:4JSONAAV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "JSON"
      }
    ],
    "modules" : [
      {
        "name" : "JSON"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "JSON"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "JSON"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "JSON"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "JSON data may be imported from multiple sources, be it Data, String, an alread-parsed JSON object consisting of ",
              "type" : "text"
            },
            {
              "code" : "Any",
              "type" : "codeVoice"
            },
            {
              "text" : " values, or an object conforming to ",
              "type" : "text"
            },
            {
              "code" : "Codable",
              "type" : "codeVoice"
            },
            {
              "text" : ". Transforming data between these states, and dealing with error conditions every time, can be cumbersome.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "This also supports mutation of JSON values, including the ability to regenerate the resulting JSON string notation, while maintaining performance through the use of the “Copy on Write” pattern.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/JSON\/documentation\/JSON\/JSONObjectRepresentable",
        "doc:\/\/JSON\/documentation\/JSON\/JSONValueRepresentable",
        "doc:\/\/JSON\/s8CopyableP",
        "doc:\/\/JSON\/s28CustomDebugStringConvertibleP",
        "doc:\/\/JSON\/Se",
        "doc:\/\/JSON\/SE",
        "doc:\/\/JSON\/SQ",
        "doc:\/\/JSON\/s25ExpressibleByArrayLiteralP",
        "doc:\/\/JSON\/s30ExpressibleByDictionaryLiteralP",
        "doc:\/\/JSON\/SH",
        "doc:\/\/JSON\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "anchor" : "Operators",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/+(_:_:)",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/+=(_:_:)"
      ],
      "title" : "Operators"
    },
    {
      "anchor" : "Initializers",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/init(_:)",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/init(from:)"
      ],
      "title" : "Initializers"
    },
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/data",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/representation-swift.property",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/value-swift.property"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/encode()",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/encode(to:)",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/hash(into:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "anchor" : "Subscripts",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/subscript(_:)"
      ],
      "title" : "Subscripts"
    },
    {
      "anchor" : "Enumerations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/Primitive",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/Representation-swift.enum"
      ],
      "title" : "Enumerations"
    },
    {
      "anchor" : "Default-Implementations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/CustomDebugStringConvertible-Implementations",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/Equatable-Implementations",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/ExpressibleByArrayLiteral-Implementations",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/ExpressibleByDictionaryLiteral-Implementations",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/JSONObjectRepresentable-Implementations",
        "doc:\/\/JSON\/documentation\/JSON\/JSON\/JSONValueRepresentable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/json\/json"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://JSON/SE": {
  "identifier" : "doc:\/\/JSON\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://JSON/SH": {
  "identifier" : "doc:\/\/JSON\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://JSON/SQ": {
  "identifier" : "doc:\/\/JSON\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://JSON/Se": {
  "identifier" : "doc:\/\/JSON\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://JSON/documentation/JSON": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "JSON",
  "type" : "topic",
  "url" : "\/documentation\/json"
},
"doc://JSON/documentation/JSON/JSON": {
  "abstract" : [
    {
      "text" : "Mutable value type representing JSON and its contents in a type-safe and performant way.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSON"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSON"
    }
  ],
  "role" : "symbol",
  "title" : "JSON",
  "type" : "topic",
  "url" : "\/documentation\/json\/json"
},
"doc://JSON/documentation/JSON/JSON/+(_:_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "+"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4JSONAAV",
      "text" : "JSON"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4JSONAAV",
      "text" : "JSON"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4JSONAAV",
      "text" : "JSON"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/+(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "+(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/+(_:_:)"
},
"doc://JSON/documentation/JSON/JSON/+=(_:_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "+="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4JSONAAV",
      "text" : "JSON"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4JSONAAV",
      "text" : "JSON"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/+=(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "+=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/+=(_:_:)"
},
"doc://JSON/documentation/JSON/JSON/CustomDebugStringConvertible-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/CustomDebugStringConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomDebugStringConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/customdebugstringconvertible-implementations"
},
"doc://JSON/documentation/JSON/JSON/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/equatable-implementations"
},
"doc://JSON/documentation/JSON/JSON/ExpressibleByArrayLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/ExpressibleByArrayLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByArrayLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/expressiblebyarrayliteral-implementations"
},
"doc://JSON/documentation/JSON/JSON/ExpressibleByDictionaryLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/ExpressibleByDictionaryLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByDictionaryLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/expressiblebydictionaryliteral-implementations"
},
"doc://JSON/documentation/JSON/JSON/JSONObjectRepresentable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/JSONObjectRepresentable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "JSONObjectRepresentable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/jsonobjectrepresentable-implementations"
},
"doc://JSON/documentation/JSON/JSON/JSONValueRepresentable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/JSONValueRepresentable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "JSONValueRepresentable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/jsonvaluerepresentable-implementations"
},
"doc://JSON/documentation/JSON/JSON/Primitive": {
  "abstract" : [
    {
      "text" : "Represents a primitive value (aka “leaf node”) within a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Primitive"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/Primitive",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Primitive"
    }
  ],
  "role" : "symbol",
  "title" : "JSON.Primitive",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/primitive"
},
"doc://JSON/documentation/JSON/JSON/Representation-swift.enum": {
  "abstract" : [
    {
      "text" : "Indicates the underlying representation used to initialize this ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Representation"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/Representation-swift.enum",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Representation"
    }
  ],
  "role" : "symbol",
  "title" : "JSON.Representation",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/representation-swift.enum"
},
"doc://JSON/documentation/JSON/JSON/Value-swift.enum": {
  "abstract" : [
    {
      "text" : "Represents a value within a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/Value-swift.enum",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Value"
    }
  ],
  "role" : "symbol",
  "title" : "JSON.Value",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/value-swift.enum"
},
"doc://JSON/documentation/JSON/JSON/data": {
  "abstract" : [
    {
      "text" : "Renders the JSON object as ",
      "type" : "text"
    },
    {
      "code" : "Data",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "data"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/data",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "data",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/data"
},
"doc://JSON/documentation/JSON/JSON/encode()": {
  "abstract" : [
    {
      "text" : "Encodes the current ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " values as a JSON data value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "encode"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/encode()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "encode()",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/encode()"
},
"doc://JSON/documentation/JSON/JSON/encode(to:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "encode"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7EncoderP",
      "text" : "Encoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/encode(to:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "encode(to:)",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/encode(to:)"
},
"doc://JSON/documentation/JSON/JSON/hash(into:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hash"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "into"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6HasherV",
      "text" : "Hasher"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/hash(into:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hash(into:)",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/hash(into:)"
},
"doc://JSON/documentation/JSON/JSON/init(_:)": {
  "abstract" : [
    {
      "text" : "Initializes a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object from a JSON-formatted ",
      "type" : "text"
    },
    {
      "code" : "Data",
      "type" : "codeVoice"
    },
    {
      "text" : " value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "_"
    },
    {
      "kind" : "text",
      "text" : ":)"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/init(_:)",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "keyword",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "_"
    },
    {
      "kind" : "text",
      "text" : ":)"
    }
  ],
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/init(_:)"
},
"doc://JSON/documentation/JSON/JSON/init(from:)": {
  "abstract" : [
    {
      "text" : "Initializes a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object from within an existing ",
      "type" : "text"
    },
    {
      "code" : "Decoder",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "init(from:)",
      "type" : "codeVoice"
    },
    {
      "text" : " function.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7DecoderP",
      "text" : "Decoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/init(from:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(from:)",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/init(from:)"
},
"doc://JSON/documentation/JSON/JSON/representation-swift.property": {
  "abstract" : [
    {
      "text" : "Indicates the current representation the JSON value is stored as.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "representation"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4JSONAAV",
      "text" : "JSON"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4JSONAAV14RepresentationO",
      "text" : "Representation"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/representation-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "representation",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/representation-swift.property"
},
"doc://JSON/documentation/JSON/JSON/subscript(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "_"
    },
    {
      "kind" : "text",
      "text" : ":)"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/subscript(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(_:)",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/subscript(_:)"
},
"doc://JSON/documentation/JSON/JSON/value-swift.property": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/Value-swift.enum",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " that constitutes the root of this JSON object.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4JSONAAV",
      "text" : "JSON"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4JSONAAV5ValueO",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/value-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/value-swift.property"
},
"doc://JSON/documentation/JSON/JSONObjectRepresentable": {
  "abstract" : [
    {
      "text" : "Represents ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object value types that can be represented as Swift Foundation types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSONObjectRepresentable"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSONObjectRepresentable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSONObjectRepresentable"
    }
  ],
  "role" : "symbol",
  "title" : "JSONObjectRepresentable",
  "type" : "topic",
  "url" : "\/documentation\/json\/jsonobjectrepresentable"
},
"doc://JSON/documentation/JSON/JSONValueRepresentable": {
  "abstract" : [
    {
      "text" : "Represents ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " primitive value types that can be represented as Swift Foundation types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSONValueRepresentable"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSONValueRepresentable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSONValueRepresentable"
    }
  ],
  "role" : "symbol",
  "title" : "JSONValueRepresentable",
  "type" : "topic",
  "url" : "\/documentation\/json\/jsonvaluerepresentable"
},
"doc://JSON/s25ExpressibleByArrayLiteralP": {
  "identifier" : "doc:\/\/JSON\/s25ExpressibleByArrayLiteralP",
  "title" : "Swift.ExpressibleByArrayLiteral",
  "type" : "unresolvable"
},
"doc://JSON/s28CustomDebugStringConvertibleP": {
  "identifier" : "doc:\/\/JSON\/s28CustomDebugStringConvertibleP",
  "title" : "Swift.CustomDebugStringConvertible",
  "type" : "unresolvable"
},
"doc://JSON/s30ExpressibleByDictionaryLiteralP": {
  "identifier" : "doc:\/\/JSON\/s30ExpressibleByDictionaryLiteralP",
  "title" : "Swift.ExpressibleByDictionaryLiteral",
  "type" : "unresolvable"
},
"doc://JSON/s8CopyableP": {
  "identifier" : "doc:\/\/JSON\/s8CopyableP",
  "title" : "Swift.Copyable",
  "type" : "unresolvable"
},
"doc://JSON/s8SendableP": {
  "identifier" : "doc:\/\/JSON\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}