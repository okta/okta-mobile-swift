{
  "abstract" : [
    {
      "text" : "Returns the object value for the given key, if the receiver is an object.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/JSON\/documentation\/JSON",
        "doc:\/\/JSON\/documentation\/JSON\/JSON"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/value(forKey:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "JSON",
    "externalID" : "s:4JSONAAO5value6forKeyABSS_tKF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "value"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "forKey"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:4JSONAAO",
        "text" : "JSON"
      }
    ],
    "modules" : [
      {
        "name" : "JSON"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "value(forKey:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "value"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "forKey"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "key"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:4JSONAAO",
              "text" : "JSON"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Key to return the value for.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "key"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The old value, if any, that was at that key.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSONError\/objectExpected",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " if the receiver is not an object.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Throws",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/json\/json\/value(forkey:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://JSON/documentation/JSON": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "JSON",
  "type" : "topic",
  "url" : "\/documentation\/json"
},
"doc://JSON/documentation/JSON/JSON": {
  "abstract" : [
    {
      "text" : "Represent mixed JSON values as instances of ",
      "type" : "text"
    },
    {
      "code" : "Any",
      "type" : "codeVoice"
    },
    {
      "text" : ". This is used to expose API response values to Swift native types where Swift enums are not supported.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSON"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSON"
    }
  ],
  "role" : "symbol",
  "title" : "JSON",
  "type" : "topic",
  "url" : "\/documentation\/json\/json"
},
"doc://JSON/documentation/JSON/JSON/value(forKey:)": {
  "abstract" : [
    {
      "text" : "Returns the object value for the given key, if the receiver is an object.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "forKey"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4JSONAAO",
      "text" : "JSON"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSON\/value(forKey:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value(forKey:)",
  "type" : "topic",
  "url" : "\/documentation\/json\/json\/value(forkey:)"
},
"doc://JSON/documentation/JSON/JSONError/objectExpected": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "objectExpected"
    }
  ],
  "identifier" : "doc:\/\/JSON\/documentation\/JSON\/JSONError\/objectExpected",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "JSONError.objectExpected",
  "type" : "topic",
  "url" : "\/documentation\/json\/jsonerror\/objectexpected"
}
}
}